import '/auth/firebase_auth/auth_util.dart';
import '/backend/backend.dart';
import '/backend/schema/structs/index.dart';
import '/flutter_flow/flutter_flow_animations.dart';
import '/flutter_flow/flutter_flow_button_tabbar.dart';
import '/flutter_flow/flutter_flow_drop_down.dart';
import '/flutter_flow/flutter_flow_radio_button.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/flutter_flow/flutter_flow_widgets.dart';
import '/flutter_flow/form_field_controller.dart';
import '/modal/alerta_inspecoes/alerta_inspecoes_widget.dart';
import '/custom_code/actions/index.dart' as actions;
import 'package:aligned_tooltip/aligned_tooltip.dart';
import 'package:badges/badges.dart' as badges;
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:collection/collection.dart';
import 'package:expandable/expandable.dart';
import 'package:flutter/material.dart';
import 'package:flutter/scheduler.dart';
import 'package:flutter_animate/flutter_animate.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:provider/provider.dart';
import 'aplicabilidade_n_r13_model.dart';
export 'aplicabilidade_n_r13_model.dart';

class AplicabilidadeNR13Widget extends StatefulWidget {
  const AplicabilidadeNR13Widget({super.key});

  @override
  State<AplicabilidadeNR13Widget> createState() =>
      _AplicabilidadeNR13WidgetState();
}

class _AplicabilidadeNR13WidgetState extends State<AplicabilidadeNR13Widget>
    with TickerProviderStateMixin {
  late AplicabilidadeNR13Model _model;

  final scaffoldKey = GlobalKey<ScaffoldState>();

  final animationsMap = <String, AnimationInfo>{};

  @override
  void initState() {
    super.initState();
    _model = createModel(context, () => AplicabilidadeNR13Model());

    // On page load action.
    SchedulerBinding.instance.addPostFrameCallback((_) async {
      if (scaffoldKey.currentState!.isDrawerOpen ||
          scaffoldKey.currentState!.isEndDrawerOpen) {
        Navigator.pop(context);
      }
    });

    _model.expandableExpandableController1 =
        ExpandableController(initialExpanded: false);
    _model.pressaoInputCaldeirasTextController ??= TextEditingController();
    _model.pressaoInputCaldeirasFocusNode ??= FocusNode();

    _model.pressaoInputTUBTextController ??= TextEditingController();
    _model.pressaoInputTUBFocusNode ??= FocusNode();

    _model.volumeInputTUBTextController ??= TextEditingController();
    _model.volumeInputTUBFocusNode ??= FocusNode();

    _model.pressaoInputTextController ??= TextEditingController();
    _model.pressaoInputFocusNode ??= FocusNode();

    _model.volumeInputTextController ??= TextEditingController();
    _model.volumeInputFocusNode ??= FocusNode();

    _model.tabBarController = TabController(
      vsync: this,
      length: 6,
      initialIndex: 0,
    )..addListener(() => setState(() {}));

    _model.periodiG1TxtInternaVpFocusNode ??= FocusNode();

    _model.periodiG1TxtExternaVpFocusNode ??= FocusNode();

    _model.periodiG1TxtInternaTubFocusNode ??= FocusNode();

    _model.periodiG1TxtExtTubFocusNode ??= FocusNode();

    _model.periodiG1TxtInternaTanqueFocusNode ??= FocusNode();

    _model.periodiG1TxtExternaTanqueFocusNode ??= FocusNode();

    _model.periodiG1TxtInternaCaldeiraFocusNode ??= FocusNode();

    _model.periodiG1TxtExtCaldeiraFocusNode ??= FocusNode();

    _model.periodiG1TxtInternaTubcaldFocusNode ??= FocusNode();

    _model.periodiG1TxtExternaTubcaldFocusNode ??= FocusNode();

    _model.periodiG1TxtInternaOutrosFocusNode ??= FocusNode();

    _model.periodiG1TxtExtOutrosFocusNode ??= FocusNode();

    animationsMap.addAll({
      'containerOnActionTriggerAnimation': AnimationInfo(
        trigger: AnimationTrigger.onActionTrigger,
        applyInitialState: true,
        effectsBuilder: () => [
          MoveEffect(
            curve: Curves.easeInOut,
            delay: 0.0.ms,
            duration: 300.0.ms,
            begin: Offset(-40.0, 0.0),
            end: Offset(0.0, 0.0),
          ),
        ],
      ),
    });
    setupAnimations(
      animationsMap.values.where((anim) =>
          anim.trigger == AnimationTrigger.onActionTrigger ||
          !anim.applyInitialState),
      this,
    );

    WidgetsBinding.instance.addPostFrameCallback((_) => setState(() {}));
  }

  @override
  void dispose() {
    _model.dispose();

    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    context.watch<FFAppState>();

    return GestureDetector(
      onTap: () => _model.unfocusNode.canRequestFocus
          ? FocusScope.of(context).requestFocus(_model.unfocusNode)
          : FocusScope.of(context).unfocus(),
      child: WillPopScope(
        onWillPop: () async => false,
        child: Scaffold(
          key: scaffoldKey,
          backgroundColor: FlutterFlowTheme.of(context).primaryBackground,
          drawer: Drawer(
            elevation: 16.0,
            child: Container(
              width: 100.0,
              height: MediaQuery.sizeOf(context).height * 1.0,
              decoration: BoxDecoration(
                color: Color(0xFF12151C),
              ),
              child: Column(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.start,
                children: [
                  Container(
                    width: MediaQuery.sizeOf(context).width * 1.0,
                    height: MediaQuery.sizeOf(context).height * 0.94,
                    decoration: BoxDecoration(
                      color: FlutterFlowTheme.of(context).secondaryBackground,
                    ),
                    child: Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(
                          20.0, 20.0, 20.0, 10.0),
                      child: Column(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                0.0, 20.0, 0.0, 0.0),
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                Align(
                                  alignment: AlignmentDirectional(-1.0, 0.0),
                                  child: InkWell(
                                    splashColor: Colors.transparent,
                                    focusColor: Colors.transparent,
                                    hoverColor: Colors.transparent,
                                    highlightColor: Colors.transparent,
                                    onTap: () async {
                                      if (scaffoldKey
                                              .currentState!.isDrawerOpen ||
                                          scaffoldKey
                                              .currentState!.isEndDrawerOpen) {
                                        Navigator.pop(context);
                                      }
                                    },
                                    child: Icon(
                                      Icons.clear,
                                      color: FlutterFlowTheme.of(context)
                                          .secondaryText,
                                      size: 22.0,
                                    ),
                                  ),
                                ),
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      0.0, 0.0, 12.0, 0.0),
                                  child: InkWell(
                                    splashColor: Colors.transparent,
                                    focusColor: Colors.transparent,
                                    hoverColor: Colors.transparent,
                                    highlightColor: Colors.transparent,
                                    onTap: () async {
                                      if ((Theme.of(context).brightness ==
                                              Brightness.light) ==
                                          true) {
                                        setDarkModeSetting(
                                            context, ThemeMode.dark);
                                        if (animationsMap[
                                                'containerOnActionTriggerAnimation'] !=
                                            null) {
                                          animationsMap[
                                                  'containerOnActionTriggerAnimation']!
                                              .controller
                                              .forward(from: 0.0);
                                        }
                                      } else {
                                        setDarkModeSetting(
                                            context, ThemeMode.light);
                                        if (animationsMap[
                                                'containerOnActionTriggerAnimation'] !=
                                            null) {
                                          animationsMap[
                                                  'containerOnActionTriggerAnimation']!
                                              .controller
                                              .reverse();
                                        }
                                      }
                                    },
                                    child: Container(
                                      width: 80.0,
                                      height: 30.0,
                                      decoration: BoxDecoration(
                                        color: Color(0xFFF1F4F8),
                                        borderRadius:
                                            BorderRadius.circular(20.0),
                                        border: Border.all(
                                          color: Color(0xFFE0E3E7),
                                          width: 1.0,
                                        ),
                                      ),
                                      child: Padding(
                                        padding: EdgeInsets.all(2.0),
                                        child: Stack(
                                          alignment:
                                              AlignmentDirectional(0.0, 0.0),
                                          children: [
                                            Align(
                                              alignment: AlignmentDirectional(
                                                  -0.9, 0.0),
                                              child: Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        6.0, 0.0, 0.0, 0.0),
                                                child: Icon(
                                                  Icons.wb_sunny_rounded,
                                                  color: Color(0xFF57636C),
                                                  size: 24.0,
                                                ),
                                              ),
                                            ),
                                            Align(
                                              alignment: AlignmentDirectional(
                                                  1.0, 0.0),
                                              child: Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 0.0, 6.0, 0.0),
                                                child: Icon(
                                                  Icons.mode_night_rounded,
                                                  color: Color(0xFF57636C),
                                                  size: 24.0,
                                                ),
                                              ),
                                            ),
                                            Align(
                                              alignment: AlignmentDirectional(
                                                  1.0, 0.0),
                                              child: Container(
                                                width: 36.0,
                                                height: 36.0,
                                                decoration: BoxDecoration(
                                                  color: Colors.white,
                                                  boxShadow: [
                                                    BoxShadow(
                                                      blurRadius: 4.0,
                                                      color: Color(0x430B0D0F),
                                                      offset: Offset(
                                                        0.0,
                                                        2.0,
                                                      ),
                                                    )
                                                  ],
                                                  borderRadius:
                                                      BorderRadius.circular(
                                                          30.0),
                                                  shape: BoxShape.rectangle,
                                                ),
                                              ).animateOnActionTrigger(
                                                animationsMap[
                                                    'containerOnActionTriggerAnimation']!,
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ),
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                0.0, 20.0, 0.0, 20.0),
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                ClipRRect(
                                  borderRadius: BorderRadius.circular(8.0),
                                  child: Image.asset(
                                    'assets/images/M13_Logo_FINAL.png',
                                    width: 166.0,
                                    height: 151.0,
                                    fit: BoxFit.fitHeight,
                                  ),
                                ),
                              ],
                            ),
                          ),
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                20.0, 10.0, 0.0, 0.0),
                            child: InkWell(
                              splashColor: Colors.transparent,
                              focusColor: Colors.transparent,
                              hoverColor: Colors.transparent,
                              highlightColor: Colors.transparent,
                              onTap: () async {
                                await _model.resetAplicabilidade(context);

                                context.pushNamed('Home');
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Icon(
                                    Icons.grid_view_rounded,
                                    color: FlutterFlowTheme.of(context).primary,
                                    size: 30.0,
                                  ),
                                  Text(
                                    'Dashboard',
                                    style: FlutterFlowTheme.of(context)
                                        .bodyMedium
                                        .override(
                                          fontFamily: 'Open Sans',
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          fontSize: 18.0,
                                          letterSpacing: 0.0,
                                          fontWeight: FontWeight.normal,
                                        ),
                                  ),
                                ].divide(SizedBox(width: 20.0)),
                              ),
                            ),
                          ),
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                20.0, 10.0, 0.0, 0.0),
                            child: InkWell(
                              splashColor: Colors.transparent,
                              focusColor: Colors.transparent,
                              hoverColor: Colors.transparent,
                              highlightColor: Colors.transparent,
                              onTap: () async {
                                await _model.resetAplicabilidade(context);

                                context.pushNamed('Users');
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Icon(
                                    Icons.person_add_alt_outlined,
                                    color: FlutterFlowTheme.of(context).primary,
                                    size: 30.0,
                                  ),
                                  Text(
                                    'Usuários',
                                    style: FlutterFlowTheme.of(context)
                                        .bodyMedium
                                        .override(
                                          fontFamily: 'Open Sans',
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          fontSize: 18.0,
                                          letterSpacing: 0.0,
                                          fontWeight: FontWeight.normal,
                                        ),
                                  ),
                                ].divide(SizedBox(width: 20.0)),
                              ),
                            ),
                          ),
                          Container(
                            color: Color(0x00000000),
                            child: ExpandableNotifier(
                              controller:
                                  _model.expandableExpandableController1,
                              child: ExpandablePanel(
                                header: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      20.0, 10.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Icon(
                                        Icons.add_road,
                                        color: FlutterFlowTheme.of(context)
                                            .primary,
                                        size: 30.0,
                                      ),
                                      Text(
                                        'Cadastro geral',
                                        style: FlutterFlowTheme.of(context)
                                            .bodyMedium
                                            .override(
                                              fontFamily: 'Open Sans',
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .primary,
                                              fontSize: 18.0,
                                              letterSpacing: 0.0,
                                              fontWeight: FontWeight.normal,
                                            ),
                                      ),
                                    ].divide(SizedBox(width: 20.0)),
                                  ),
                                ),
                                collapsed: Container(),
                                expanded: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      0.0, 10.0, 0.0, 0.0),
                                  child: Column(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            20.0, 0.0, 0.0, 0.0),
                                        child: InkWell(
                                          splashColor: Colors.transparent,
                                          focusColor: Colors.transparent,
                                          hoverColor: Colors.transparent,
                                          highlightColor: Colors.transparent,
                                          onTap: () async {
                                            await _model
                                                .resetAplicabilidade(context);

                                            context.pushNamed('Plantas');
                                          },
                                          child: Row(
                                            mainAxisSize: MainAxisSize.max,
                                            mainAxisAlignment:
                                                MainAxisAlignment.start,
                                            children: [
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        50.0, 0.0, 0.0, 0.0),
                                                child: Text(
                                                  'Plantas',
                                                  style: FlutterFlowTheme.of(
                                                          context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Open Sans',
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .primary,
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.normal,
                                                      ),
                                                ),
                                              ),
                                            ].divide(SizedBox(width: 20.0)),
                                          ),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            20.0, 10.0, 0.0, 0.0),
                                        child: InkWell(
                                          splashColor: Colors.transparent,
                                          focusColor: Colors.transparent,
                                          hoverColor: Colors.transparent,
                                          highlightColor: Colors.transparent,
                                          onTap: () async {
                                            await _model
                                                .resetAplicabilidade(context);

                                            context.pushNamed('Areas');
                                          },
                                          child: Row(
                                            mainAxisSize: MainAxisSize.max,
                                            mainAxisAlignment:
                                                MainAxisAlignment.start,
                                            children: [
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        50.0, 0.0, 0.0, 0.0),
                                                child: Text(
                                                  'Áreas',
                                                  style: FlutterFlowTheme.of(
                                                          context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Open Sans',
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .primary,
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.normal,
                                                      ),
                                                ),
                                              ),
                                            ].divide(SizedBox(width: 20.0)),
                                          ),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            20.0, 10.0, 0.0, 0.0),
                                        child: InkWell(
                                          splashColor: Colors.transparent,
                                          focusColor: Colors.transparent,
                                          hoverColor: Colors.transparent,
                                          highlightColor: Colors.transparent,
                                          onTap: () async {
                                            await _model
                                                .resetAplicabilidade(context);

                                            context.pushNamed('Unidades');
                                          },
                                          child: Row(
                                            mainAxisSize: MainAxisSize.max,
                                            mainAxisAlignment:
                                                MainAxisAlignment.start,
                                            children: [
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        50.0, 0.0, 0.0, 0.0),
                                                child: Text(
                                                  'Unidades',
                                                  style: FlutterFlowTheme.of(
                                                          context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Open Sans',
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .primary,
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.normal,
                                                      ),
                                                ),
                                              ),
                                            ].divide(SizedBox(width: 20.0)),
                                          ),
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                                theme: ExpandableThemeData(
                                  tapHeaderToExpand: true,
                                  tapBodyToExpand: false,
                                  tapBodyToCollapse: false,
                                  headerAlignment:
                                      ExpandablePanelHeaderAlignment.center,
                                  hasIcon: false,
                                ),
                              ),
                            ),
                          ),
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                20.0, 10.0, 0.0, 0.0),
                            child: InkWell(
                              splashColor: Colors.transparent,
                              focusColor: Colors.transparent,
                              hoverColor: Colors.transparent,
                              highlightColor: Colors.transparent,
                              onTap: () async {
                                await _model.resetAplicabilidade(context);

                                context.pushNamed('Equipamentos');
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Icon(
                                    Icons.token_sharp,
                                    color: FlutterFlowTheme.of(context).primary,
                                    size: 28.0,
                                  ),
                                  Text(
                                    'Equipamentos',
                                    style: FlutterFlowTheme.of(context)
                                        .bodyMedium
                                        .override(
                                          fontFamily: 'Open Sans',
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          fontSize: 18.0,
                                          letterSpacing: 0.0,
                                          fontWeight: FontWeight.normal,
                                        ),
                                  ),
                                ].divide(SizedBox(width: 20.0)),
                              ),
                            ),
                          ),
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                20.0, 10.0, 0.0, 0.0),
                            child: InkWell(
                              splashColor: Colors.transparent,
                              focusColor: Colors.transparent,
                              hoverColor: Colors.transparent,
                              highlightColor: Colors.transparent,
                              onTap: () async {
                                await _model.resetAplicabilidade(context);

                                context.pushNamed('AplicabilidadeNR13');
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Icon(
                                    Icons.free_cancellation_outlined,
                                    color: FlutterFlowTheme.of(context).primary,
                                    size: 30.0,
                                  ),
                                  Text(
                                    'NR-13',
                                    style: FlutterFlowTheme.of(context)
                                        .bodyMedium
                                        .override(
                                          fontFamily: 'Open Sans',
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          fontSize: 18.0,
                                          letterSpacing: 0.0,
                                          fontWeight: FontWeight.normal,
                                        ),
                                  ),
                                ].divide(SizedBox(width: 20.0)),
                              ),
                            ),
                          ),
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                20.0, 10.0, 0.0, 0.0),
                            child: InkWell(
                              splashColor: Colors.transparent,
                              focusColor: Colors.transparent,
                              hoverColor: Colors.transparent,
                              highlightColor: Colors.transparent,
                              onTap: () async {
                                await _model.resetAplicabilidade(context);
                                setState(() {
                                  FFAppState().editarLVsINICIAL123 = null;
                                  FFAppState().createInspecaoLVVP = null;
                                });

                                context.pushNamed('InspecoesLvs');
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Icon(
                                    Icons.calendar_month_outlined,
                                    color: FlutterFlowTheme.of(context).primary,
                                    size: 30.0,
                                  ),
                                  Text(
                                    'Inspeções',
                                    style: FlutterFlowTheme.of(context)
                                        .bodyMedium
                                        .override(
                                          fontFamily: 'Open Sans',
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          fontSize: 18.0,
                                          letterSpacing: 0.0,
                                          fontWeight: FontWeight.normal,
                                        ),
                                  ),
                                ].divide(SizedBox(width: 20.0)),
                              ),
                            ),
                          ),
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                20.0, 10.0, 0.0, 0.0),
                            child: InkWell(
                              splashColor: Colors.transparent,
                              focusColor: Colors.transparent,
                              hoverColor: Colors.transparent,
                              highlightColor: Colors.transparent,
                              onTap: () async {
                                await _model.resetAplicabilidade(context);

                                context.pushNamed('Prontuarios');
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Icon(
                                    Icons.layers_sharp,
                                    color: FlutterFlowTheme.of(context).primary,
                                    size: 30.0,
                                  ),
                                  Text(
                                    'Prontuários',
                                    style: FlutterFlowTheme.of(context)
                                        .bodyMedium
                                        .override(
                                          fontFamily: 'Open Sans',
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          fontSize: 18.0,
                                          letterSpacing: 0.0,
                                          fontWeight: FontWeight.normal,
                                        ),
                                  ),
                                ].divide(SizedBox(width: 20.0)),
                              ),
                            ),
                          ),
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                20.0, 10.0, 0.0, 0.0),
                            child: InkWell(
                              splashColor: Colors.transparent,
                              focusColor: Colors.transparent,
                              hoverColor: Colors.transparent,
                              highlightColor: Colors.transparent,
                              onTap: () async {
                                await _model.resetAplicabilidade(context);

                                context.pushNamed('Relatorios');
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Icon(
                                    Icons.format_align_center,
                                    color: FlutterFlowTheme.of(context).primary,
                                    size: 28.0,
                                  ),
                                  Text(
                                    'Relatórios',
                                    style: FlutterFlowTheme.of(context)
                                        .bodyMedium
                                        .override(
                                          fontFamily: 'Open Sans',
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          fontSize: 18.0,
                                          letterSpacing: 0.0,
                                          fontWeight: FontWeight.normal,
                                        ),
                                  ),
                                ].divide(SizedBox(width: 20.0)),
                              ),
                            ),
                          ),
                        ].divide(SizedBox(height: 10.0)),
                      ),
                    ),
                  ),
                  Container(
                    decoration: BoxDecoration(
                      color: Color(0xFF12151C),
                    ),
                    child: Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(40.0, 10.0, 0.0, 0.0),
                      child: InkWell(
                        splashColor: Colors.transparent,
                        focusColor: Colors.transparent,
                        hoverColor: Colors.transparent,
                        highlightColor: Colors.transparent,
                        onTap: () async {
                          GoRouter.of(context).prepareAuthEvent();
                          await authManager.signOut();
                          GoRouter.of(context).clearRedirectLocation();

                          context.goNamedAuth('login', context.mounted);
                        },
                        child: Row(
                          mainAxisSize: MainAxisSize.max,
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            Icon(
                              Icons.logout_rounded,
                              color: FlutterFlowTheme.of(context).primary,
                              size: 24.0,
                            ),
                            Text(
                              'Logout',
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .bodyMedium
                                  .override(
                                    fontFamily: 'Inter',
                                    color: FlutterFlowTheme.of(context).primary,
                                    fontSize: 16.0,
                                    letterSpacing: 0.0,
                                    fontWeight: FontWeight.w300,
                                  ),
                            ),
                          ].divide(SizedBox(width: 20.0)),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ),
          appBar: PreferredSize(
            preferredSize: Size.fromHeight(65.0),
            child: AppBar(
              backgroundColor: Color(0xFF292A33),
              automaticallyImplyLeading: false,
              actions: [],
              flexibleSpace: FlexibleSpaceBar(
                title: Padding(
                  padding:
                      EdgeInsetsDirectional.fromSTEB(20.0, 20.0, 20.0, 0.0),
                  child: StreamBuilder<List<InspecoesRecord>>(
                    stream: queryInspecoesRecord(
                      queryBuilder: (inspecoesRecord) => inspecoesRecord
                          .where(
                            'ResponsavelEmail',
                            isEqualTo: currentUserEmail,
                          )
                          .where(
                            'Tipo_Inspecao',
                            isEqualTo: 'Periódica',
                          )
                          .where(
                            'Finalizada',
                            isEqualTo: false,
                          )
                          .where(
                            'Vencimento',
                            isLessThanOrEqualTo: FFAppState().fiveDaysHeader,
                          )
                          .orderBy('Vencimento', descending: true),
                    ),
                    builder: (context, snapshot) {
                      // Customize what your widget looks like when it's loading.
                      if (!snapshot.hasData) {
                        return Center(
                          child: SizedBox(
                            width: 50.0,
                            height: 50.0,
                            child: CircularProgressIndicator(
                              valueColor: AlwaysStoppedAnimation<Color>(
                                FlutterFlowTheme.of(context).primary,
                              ),
                            ),
                          ),
                        );
                      }
                      List<InspecoesRecord> containerInspecoesRecordList =
                          snapshot.data!;
                      return Container(
                        decoration: BoxDecoration(),
                        child: Row(
                          mainAxisSize: MainAxisSize.max,
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            InkWell(
                              splashColor: Colors.transparent,
                              focusColor: Colors.transparent,
                              hoverColor: Colors.transparent,
                              highlightColor: Colors.transparent,
                              onTap: () async {
                                scaffoldKey.currentState!.openDrawer();
                              },
                              child: Icon(
                                Icons.menu_outlined,
                                color: Colors.white,
                                size: 35.0,
                              ),
                            ),
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  10.0, 0.0, 0.0, 0.0),
                              child: InkWell(
                                splashColor: Colors.transparent,
                                focusColor: Colors.transparent,
                                hoverColor: Colors.transparent,
                                highlightColor: Colors.transparent,
                                onTap: () async {
                                  context.goNamed('Home');
                                },
                                child: ClipRRect(
                                  borderRadius: BorderRadius.circular(8.0),
                                  child: Image.asset(
                                    'assets/images/MONIITOR13.png',
                                    width: 188.0,
                                    height: 48.0,
                                    fit: BoxFit.contain,
                                  ),
                                ),
                              ),
                            ),
                            badges.Badge(
                              badgeContent: Text(
                                valueOrDefault<String>(
                                  containerInspecoesRecordList.length
                                      .toString(),
                                  '0',
                                ),
                                style: FlutterFlowTheme.of(context)
                                    .titleSmall
                                    .override(
                                      fontFamily: 'Inter',
                                      color: Colors.white,
                                      fontSize: 14.0,
                                      letterSpacing: 0.0,
                                    ),
                              ),
                              showBadge: true,
                              shape: badges.BadgeShape.circle,
                              badgeColor: FlutterFlowTheme.of(context).primary,
                              elevation: 4.0,
                              padding: EdgeInsets.all(8.0),
                              position: badges.BadgePosition.topEnd(),
                              animationType: badges.BadgeAnimationType.scale,
                              toAnimate: true,
                              child: Padding(
                                padding: EdgeInsetsDirectional.fromSTEB(
                                    40.0, 0.0, 0.0, 0.0),
                                child: InkWell(
                                  splashColor: Colors.transparent,
                                  focusColor: Colors.transparent,
                                  hoverColor: Colors.transparent,
                                  highlightColor: Colors.transparent,
                                  onTap: () async {
                                    if (valueOrDefault<int>(
                                          containerInspecoesRecordList.length,
                                          0,
                                        ) >
                                        0) {
                                      await showModalBottomSheet(
                                        isScrollControlled: true,
                                        backgroundColor: Colors.transparent,
                                        enableDrag: false,
                                        context: context,
                                        builder: (context) {
                                          return GestureDetector(
                                            onTap: () => _model
                                                    .unfocusNode.canRequestFocus
                                                ? FocusScope.of(context)
                                                    .requestFocus(
                                                        _model.unfocusNode)
                                                : FocusScope.of(context)
                                                    .unfocus(),
                                            child: Padding(
                                              padding: MediaQuery.viewInsetsOf(
                                                  context),
                                              child: AlertaInspecoesWidget(),
                                            ),
                                          );
                                        },
                                      ).then((value) => safeSetState(() {}));
                                    }
                                  },
                                  child: FaIcon(
                                    FontAwesomeIcons.bell,
                                    color: FlutterFlowTheme.of(context)
                                        .primaryBtnText,
                                    size: 26.0,
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      );
                    },
                  ),
                ),
                centerTitle: true,
                expandedTitleScale: 1.0,
              ),
              elevation: 4.0,
            ),
          ),
          body: Column(
            mainAxisSize: MainAxisSize.max,
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Expanded(
                child: SingleChildScrollView(
                  child: Column(
                    mainAxisSize: MainAxisSize.max,
                    mainAxisAlignment: MainAxisAlignment.start,
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(
                            25.0, 0.0, 25.0, 0.0),
                        child: Row(
                          mainAxisSize: MainAxisSize.max,
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          crossAxisAlignment: CrossAxisAlignment.end,
                          children: [
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  0.0, 20.0, 0.0, 0.0),
                              child: Text(
                                'Aplicabilidade',
                                style: FlutterFlowTheme.of(context)
                                    .headlineMedium
                                    .override(
                                      fontFamily: 'Readex Pro',
                                      letterSpacing: 0.0,
                                    ),
                              ),
                            ),
                          ],
                        ),
                      ),
                      if (FFAppState().createAplicabilidadeOUTROS != null)
                        Column(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 12.0, 16.0, 12.0),
                              child: Container(
                                decoration: BoxDecoration(
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryBackground,
                                  borderRadius: BorderRadius.circular(20.0),
                                ),
                                child: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      20.0, 20.0, 20.0, 20.0),
                                  child: Column(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 10.0, 0.0, 0.0),
                                        child: Text(
                                          'OUTROS',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .primary,
                                                fontSize: 18.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 30.0, 0.0, 20.0),
                                        child: Column(
                                          mainAxisSize: MainAxisSize.max,
                                          children: [
                                            Row(
                                              mainAxisSize: MainAxisSize.min,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    'Equipamento',
                                                    textAlign: TextAlign.end,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                ),
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    FFAppState()
                                                        .equipamentoAplicabilidade,
                                                    textAlign: TextAlign.start,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                                ),
                                              ].divide(SizedBox(width: 20.0)),
                                            ),
                                            Row(
                                              mainAxisSize: MainAxisSize.min,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    'Tipo de equipamento',
                                                    textAlign: TextAlign.end,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                ),
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    FFAppState()
                                                        .tipoEquipAplicabilidade,
                                                    textAlign: TextAlign.start,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                                ),
                                              ].divide(SizedBox(width: 20.0)),
                                            ),
                                          ].divide(SizedBox(height: 10.0)),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 0.0, 0.0, 25.0),
                                        child: Container(
                                          decoration: BoxDecoration(
                                            color: FlutterFlowTheme.of(context)
                                                .secondaryBackground,
                                          ),
                                        ),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Recipiente Transportável?',
                                            style: FlutterFlowTheme.of(context)
                                                .bodyMedium
                                                .override(
                                                  fontFamily: 'Inter',
                                                  fontSize: 16.0,
                                                  letterSpacing: 0.0,
                                                  fontWeight: FontWeight.w600,
                                                ),
                                          ),
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0.0, 0.0, 0.0, 25.0),
                                            child: FlutterFlowDropDown<String>(
                                              controller: _model
                                                      .statusDropDownOutrosValueController1 ??=
                                                  FormFieldController<String>(
                                                _model.statusDropDownOutrosValue1 ??=
                                                    '',
                                              ),
                                              options:
                                                  List<String>.from(['1', '0']),
                                              optionLabels: ['Sim', 'Não'],
                                              onChanged: (val) => setState(() =>
                                                  _model.statusDropDownOutrosValue1 =
                                                      val),
                                              width: MediaQuery.sizeOf(context)
                                                      .width *
                                                  1.0,
                                              height: 50.0,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                      ),
                                              hintText: 'Selecione',
                                              icon: Icon(
                                                Icons
                                                    .keyboard_arrow_down_rounded,
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryText,
                                                size: 24.0,
                                              ),
                                              fillColor:
                                                  FlutterFlowTheme.of(context)
                                                      .secondaryBackground,
                                              elevation: 2.0,
                                              borderColor:
                                                  FlutterFlowTheme.of(context)
                                                      .alternate,
                                              borderWidth: 2.0,
                                              borderRadius: 8.0,
                                              margin: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      16.0, 4.0, 16.0, 4.0),
                                              hidesUnderline: true,
                                              isOverButton: true,
                                              isSearchable: false,
                                              isMultiSelect: false,
                                            ),
                                          ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model.statusDropDownOutrosValue1 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue1 !=
                                                  '')
                                            Text(
                                              'Reservatório Portátil de Fluido Comprimido',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model.statusDropDownOutrosValue1 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue1 !=
                                                  '')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController2 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue2 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue2 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model.statusDropDownOutrosValue2 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue2 !=
                                                  '')
                                            Text(
                                              'Extintor de Incêndio',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model.statusDropDownOutrosValue2 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue2 !=
                                                  '')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController3 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue3 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue3 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model.statusDropDownOutrosValue3 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue3 !=
                                                  '')
                                            Text(
                                              'Duto e Seus Componentes?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model.statusDropDownOutrosValue3 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue3 !=
                                                  '')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController4 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue4 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue4 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model.statusDropDownOutrosValue4 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue4 !=
                                                  '')
                                            Text(
                                              'Forno?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model.statusDropDownOutrosValue4 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue4 !=
                                                  '')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController5 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue5 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue5 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model.statusDropDownOutrosValue5 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue5 !=
                                                  '')
                                            Text(
                                              'Serpentina Para Troca Térmica?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model.statusDropDownOutrosValue5 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue5 !=
                                                  '')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController6 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue6 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue6 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model.statusDropDownOutrosValue6 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue6 !=
                                                  '')
                                            Text(
                                              'Aquecedor de Fluido Térmico?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model.statusDropDownOutrosValue6 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue6 !=
                                                  '')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController7 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue7 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue7 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model.statusDropDownOutrosValue7 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue7 !=
                                                  '')
                                            Text(
                                              'Gerador de Vapor?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model.statusDropDownOutrosValue7 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue7 !=
                                                  '')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController8 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue8 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownOutrosValue8 =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownOutrosValueController14
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownOutrosValueController15
                                                        ?.reset();
                                                  });
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model.statusDropDownOutrosValue8 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue8 !=
                                                  '')
                                            Text(
                                              'Trocador de Calor de Placas Corrugadas?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model.statusDropDownOutrosValue8 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue8 !=
                                                  '')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController9 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue9 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue9 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model.statusDropDownOutrosValue9 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue9 !=
                                                  '')
                                            Text(
                                              'Tubo de Sistema de Instrumentação?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model.statusDropDownOutrosValue9 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue9 !=
                                                  '')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController10 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue10 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue10 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model.statusDropDownOutrosValue10 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue10 !=
                                                  '')
                                            Text(
                                              'Acumulador Para Exploração e Produção de Petróleo?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model.statusDropDownOutrosValue10 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue10 !=
                                                  '')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController11 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue11 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue11 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model.statusDropDownOutrosValue10 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue10 !=
                                                  '')
                                            Text(
                                              'Acumulador Hidráulico?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model.statusDropDownOutrosValue11 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue11 !=
                                                  '')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController12 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue12 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue12 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model.statusDropDownOutrosValue12 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue12 !=
                                                  '')
                                            Text(
                                              'Panela de Cocção?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model.statusDropDownOutrosValue12 !=
                                                  null &&
                                              _model.statusDropDownOutrosValue12 !=
                                                  '')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController13 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue13 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue13 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model
                                                  .statusDropDownOutrosValue8 ==
                                              '1')
                                            Text(
                                              'Enquadrado em Código de Vaso de Pressão?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model
                                                  .statusDropDownOutrosValue8 ==
                                              '1')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController14 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue14 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue14 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (_model
                                                  .statusDropDownOutrosValue8 ==
                                              '1')
                                            Text(
                                              'Enquadrado em Código de Caldeira?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if (_model
                                                  .statusDropDownOutrosValue8 ==
                                              '1')
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOutrosValueController15 ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOutrosValue15 ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) => setState(() =>
                                                    _model.statusDropDownOutrosValue15 =
                                                        val),
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      if (((_model
                                                          .statusDropDownOutrosValue13 !=
                                                      null &&
                                                  _model.statusDropDownOutrosValue13 !=
                                                      '') &&
                                              (_model.statusDropDownOutrosValue14 ==
                                                      null ||
                                                  _model.statusDropDownOutrosValue14 ==
                                                      '') &&
                                              (_model
                                                          .statusDropDownOutrosValue15 ==
                                                      null ||
                                                  _model.statusDropDownOutrosValue15 ==
                                                      '')) ||
                                          ((_model.statusDropDownOutrosValue13 !=
                                                      null &&
                                                  _model.statusDropDownOutrosValue13 !=
                                                      '') &&
                                              (_model.statusDropDownOutrosValue14 ==
                                                  '0') &&
                                              (_model.statusDropDownOutrosValue15 ==
                                                  '0')))
                                        Text(
                                          'G1.18',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      if (_model.statusDropDownOutrosValue14 ==
                                          '1')
                                        Text(
                                          'Confrome Vaso de Pressão',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      if (_model.statusDropDownOutrosValue15 ==
                                          '1')
                                        Text(
                                          'Conforme Vaso de Caldeira',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      Row(
                                        mainAxisSize: MainAxisSize.max,
                                        mainAxisAlignment:
                                            MainAxisAlignment.end,
                                        children: [
                                          FFButtonWidget(
                                            onPressed: () async {
                                              setState(() {
                                                FFAppState()
                                                        .aplicabilidadeCreating =
                                                    false;
                                                FFAppState()
                                                        .createAplicabilidadeOUTROS =
                                                    null;
                                              });
                                              setState(() {
                                                _model
                                                    .statusDropDownOutrosValueController1
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController2
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController3
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController4
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController5
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController6
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController7
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController8
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController9
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController10
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController11
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController12
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController13
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController14
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController15
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESMetalicoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESDiametroMaiorrValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESVinteMIlValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESEnterradoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPernasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESSapatasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPedestaisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESSelasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESEmbarcacaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESNavioValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPlataformaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESFluidoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDVolumeTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDPressaoMaiorZeroUmTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDPressaoDzNoveTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSpieTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAlcalisTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDTesteSegurancaTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDBarreiraSisTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSgcCombustaoTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAguaTratadaTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDFluidoTermicoTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDProgramaPlhTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDVolumeValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSpieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAlcalisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDTesteSegurancaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDBarreiraSisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSgcCombustaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAguaTratadaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDFluidoTermicoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownRedePubTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOcupacaoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSistemaAuxiliarTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPlasticoReforTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTransporteTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSubmarinoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownDiametroTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfCodigoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAntesDezTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPmtaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFluidoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTemperaturaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEvidenciaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCatalisadorTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownServicoProprioSpieTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEstudoAbandonadorTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAmpliPorgTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOcupacaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSistemaAuxiliarValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPlasticoReforValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTransporteValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSubmarinoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownDiametroValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfCodigoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAntesDezValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPmtaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFluidoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTemperaturaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEvidenciaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCatalisadorValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEstudoAbandonadorValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFabSerieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownValvulaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownServicoProprioSpieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfInnValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownInmetroValueController
                                                    ?.reset();
                                              });
                                              setState(() {
                                                _model.showAvaliacaoVP = false;
                                                _model.showAvaliacaoTUBVP =
                                                    false;
                                                _model.showAvaliacaoTANQUES =
                                                    false;
                                                _model.showAvaliacaoCALDEIRAS =
                                                    false;
                                                _model.showAvaliacaoTUBCALDEIRAS =
                                                    false;
                                                _model.showAvaliacaoOUTROS =
                                                    false;
                                              });

                                              context.pushNamed('Equipamentos');
                                            },
                                            text: 'Cancelar',
                                            options: FFButtonOptions(
                                              height: 40.0,
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      24.0, 0.0, 24.0, 0.0),
                                              iconPadding: EdgeInsetsDirectional
                                                  .fromSTEB(0.0, 0.0, 0.0, 0.0),
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondary,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .titleSmall
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color: Colors.white,
                                                        letterSpacing: 0.0,
                                                      ),
                                              elevation: 3.0,
                                              borderSide: BorderSide(
                                                color: Colors.transparent,
                                                width: 1.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                          FFButtonWidget(
                                            onPressed: ((_model.outrosAceitos
                                                            .length >
                                                        1) ||
                                                    (_model.statusDropDownOutrosValue1 ==
                                                            null ||
                                                        _model.statusDropDownOutrosValue1 ==
                                                            ''))
                                                ? null
                                                : () async {
                                                    await AplicabilidadeOUTROSRecord
                                                        .collection
                                                        .doc()
                                                        .set(
                                                            createAplicabilidadeOUTROSRecordData(
                                                          codigo: 'G1.18',
                                                          observacao: _model
                                                              .retornoPeriodicidadeTANQUES
                                                              ?.observacao,
                                                          equipamento: FFAppState()
                                                              .equipamentoAplicabilidade,
                                                          tipoEquipamento:
                                                              FFAppState()
                                                                  .tipoEquipAplicabilidade,
                                                          descricaoEquipamento:
                                                              FFAppState()
                                                                  .descriccaoEquipAplicabilidade,
                                                          tagEquipamento:
                                                              FFAppState()
                                                                  .tagEquipAplicabilidade,
                                                          serieEquipamento:
                                                              FFAppState()
                                                                  .serieEquipAplicabilidade,
                                                          dataCadEquipamento:
                                                              FFAppState()
                                                                  .dataCadEquipAplicabilidade,
                                                          avaliador:
                                                              currentUserDisplayName,
                                                          createdTime:
                                                              getCurrentTimestamp
                                                                  .toString(),
                                                          contrato: FFAppState()
                                                              .contrato,
                                                          inspecaoInterna:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeTANQUES
                                                                ?.observacao,
                                                            '0',
                                                          ),
                                                          inspecaoExterna:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeTANQUES
                                                                ?.observacao,
                                                            '0',
                                                          ),
                                                          recipienteTransportavel:
                                                              _model
                                                                  .statusDropDownOutrosValue1,
                                                          reservatorioPortatilFluidoComprimido:
                                                              _model
                                                                  .statusDropDownOutrosValue2,
                                                          extintorIncendio: _model
                                                              .statusDropDownOutrosValue3,
                                                          dutoSeusComponentes:
                                                              _model
                                                                  .statusDropDownOutrosValue4,
                                                          forno: _model
                                                              .statusDropDownOutrosValue5,
                                                          serpentinaTrocaTermica:
                                                              _model
                                                                  .statusDropDownOutrosValue6,
                                                          aquecedorFluidoTermico:
                                                              '',
                                                          geradorVapor: '',
                                                          trocadorCalorPlacasCorrugadas:
                                                              '',
                                                          tuboSistemaInstrumentacao:
                                                              '',
                                                          acumuladorExploracaoProducaoPetroleo:
                                                              '',
                                                          acumuladorHidraulico:
                                                              '',
                                                          panelaCoccao: '',
                                                          enquadradoCodigoVP:
                                                              '',
                                                          enquadradoCodigoCaldeira:
                                                              '',
                                                        ));

                                                    await FFAppState()
                                                        .createAplicabilidadeOUTROS!
                                                        .update(
                                                            createEquipamentosRecordData(
                                                          codigo: 'G1.18',
                                                          interna:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeTANQUES
                                                                ?.observacao,
                                                            '0',
                                                          ),
                                                          externa:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeTANQUES
                                                                ?.observacao,
                                                            '0',
                                                          ),
                                                        ));
                                                    setState(() {
                                                      FFAppState()
                                                              .aplicabilidadeCreating =
                                                          false;
                                                      FFAppState()
                                                              .createAplicabilidadeOUTROS =
                                                          null;
                                                    });

                                                    context.goNamed(
                                                        'Equipamentos');
                                                  },
                                            text: 'Salvar',
                                            options: FFButtonOptions(
                                              height: 40.0,
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      24.0, 0.0, 24.0, 0.0),
                                              iconPadding: EdgeInsetsDirectional
                                                  .fromSTEB(0.0, 0.0, 0.0, 0.0),
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .primary,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .titleSmall
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color: Colors.white,
                                                        letterSpacing: 0.0,
                                                      ),
                                              elevation: 3.0,
                                              borderSide: BorderSide(
                                                color: Colors.transparent,
                                                width: 1.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                        ].divide(SizedBox(width: 50.0)),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      if (FFAppState().createAplicabilidadeTANQUES != null)
                        Column(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 12.0, 16.0, 12.0),
                              child: Container(
                                decoration: BoxDecoration(
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryBackground,
                                  borderRadius: BorderRadius.circular(20.0),
                                ),
                                child: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      20.0, 20.0, 20.0, 20.0),
                                  child: Column(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 10.0, 0.0, 0.0),
                                        child: Text(
                                          'TANQUES',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .primary,
                                                fontSize: 18.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 30.0, 0.0, 20.0),
                                        child: Column(
                                          mainAxisSize: MainAxisSize.max,
                                          children: [
                                            Row(
                                              mainAxisSize: MainAxisSize.min,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    'Equipamento',
                                                    textAlign: TextAlign.end,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                ),
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    FFAppState()
                                                        .equipamentoAplicabilidade,
                                                    textAlign: TextAlign.start,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                                ),
                                              ].divide(SizedBox(width: 20.0)),
                                            ),
                                            Row(
                                              mainAxisSize: MainAxisSize.min,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    'Tipo de equipamento',
                                                    textAlign: TextAlign.end,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                ),
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    FFAppState()
                                                        .tipoEquipAplicabilidade,
                                                    textAlign: TextAlign.start,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                                ),
                                              ].divide(SizedBox(width: 20.0)),
                                            ),
                                          ].divide(SizedBox(height: 10.0)),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 0.0, 0.0, 25.0),
                                        child: Container(
                                          decoration: BoxDecoration(
                                            color: FlutterFlowTheme.of(context)
                                                .secondaryBackground,
                                          ),
                                        ),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Tanque metálico para armazenamento?',
                                            style: FlutterFlowTheme.of(context)
                                                .bodyMedium
                                                .override(
                                                  fontFamily: 'Inter',
                                                  fontSize: 16.0,
                                                  letterSpacing: 0.0,
                                                  fontWeight: FontWeight.w600,
                                                ),
                                          ),
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0.0, 0.0, 0.0, 25.0),
                                            child: FlutterFlowDropDown<String>(
                                              controller: _model
                                                      .statusDropDownTANQUESMetalicoValueController ??=
                                                  FormFieldController<String>(
                                                _model.statusDropDownTANQUESMetalicoValue ??=
                                                    '',
                                              ),
                                              options:
                                                  List<String>.from(['1', '0']),
                                              optionLabels: ['Sim', 'Não'],
                                              onChanged: (val) async {
                                                setState(() => _model
                                                        .statusDropDownTANQUESMetalicoValue =
                                                    val);
                                                setState(() {
                                                  _model
                                                      .statusDropDownTANQUESFluidoValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTANQUESDiametroMaiorrValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTANQUESVinteMIlValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTANQUESEnterradoValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTANQUESSapatasValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTANQUESPedestaisValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTANQUESEmbarcacaoValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTANQUESPlataformaValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTANQUESPernasValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTANQUESNavioValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTANQUESSelasValueController
                                                      ?.reset();
                                                });
                                                setState(() {
                                                  FFAppState()
                                                      .updateUserControleTANQUESStruct(
                                                    (e) => e
                                                      ..tanqueMetalicoArmazenamento =
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue
                                                      ..tanqueDiametroExternoMaiorTresMetros =
                                                          null
                                                      ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                          null
                                                      ..tanqueEnterrado = null
                                                      ..tanqueApoiadoSobrePernas =
                                                          null
                                                      ..tanqueApoiadoSobreSapatas =
                                                          null
                                                      ..tanqueApoiadoSobrePedestais =
                                                          null
                                                      ..tanqueApoiadoSobreSelas =
                                                          null
                                                      ..tanqueEstruturalEmbarcacao =
                                                          null
                                                      ..tanqueEstruturalNavio =
                                                          null
                                                      ..tanqueEstruturalPlataforma =
                                                          null
                                                      ..hdois = null
                                                      ..cdoisHdois = null
                                                      ..combustivel = null
                                                      ..inflamavel = null
                                                      ..toxico = null,
                                                  );
                                                });
                                                _model.retornoAceitosTANQUESMetalico =
                                                    await actions
                                                        .atualizaAceitosTANQUES();
                                                setState(() {
                                                  _model.tanquesAceitos = _model
                                                      .retornoAceitosTANQUESMetalico!
                                                      .toList()
                                                      .cast<TanquesNrStruct>();
                                                });
                                                _model.keysToUpdateTANQUESMetalico =
                                                    await actions
                                                        .keysToUpdateTANQUES(
                                                  _model
                                                      .retornoAceitosTANQUESMetalico
                                                      ?.toList(),
                                                );
                                                _model.addTANQUESMetalico =
                                                    await actions.addNATANQUES(
                                                  _model
                                                      .keysToUpdateTANQUESMetalico
                                                      ?.toList(),
                                                );
                                                setState(() {
                                                  FFAppState()
                                                          .userControleTANQUES =
                                                      _model
                                                          .addTANQUESMetalico!;
                                                });
                                                setState(() {
                                                  FFAppState()
                                                      .updateUserControleTANQUESStruct(
                                                    (e) => e
                                                      ..tanqueMetalicoArmazenamento =
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue,
                                                  );
                                                });

                                                setState(() {});
                                              },
                                              width: MediaQuery.sizeOf(context)
                                                      .width *
                                                  1.0,
                                              height: 50.0,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                      ),
                                              hintText: 'Selecione',
                                              icon: Icon(
                                                Icons
                                                    .keyboard_arrow_down_rounded,
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryText,
                                                size: 24.0,
                                              ),
                                              fillColor:
                                                  FlutterFlowTheme.of(context)
                                                      .secondaryBackground,
                                              elevation: 2.0,
                                              borderColor:
                                                  FlutterFlowTheme.of(context)
                                                      .alternate,
                                              borderWidth: 2.0,
                                              borderRadius: 8.0,
                                              margin: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      16.0, 4.0, 16.0, 4.0),
                                              hidesUnderline: true,
                                              isOverButton: true,
                                              isSearchable: false,
                                              isMultiSelect: false,
                                            ),
                                          ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueDiametroExternoMaiorTresMetros !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento())
                                            Text(
                                              'Tanque com diâmetro externo maior que 3m?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueDiametroExternoMaiorTresMetros !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTANQUESDiametroMaiorrValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTANQUESDiametroMaiorrValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTANQUESDiametroMaiorrValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTANQUESFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESVinteMIlValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESEnterradoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESSapatasValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPedestaisValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESEmbarcacaoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPlataformaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPernasValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESNavioValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESSelasValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueDiametroExternoMaiorTresMetros =
                                                            _model
                                                                .statusDropDownTANQUESDiametroMaiorrValue
                                                        ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                            null
                                                        ..tanqueEnterrado = null
                                                        ..tanqueApoiadoSobrePernas =
                                                            null
                                                        ..tanqueApoiadoSobreSapatas =
                                                            null
                                                        ..tanqueApoiadoSobrePedestais =
                                                            null
                                                        ..tanqueApoiadoSobreSelas =
                                                            null
                                                        ..tanqueEstruturalEmbarcacao =
                                                            null
                                                        ..tanqueEstruturalNavio =
                                                            null
                                                        ..tanqueEstruturalPlataforma =
                                                            null
                                                        ..hdois = null
                                                        ..cdoisHdois = null
                                                        ..combustivel = null
                                                        ..inflamavel = null
                                                        ..toxico = null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTANQUESDiametro =
                                                      await actions
                                                          .atualizaAceitosTANQUES();
                                                  setState(() {
                                                    _model.tanquesAceitos = _model
                                                        .retornoAceitosTANQUESDiametro!
                                                        .toList()
                                                        .cast<
                                                            TanquesNrStruct>();
                                                  });
                                                  _model.keysToUpdateTANQUESDiametro =
                                                      await actions
                                                          .keysToUpdateTANQUES(
                                                    _model
                                                        .retornoAceitosTANQUESDiametro
                                                        ?.toList(),
                                                  );
                                                  _model.addTANQUESDiametro =
                                                      await actions
                                                          .addNATANQUES(
                                                    _model
                                                        .keysToUpdateTANQUESDiametro
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTANQUES =
                                                        _model
                                                            .addTANQUESDiametro!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueMetalicoArmazenamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue,
                                                          '3',
                                                        )
                                                        ..tanqueDiametroExternoMaiorTresMetros =
                                                            _model
                                                                .statusDropDownTANQUESDiametroMaiorrValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueCapacidadeNominalMaiorVinteMilLitros !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros())
                                            Text(
                                              'Tanque com capacidade nominal maior que 20.000 litros?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueCapacidadeNominalMaiorVinteMilLitros !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTANQUESVinteMIlValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTANQUESVinteMIlValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTANQUESVinteMIlValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTANQUESFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESEnterradoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESSapatasValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPedestaisValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESEmbarcacaoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPlataformaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPernasValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESNavioValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESSelasValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                            _model
                                                                .statusDropDownTANQUESVinteMIlValue
                                                        ..tanqueEnterrado = null
                                                        ..tanqueApoiadoSobrePernas =
                                                            null
                                                        ..tanqueApoiadoSobreSapatas =
                                                            null
                                                        ..tanqueApoiadoSobrePedestais =
                                                            null
                                                        ..tanqueApoiadoSobreSelas =
                                                            null
                                                        ..tanqueEstruturalEmbarcacao =
                                                            null
                                                        ..tanqueEstruturalNavio =
                                                            null
                                                        ..tanqueEstruturalPlataforma =
                                                            null
                                                        ..hdois = null
                                                        ..cdoisHdois = null
                                                        ..combustivel = null
                                                        ..inflamavel = null
                                                        ..toxico = null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTANQUESVinte =
                                                      await actions
                                                          .atualizaAceitosTANQUES();
                                                  setState(() {
                                                    _model.tanquesAceitos = _model
                                                        .retornoAceitosTANQUESVinte!
                                                        .toList()
                                                        .cast<
                                                            TanquesNrStruct>();
                                                  });
                                                  _model.keysToUpdateTANQUESVinte =
                                                      await actions
                                                          .keysToUpdateTANQUES(
                                                    _model
                                                        .retornoAceitosTANQUESVinte
                                                        ?.toList(),
                                                  );
                                                  _model.addTANQUESVinte =
                                                      await actions
                                                          .addNATANQUES(
                                                    _model
                                                        .keysToUpdateTANQUESVinte
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTANQUES =
                                                        _model.addTANQUESVinte!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueMetalicoArmazenamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue,
                                                          '3',
                                                        )
                                                        ..tanqueDiametroExternoMaiorTresMetros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESDiametroMaiorrValue,
                                                          '3',
                                                        )
                                                        ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                            _model
                                                                .statusDropDownTANQUESVinteMIlValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueEnterrado !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros())
                                            Text(
                                              'Tanque enterrado?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueEnterrado !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTANQUESEnterradoValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTANQUESEnterradoValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTANQUESEnterradoValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTANQUESFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESSapatasValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPedestaisValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESEmbarcacaoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPlataformaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPernasValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESNavioValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESSelasValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueEnterrado = _model
                                                            .statusDropDownTANQUESEnterradoValue
                                                        ..tanqueApoiadoSobrePernas =
                                                            null
                                                        ..tanqueApoiadoSobreSapatas =
                                                            null
                                                        ..tanqueApoiadoSobrePedestais =
                                                            null
                                                        ..tanqueApoiadoSobreSelas =
                                                            null
                                                        ..tanqueEstruturalEmbarcacao =
                                                            null
                                                        ..tanqueEstruturalNavio =
                                                            null
                                                        ..tanqueEstruturalPlataforma =
                                                            null
                                                        ..hdois = null
                                                        ..cdoisHdois = null
                                                        ..combustivel = null
                                                        ..inflamavel = null
                                                        ..toxico = null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTANQUESEnterrado =
                                                      await actions
                                                          .atualizaAceitosTANQUES();
                                                  setState(() {
                                                    _model.tanquesAceitos = _model
                                                        .retornoAceitosTANQUESEnterrado!
                                                        .toList()
                                                        .cast<
                                                            TanquesNrStruct>();
                                                  });
                                                  _model.keysToUpdateTANQUESEnterrado =
                                                      await actions
                                                          .keysToUpdateTANQUES(
                                                    _model
                                                        .retornoAceitosTANQUESEnterrado
                                                        ?.toList(),
                                                  );
                                                  _model.addTANQUESEnterrado =
                                                      await actions
                                                          .addNATANQUES(
                                                    _model
                                                        .keysToUpdateTANQUESEnterrado
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTANQUES =
                                                        _model
                                                            .addTANQUESEnterrado!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueMetalicoArmazenamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue,
                                                          '3',
                                                        )
                                                        ..tanqueDiametroExternoMaiorTresMetros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESDiametroMaiorrValue,
                                                          '3',
                                                        )
                                                        ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESVinteMIlValue,
                                                          '3',
                                                        )
                                                        ..tanqueEnterrado = _model
                                                            .statusDropDownTANQUESEnterradoValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueApoiadoSobrePernas !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado())
                                            Text(
                                              'Tanque apoiado sobre pernas?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueApoiadoSobrePernas !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTANQUESPernasValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTANQUESPernasValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTANQUESPernasValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTANQUESFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESSapatasValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPedestaisValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESEmbarcacaoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPlataformaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESNavioValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESSelasValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueApoiadoSobrePernas =
                                                            _model
                                                                .statusDropDownTANQUESPernasValue
                                                        ..tanqueApoiadoSobreSapatas =
                                                            null
                                                        ..tanqueApoiadoSobrePedestais =
                                                            null
                                                        ..tanqueApoiadoSobreSelas =
                                                            null
                                                        ..tanqueEstruturalEmbarcacao =
                                                            null
                                                        ..tanqueEstruturalNavio =
                                                            null
                                                        ..tanqueEstruturalPlataforma =
                                                            null
                                                        ..hdois = null
                                                        ..cdoisHdois = null
                                                        ..combustivel = null
                                                        ..inflamavel = null
                                                        ..toxico = null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTANQUESPernas =
                                                      await actions
                                                          .atualizaAceitosTANQUES();
                                                  setState(() {
                                                    _model.tanquesAceitos = _model
                                                        .retornoAceitosTANQUESPernas!
                                                        .toList()
                                                        .cast<
                                                            TanquesNrStruct>();
                                                  });
                                                  _model.keysToUpdateTANQUESPernas =
                                                      await actions
                                                          .keysToUpdateTANQUES(
                                                    _model
                                                        .retornoAceitosTANQUESPernas
                                                        ?.toList(),
                                                  );
                                                  _model.addTANQUESPernas =
                                                      await actions
                                                          .addNATANQUES(
                                                    _model
                                                        .keysToUpdateTANQUESPernas
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTANQUES =
                                                        _model
                                                            .addTANQUESPernas!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueMetalicoArmazenamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue,
                                                          '3',
                                                        )
                                                        ..tanqueDiametroExternoMaiorTresMetros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESDiametroMaiorrValue,
                                                          '3',
                                                        )
                                                        ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESVinteMIlValue,
                                                          '3',
                                                        )
                                                        ..tanqueEnterrado =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESEnterradoValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePernas =
                                                            _model
                                                                .statusDropDownTANQUESPernasValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueApoiadoSobreSapatas !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas())
                                            Text(
                                              'Tanque apoiado sobre sapatas?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueApoiadoSobreSapatas !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTANQUESSapatasValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTANQUESSapatasValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTANQUESSapatasValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTANQUESFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPedestaisValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESEmbarcacaoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPlataformaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESNavioValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESSelasValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueApoiadoSobreSapatas =
                                                            _model
                                                                .statusDropDownTANQUESSapatasValue
                                                        ..tanqueApoiadoSobrePedestais =
                                                            null
                                                        ..tanqueApoiadoSobreSelas =
                                                            null
                                                        ..tanqueEstruturalEmbarcacao =
                                                            null
                                                        ..tanqueEstruturalNavio =
                                                            null
                                                        ..tanqueEstruturalPlataforma =
                                                            null
                                                        ..hdois = null
                                                        ..cdoisHdois = null
                                                        ..combustivel = null
                                                        ..inflamavel = null
                                                        ..toxico = null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTANQUESSapatas =
                                                      await actions
                                                          .atualizaAceitosTANQUES();
                                                  setState(() {
                                                    _model.tanquesAceitos = _model
                                                        .retornoAceitosTANQUESSapatas!
                                                        .toList()
                                                        .cast<
                                                            TanquesNrStruct>();
                                                  });
                                                  _model.keysToUpdateTANQUESSapatas =
                                                      await actions
                                                          .keysToUpdateTANQUES(
                                                    _model
                                                        .retornoAceitosTANQUESSapatas
                                                        ?.toList(),
                                                  );
                                                  _model.addTANQUESSapatas =
                                                      await actions
                                                          .addNATANQUES(
                                                    _model
                                                        .keysToUpdateTANQUESSapatas
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTANQUES =
                                                        _model
                                                            .addTANQUESSapatas!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueMetalicoArmazenamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue,
                                                          '3',
                                                        )
                                                        ..tanqueDiametroExternoMaiorTresMetros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESDiametroMaiorrValue,
                                                          '3',
                                                        )
                                                        ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESVinteMIlValue,
                                                          '3',
                                                        )
                                                        ..tanqueEnterrado =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESEnterradoValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePernas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPernasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobreSapatas =
                                                            _model
                                                                .statusDropDownTANQUESSapatasValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueApoiadoSobrePedestais !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSapatas())
                                            Text(
                                              'Tanque apoiado sobre pedestais?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueApoiadoSobrePedestais !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSapatas())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTANQUESPedestaisValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTANQUESPedestaisValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTANQUESPedestaisValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTANQUESFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESEmbarcacaoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPlataformaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESNavioValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESSelasValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueApoiadoSobrePedestais =
                                                            _model
                                                                .statusDropDownTANQUESPedestaisValue
                                                        ..tanqueApoiadoSobreSelas =
                                                            null
                                                        ..tanqueEstruturalEmbarcacao =
                                                            null
                                                        ..tanqueEstruturalNavio =
                                                            null
                                                        ..tanqueEstruturalPlataforma =
                                                            null
                                                        ..hdois = null
                                                        ..cdoisHdois = null
                                                        ..combustivel = null
                                                        ..inflamavel = null
                                                        ..toxico = null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTANQUESPedestais =
                                                      await actions
                                                          .atualizaAceitosTANQUES();
                                                  setState(() {
                                                    _model.tanquesAceitos = _model
                                                        .retornoAceitosTANQUESPedestais!
                                                        .toList()
                                                        .cast<
                                                            TanquesNrStruct>();
                                                  });
                                                  _model.keysToUpdateTANQUESPedestais =
                                                      await actions
                                                          .keysToUpdateTANQUES(
                                                    _model
                                                        .retornoAceitosTANQUESPedestais
                                                        ?.toList(),
                                                  );
                                                  _model.addTANQUESPedestais =
                                                      await actions
                                                          .addNATANQUES(
                                                    _model
                                                        .keysToUpdateTANQUESPedestais
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTANQUES =
                                                        _model
                                                            .addTANQUESPedestais!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueMetalicoArmazenamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue,
                                                          '3',
                                                        )
                                                        ..tanqueDiametroExternoMaiorTresMetros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESDiametroMaiorrValue,
                                                          '3',
                                                        )
                                                        ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESVinteMIlValue,
                                                          '3',
                                                        )
                                                        ..tanqueEnterrado =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESEnterradoValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePernas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPernasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobreSapatas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESSapatasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePedestais =
                                                            _model
                                                                .statusDropDownTANQUESPedestaisValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueApoiadoSobreSelas !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSapatas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePedestais())
                                            Text(
                                              'Tanque apoiado sobre selas?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueApoiadoSobreSelas !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSapatas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePedestais())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTANQUESSelasValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTANQUESSelasValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTANQUESSelasValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTANQUESFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESEmbarcacaoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPlataformaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESNavioValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueApoiadoSobreSelas =
                                                            _model
                                                                .statusDropDownTANQUESSelasValue
                                                        ..tanqueEstruturalEmbarcacao =
                                                            null
                                                        ..tanqueEstruturalNavio =
                                                            null
                                                        ..tanqueEstruturalPlataforma =
                                                            null
                                                        ..hdois = null
                                                        ..cdoisHdois = null
                                                        ..combustivel = null
                                                        ..inflamavel = null
                                                        ..toxico = null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTANQUESSelas =
                                                      await actions
                                                          .atualizaAceitosTANQUES();
                                                  setState(() {
                                                    _model.tanquesAceitos = _model
                                                        .retornoAceitosTANQUESSelas!
                                                        .toList()
                                                        .cast<
                                                            TanquesNrStruct>();
                                                  });
                                                  _model.keysToUpdateTANQUESSelas =
                                                      await actions
                                                          .keysToUpdateTANQUES(
                                                    _model
                                                        .retornoAceitosTANQUESSelas
                                                        ?.toList(),
                                                  );
                                                  _model.addTANQUESSelas =
                                                      await actions
                                                          .addNATANQUES(
                                                    _model
                                                        .keysToUpdateTANQUESSelas
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTANQUES =
                                                        _model.addTANQUESSelas!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueMetalicoArmazenamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue,
                                                          '3',
                                                        )
                                                        ..tanqueDiametroExternoMaiorTresMetros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESDiametroMaiorrValue,
                                                          '3',
                                                        )
                                                        ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESVinteMIlValue,
                                                          '3',
                                                        )
                                                        ..tanqueEnterrado =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESEnterradoValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePernas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPernasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobreSapatas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESSapatasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePedestais =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPedestaisValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobreSelas =
                                                            _model
                                                                .statusDropDownTANQUESSelasValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueEstruturalEmbarcacao !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSapatas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePedestais() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSelas())
                                            Text(
                                              'Tanque estrutural de embarcação?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueEstruturalEmbarcacao !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSapatas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePedestais() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSelas())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTANQUESEmbarcacaoValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTANQUESEmbarcacaoValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTANQUESEmbarcacaoValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTANQUESFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPlataformaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESNavioValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueEstruturalEmbarcacao =
                                                            _model
                                                                .statusDropDownTANQUESEmbarcacaoValue
                                                        ..tanqueEstruturalNavio =
                                                            null
                                                        ..tanqueEstruturalPlataforma =
                                                            null
                                                        ..hdois = null
                                                        ..cdoisHdois = null
                                                        ..combustivel = null
                                                        ..inflamavel = null
                                                        ..toxico = null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTANQUESEmbarca =
                                                      await actions
                                                          .atualizaAceitosTANQUES();
                                                  setState(() {
                                                    _model.tanquesAceitos = _model
                                                        .retornoAceitosTANQUESEmbarca!
                                                        .toList()
                                                        .cast<
                                                            TanquesNrStruct>();
                                                  });
                                                  _model.keysToUpdateTANQUESEmbarca =
                                                      await actions
                                                          .keysToUpdateTANQUES(
                                                    _model
                                                        .retornoAceitosTANQUESEmbarca
                                                        ?.toList(),
                                                  );
                                                  _model.addTANQUESEmbarca =
                                                      await actions
                                                          .addNATANQUES(
                                                    _model
                                                        .keysToUpdateTANQUESEmbarca
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTANQUES =
                                                        _model
                                                            .addTANQUESEmbarca!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueMetalicoArmazenamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue,
                                                          '3',
                                                        )
                                                        ..tanqueDiametroExternoMaiorTresMetros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESDiametroMaiorrValue,
                                                          '3',
                                                        )
                                                        ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESVinteMIlValue,
                                                          '3',
                                                        )
                                                        ..tanqueEnterrado =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESEnterradoValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePernas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPernasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobreSapatas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESSapatasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePedestais =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPedestaisValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobreSelas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESSelasValue,
                                                          '3',
                                                        )
                                                        ..tanqueEstruturalEmbarcacao =
                                                            _model
                                                                .statusDropDownTANQUESEmbarcacaoValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueEstruturalNavio !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSapatas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePedestais() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSelas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEstruturalEmbarcacao())
                                            Text(
                                              'Tanque estrutural de navio?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueEstruturalNavio !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSapatas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePedestais() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSelas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEstruturalEmbarcacao())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTANQUESNavioValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTANQUESNavioValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTANQUESNavioValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTANQUESFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTANQUESPlataformaValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueEstruturalNavio =
                                                            _model
                                                                .statusDropDownTANQUESNavioValue
                                                        ..tanqueEstruturalPlataforma =
                                                            null
                                                        ..hdois = null
                                                        ..cdoisHdois = null
                                                        ..combustivel = null
                                                        ..inflamavel = null
                                                        ..toxico = null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTANQUESNavio =
                                                      await actions
                                                          .atualizaAceitosTANQUES();
                                                  setState(() {
                                                    _model.tanquesAceitos = _model
                                                        .retornoAceitosTANQUESNavio!
                                                        .toList()
                                                        .cast<
                                                            TanquesNrStruct>();
                                                  });
                                                  _model.keysToUpdateTANQUESNavio =
                                                      await actions
                                                          .keysToUpdateTANQUES(
                                                    _model
                                                        .retornoAceitosTANQUESNavio
                                                        ?.toList(),
                                                  );
                                                  _model.addTANQUESNavio =
                                                      await actions
                                                          .addNATANQUES(
                                                    _model
                                                        .keysToUpdateTANQUESNavio
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTANQUES =
                                                        _model.addTANQUESNavio!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueMetalicoArmazenamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue,
                                                          '3',
                                                        )
                                                        ..tanqueDiametroExternoMaiorTresMetros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESDiametroMaiorrValue,
                                                          '3',
                                                        )
                                                        ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESVinteMIlValue,
                                                          '3',
                                                        )
                                                        ..tanqueEnterrado =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESEnterradoValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePernas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPernasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobreSapatas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESSapatasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePedestais =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPedestaisValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobreSelas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESSelasValue,
                                                          '3',
                                                        )
                                                        ..tanqueEstruturalEmbarcacao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESEmbarcacaoValue,
                                                          '3',
                                                        )
                                                        ..tanqueEstruturalNavio =
                                                            _model
                                                                .statusDropDownTANQUESNavioValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueEstruturalPlataforma !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSapatas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePedestais() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSelas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEstruturalEmbarcacao() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEstruturalNavio())
                                            Text(
                                              'Tanque estrutural de plataforma?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .tanqueEstruturalPlataforma !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSapatas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePedestais() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSelas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEstruturalEmbarcacao() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEstruturalNavio())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTANQUESPlataformaValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTANQUESPlataformaValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTANQUESPlataformaValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTANQUESFluidoValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueEstruturalPlataforma =
                                                            _model
                                                                .statusDropDownTANQUESPlataformaValue
                                                        ..hdois = null
                                                        ..cdoisHdois = null
                                                        ..combustivel = null
                                                        ..inflamavel = null
                                                        ..toxico = null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTANQUESPlataforma =
                                                      await actions
                                                          .atualizaAceitosTANQUES();
                                                  setState(() {
                                                    _model.tanquesAceitos = _model
                                                        .retornoAceitosTANQUESPlataforma!
                                                        .toList()
                                                        .cast<
                                                            TanquesNrStruct>();
                                                  });
                                                  _model.keysToUpdateTANQUESPlataforma =
                                                      await actions
                                                          .keysToUpdateTANQUES(
                                                    _model
                                                        .retornoAceitosTANQUESPlataforma
                                                        ?.toList(),
                                                  );
                                                  _model.addTANQUESPlataforma =
                                                      await actions
                                                          .addNATANQUES(
                                                    _model
                                                        .keysToUpdateTANQUESPlataforma
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTANQUES =
                                                        _model
                                                            .addTANQUESPlataforma!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueMetalicoArmazenamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue,
                                                          '3',
                                                        )
                                                        ..tanqueDiametroExternoMaiorTresMetros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESDiametroMaiorrValue,
                                                          '3',
                                                        )
                                                        ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESVinteMIlValue,
                                                          '3',
                                                        )
                                                        ..tanqueEnterrado =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESEnterradoValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePernas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPernasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobreSapatas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESSapatasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePedestais =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPedestaisValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobreSelas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESSelasValue,
                                                          '3',
                                                        )
                                                        ..tanqueEstruturalEmbarcacao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESEmbarcacaoValue,
                                                          '3',
                                                        )
                                                        ..tanqueEstruturalNavio =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESNavioValue,
                                                          '3',
                                                        )
                                                        ..tanqueEstruturalPlataforma =
                                                            _model
                                                                .statusDropDownTANQUESPlataformaValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .hdois !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSapatas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePedestais() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSelas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEstruturalEmbarcacao() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEstruturalNavio() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEstruturalPlataforma())
                                            Text(
                                              'Flúido:',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTANQUES
                                                      .hdois !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueMetalicoArmazenamento() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueDiametroExternoMaiorTresMetros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueCapacidadeNominalMaiorVinteMilLitros() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEnterrado() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePernas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSapatas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobrePedestais() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueApoiadoSobreSelas() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEstruturalEmbarcacao() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEstruturalNavio() &&
                                              FFAppState()
                                                  .userControleTANQUES
                                                  .hasTanqueEstruturalPlataforma())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTANQUESFluidoValueController ??=
                                                    FormFieldController<String>(
                                                        null),
                                                options: [
                                                  'H2',
                                                  'C2H2',
                                                  'Inflamável',
                                                  'Combustível',
                                                  'Tóxico',
                                                  'Não Classificado'
                                                ],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTANQUESFluidoValue =
                                                      val);
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..hdois =
                                                            _model.statusDropDownTANQUESFluidoValue ==
                                                                    'H2'
                                                                ? '1'
                                                                : '0'
                                                        ..cdoisHdois =
                                                            _model.statusDropDownTANQUESFluidoValue ==
                                                                    'C2H2'
                                                                ? '1'
                                                                : '0'
                                                        ..combustivel =
                                                            _model.statusDropDownTANQUESFluidoValue ==
                                                                    'Combustível'
                                                                ? '1'
                                                                : '0'
                                                        ..inflamavel =
                                                            _model.statusDropDownTANQUESFluidoValue ==
                                                                    'Inflamável'
                                                                ? '1'
                                                                : '0'
                                                        ..toxico =
                                                            _model.statusDropDownTANQUESFluidoValue ==
                                                                    'Tóxico'
                                                                ? '1'
                                                                : '0',
                                                    );
                                                  });
                                                  _model.retornoAceitosTANQUESFluido =
                                                      await actions
                                                          .atualizaAceitosTANQUES();
                                                  setState(() {
                                                    _model.tanquesAceitos = _model
                                                        .retornoAceitosTANQUESFluido!
                                                        .toList()
                                                        .cast<
                                                            TanquesNrStruct>();
                                                  });
                                                  _model.keysToUpdateTANQUESFluido =
                                                      await actions
                                                          .keysToUpdateTANQUES(
                                                    _model
                                                        .retornoAceitosTANQUESFluido
                                                        ?.toList(),
                                                  );
                                                  _model.addTANQUESFluido =
                                                      await actions
                                                          .addNATANQUES(
                                                    _model
                                                        .keysToUpdateTANQUESFluido
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTANQUES =
                                                        _model
                                                            .addTANQUESFluido!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTANQUESStruct(
                                                      (e) => e
                                                        ..tanqueMetalicoArmazenamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESMetalicoValue,
                                                          '3',
                                                        )
                                                        ..tanqueDiametroExternoMaiorTresMetros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESDiametroMaiorrValue,
                                                          '3',
                                                        )
                                                        ..tanqueCapacidadeNominalMaiorVinteMilLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESVinteMIlValue,
                                                          '3',
                                                        )
                                                        ..tanqueEnterrado =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESEnterradoValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePernas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPernasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobreSapatas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESSapatasValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobrePedestais =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPedestaisValue,
                                                          '3',
                                                        )
                                                        ..tanqueApoiadoSobreSelas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESSelasValue,
                                                          '3',
                                                        )
                                                        ..tanqueEstruturalEmbarcacao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESEmbarcacaoValue,
                                                          '3',
                                                        )
                                                        ..tanqueEstruturalNavio =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESNavioValue,
                                                          '3',
                                                        )
                                                        ..tanqueEstruturalPlataforma =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTANQUESPlataformaValue,
                                                          '3',
                                                        )
                                                        ..hdois =
                                                            _model.statusDropDownTANQUESFluidoValue ==
                                                                    'H2'
                                                                ? '1'
                                                                : '0'
                                                        ..cdoisHdois =
                                                            _model.statusDropDownTANQUESFluidoValue ==
                                                                    'C2H2'
                                                                ? '1'
                                                                : '0'
                                                        ..combustivel =
                                                            _model.statusDropDownTANQUESFluidoValue ==
                                                                    'Combustível'
                                                                ? '1'
                                                                : '0'
                                                        ..inflamavel =
                                                            _model.statusDropDownTANQUESFluidoValue ==
                                                                    'Inflamável'
                                                                ? '1'
                                                                : '0'
                                                        ..toxico =
                                                            _model.statusDropDownTANQUESFluidoValue ==
                                                                    'Tóxico'
                                                                ? '1'
                                                                : '0',
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      if (_model.tanquesAceitos.length == 1)
                                        Text(
                                          _model.tanquesAceitos.first.codigo,
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      if ((_model.vpAceitos.length == 0) &&
                                          FFAppState()
                                              .userControleVp
                                              .hasINIConformTrzCincoQuatCincoTresInspecNIntru())
                                        Text(
                                          'Código não encontrado! Reveja suas respostas.',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      Row(
                                        mainAxisSize: MainAxisSize.max,
                                        mainAxisAlignment:
                                            MainAxisAlignment.end,
                                        children: [
                                          FFButtonWidget(
                                            onPressed: () async {
                                              setState(() {
                                                FFAppState()
                                                        .aplicabilidadeCreating =
                                                    false;
                                                FFAppState()
                                                        .createAplicabilidadeTANQUES =
                                                    null;
                                              });
                                              setState(() {
                                                FFAppState()
                                                        .userControleTANQUES =
                                                    TanquesNrStruct();
                                              });
                                              setState(() {
                                                _model
                                                    .statusDropDownOutrosValueController1
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController2
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController3
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController4
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController5
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController6
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController7
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController8
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController9
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController10
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController11
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController12
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController13
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController14
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController15
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESMetalicoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESDiametroMaiorrValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESVinteMIlValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESEnterradoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPernasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESSapatasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPedestaisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESSelasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESEmbarcacaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESNavioValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPlataformaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESFluidoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDVolumeTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDPressaoMaiorZeroUmTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDPressaoDzNoveTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSpieTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAlcalisTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDTesteSegurancaTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDBarreiraSisTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSgcCombustaoTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAguaTratadaTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDFluidoTermicoTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDProgramaPlhTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDVolumeValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSpieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAlcalisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDTesteSegurancaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDBarreiraSisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSgcCombustaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAguaTratadaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDFluidoTermicoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownRedePubTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOcupacaoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSistemaAuxiliarTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPlasticoReforTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTransporteTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSubmarinoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownDiametroTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfCodigoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAntesDezTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPmtaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFluidoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTemperaturaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEvidenciaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCatalisadorTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownServicoProprioSpieTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEstudoAbandonadorTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAmpliPorgTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOcupacaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSistemaAuxiliarValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPlasticoReforValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTransporteValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSubmarinoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownDiametroValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfCodigoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAntesDezValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPmtaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFluidoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTemperaturaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEvidenciaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCatalisadorValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEstudoAbandonadorValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFabSerieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownValvulaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownServicoProprioSpieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfInnValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownInmetroValueController
                                                    ?.reset();
                                              });
                                              setState(() {
                                                _model.showAvaliacaoVP = false;
                                                _model.showAvaliacaoTUBVP =
                                                    false;
                                                _model.showAvaliacaoTANQUES =
                                                    false;
                                                _model.showAvaliacaoCALDEIRAS =
                                                    false;
                                                _model.showAvaliacaoTUBCALDEIRAS =
                                                    false;
                                                _model.showAvaliacaoOUTROS =
                                                    false;
                                              });

                                              context.pushNamed('Equipamentos');
                                            },
                                            text: 'Cancelar',
                                            options: FFButtonOptions(
                                              height: 40.0,
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      24.0, 0.0, 24.0, 0.0),
                                              iconPadding: EdgeInsetsDirectional
                                                  .fromSTEB(0.0, 0.0, 0.0, 0.0),
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondary,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .titleSmall
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color: Colors.white,
                                                        letterSpacing: 0.0,
                                                      ),
                                              elevation: 3.0,
                                              borderSide: BorderSide(
                                                color: Colors.transparent,
                                                width: 1.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                          FFButtonWidget(
                                            onPressed: ((_model.tanquesAceitos
                                                            .length >
                                                        1) ||
                                                    (_model.statusDropDownTANQUESMetalicoValue ==
                                                            null ||
                                                        _model.statusDropDownTANQUESMetalicoValue ==
                                                            ''))
                                                ? null
                                                : () async {
                                                    _model.retornoPeriodicidadeTANQUES =
                                                        await queryPeriodicidadeTanqueRecordOnce(
                                                      queryBuilder:
                                                          (periodicidadeTanqueRecord) =>
                                                              periodicidadeTanqueRecord
                                                                  .where(
                                                        'Codigo',
                                                        isEqualTo: _model
                                                            .tanquesAceitos
                                                            .first
                                                            .codigo,
                                                      ),
                                                      singleRecord: true,
                                                    ).then((s) =>
                                                            s.firstOrNull);

                                                    await AplicabilidadeTANQUESRecord
                                                        .collection
                                                        .doc()
                                                        .set(
                                                            createAplicabilidadeTANQUESRecordData(
                                                          tanqueMetalicoArmazenamento:
                                                              FFAppState()
                                                                  .userControleTANQUES
                                                                  .tanqueMetalicoArmazenamento,
                                                          tanqueDiametroExternoMaiorTresMetros:
                                                              FFAppState()
                                                                  .userControleTANQUES
                                                                  .tanqueDiametroExternoMaiorTresMetros,
                                                          tanqueCapacidadeNominalMaiorVinteMilLitros:
                                                              FFAppState()
                                                                  .userControleTANQUES
                                                                  .tanqueCapacidadeNominalMaiorVinteMilLitros,
                                                          tanqueEnterrado: FFAppState()
                                                              .userControleTANQUES
                                                              .tanqueEnterrado,
                                                          tanqueApoiadoSobreSapatas:
                                                              FFAppState()
                                                                  .userControleTANQUES
                                                                  .tanqueApoiadoSobreSapatas,
                                                          tanqueApoiadoSobrePedestais:
                                                              FFAppState()
                                                                  .userControleTANQUES
                                                                  .tanqueApoiadoSobrePedestais,
                                                          tanqueApoiadoSobreSelas:
                                                              FFAppState()
                                                                  .userControleTANQUES
                                                                  .tanqueApoiadoSobreSelas,
                                                          tanqueEstruturalEmbarcacao:
                                                              FFAppState()
                                                                  .userControleTANQUES
                                                                  .tanqueEstruturalEmbarcacao,
                                                          tanqueEstruturalNavio:
                                                              FFAppState()
                                                                  .userControleTANQUES
                                                                  .tanqueEstruturalNavio,
                                                          tanqueEstruturalPlataforma:
                                                              FFAppState()
                                                                  .userControleTANQUES
                                                                  .tanqueEstruturalPlataforma,
                                                          combustivel: FFAppState()
                                                              .userControleTANQUES
                                                              .combustivel,
                                                          inflamavel: FFAppState()
                                                              .userControleTANQUES
                                                              .inflamavel,
                                                          toxico: FFAppState()
                                                              .userControleTANQUES
                                                              .toxico,
                                                          codigo: _model
                                                              .tanquesAceitos
                                                              .first
                                                              .codigo,
                                                          tanqueApoiadoSobrePernas:
                                                              FFAppState()
                                                                  .userControleTANQUES
                                                                  .tanqueApoiadoSobrePernas,
                                                          hdois: FFAppState()
                                                              .userControleTANQUES
                                                              .hdois,
                                                          cdoisHdois: FFAppState()
                                                              .userControleTANQUES
                                                              .cdoisHdois,
                                                          classeFluido: () {
                                                            if ((FFAppState().userControleTANQUES.hdois == '1') ||
                                                                (FFAppState()
                                                                        .userControleTANQUES
                                                                        .cdoisHdois ==
                                                                    '1') ||
                                                                (FFAppState()
                                                                        .userControleTANQUES
                                                                        .inflamavel ==
                                                                    '1')) {
                                                              return 'A';
                                                            } else if ((FFAppState()
                                                                        .userControleTANQUES
                                                                        .combustivel ==
                                                                    '1') ||
                                                                (FFAppState()
                                                                        .userControleTANQUES
                                                                        .toxico ==
                                                                    '1')) {
                                                              return 'A OU B';
                                                            } else {
                                                              return 'D';
                                                            }
                                                          }(),
                                                          observacao: _model
                                                              .retornoPeriodicidadeTANQUES
                                                              ?.observacao,
                                                          equipamento: FFAppState()
                                                              .equipamentoAplicabilidade,
                                                          tipoEquipamento:
                                                              FFAppState()
                                                                  .tipoEquipAplicabilidade,
                                                          descricaoEquipamento:
                                                              FFAppState()
                                                                  .descriccaoEquipAplicabilidade,
                                                          tagEquipamento:
                                                              FFAppState()
                                                                  .tagEquipAplicabilidade,
                                                          serieEquipamento:
                                                              FFAppState()
                                                                  .serieEquipAplicabilidade,
                                                          dataCadEquipamento:
                                                              FFAppState()
                                                                  .dataCadEquipAplicabilidade
                                                                  ?.toString(),
                                                          avaliador:
                                                              currentUserDisplayName,
                                                          createdTime:
                                                              getCurrentTimestamp,
                                                          contrato: FFAppState()
                                                              .contrato,
                                                          fluido: _model
                                                              .statusDropDownTANQUESFluidoValue,
                                                        ));

                                                    await FFAppState()
                                                        .createAplicabilidadeTANQUES!
                                                        .update(
                                                            createEquipamentosRecordData(
                                                          codigo: _model
                                                              .tanquesAceitos
                                                              .first
                                                              .codigo,
                                                          interna:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeTANQUES
                                                                ?.observacao,
                                                            '0',
                                                          ),
                                                          externa:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeTANQUES
                                                                ?.observacao,
                                                            '0',
                                                          ),
                                                        ));
                                                    setState(() {
                                                      FFAppState()
                                                              .aplicabilidadeCreating =
                                                          false;
                                                      FFAppState()
                                                              .createAplicabilidadeTANQUES =
                                                          null;
                                                    });
                                                    setState(() {
                                                      FFAppState()
                                                              .userControleTANQUES =
                                                          TanquesNrStruct();
                                                    });

                                                    context.goNamed(
                                                        'Equipamentos');

                                                    setState(() {});
                                                  },
                                            text: 'Salvar',
                                            options: FFButtonOptions(
                                              height: 40.0,
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      24.0, 0.0, 24.0, 0.0),
                                              iconPadding: EdgeInsetsDirectional
                                                  .fromSTEB(0.0, 0.0, 0.0, 0.0),
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .primary,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .titleSmall
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color: Colors.white,
                                                        letterSpacing: 0.0,
                                                      ),
                                              elevation: 3.0,
                                              borderSide: BorderSide(
                                                color: Colors.transparent,
                                                width: 1.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                        ].divide(SizedBox(width: 50.0)),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      if (FFAppState().createAplicabilidadeTUBCALDS != null)
                        Column(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 12.0, 16.0, 12.0),
                              child: Container(
                                decoration: BoxDecoration(
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryBackground,
                                  borderRadius: BorderRadius.circular(20.0),
                                ),
                                child: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      20.0, 20.0, 20.0, 20.0),
                                  child: Column(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 10.0, 0.0, 0.0),
                                        child: Text(
                                          'TUBULAÇÕES DE CALDEIRAS',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .primary,
                                                fontSize: 18.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 30.0, 0.0, 20.0),
                                        child: Column(
                                          mainAxisSize: MainAxisSize.max,
                                          children: [
                                            Row(
                                              mainAxisSize: MainAxisSize.min,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    'Equipamento',
                                                    textAlign: TextAlign.end,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                ),
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    FFAppState()
                                                        .equipamentoAplicabilidade,
                                                    textAlign: TextAlign.start,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                                ),
                                              ].divide(SizedBox(width: 20.0)),
                                            ),
                                            Row(
                                              mainAxisSize: MainAxisSize.min,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    'Tipo de equipamento',
                                                    textAlign: TextAlign.end,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                ),
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    FFAppState()
                                                        .tipoEquipAplicabilidade,
                                                    textAlign: TextAlign.start,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                                ),
                                              ].divide(SizedBox(width: 20.0)),
                                            ),
                                          ].divide(SizedBox(height: 10.0)),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 0.0, 0.0, 25.0),
                                        child: Container(
                                          decoration: BoxDecoration(
                                            color: FlutterFlowTheme.of(context)
                                                .secondaryBackground,
                                          ),
                                        ),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Volume menor que 100 litros?',
                                            style: FlutterFlowTheme.of(context)
                                                .bodyMedium
                                                .override(
                                                  fontFamily: 'Inter',
                                                  fontSize: 16.0,
                                                  letterSpacing: 0.0,
                                                  fontWeight: FontWeight.w600,
                                                ),
                                          ),
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0.0, 0.0, 0.0, 25.0),
                                            child: FlutterFlowDropDown<String>(
                                              controller: _model
                                                      .statusDropDownCALDVolumeTUBCValueController ??=
                                                  FormFieldController<String>(
                                                _model.statusDropDownCALDVolumeTUBCValue ??=
                                                    '',
                                              ),
                                              options:
                                                  List<String>.from(['1', '0']),
                                              optionLabels: ['Sim', 'Não'],
                                              onChanged: (val) async {
                                                setState(() => _model
                                                        .statusDropDownCALDVolumeTUBCValue =
                                                    val);
                                                setState(() {
                                                  _model
                                                      .statusDropDownCALDPressaoMaiorZeroUmTUBCValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDPressaoDzNoveTUBCValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDSpieTUBCValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDAlcalisTUBCValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDBarreiraSisTUBCValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDSgcCombustaoTUBCValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDTesteSegurancaTUBCValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDAguaTratadaTUBCValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDFluidoTermicoTUBCValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDProgramaPlhTUBCValueController
                                                      ?.reset();
                                                });
                                                setState(() {
                                                  FFAppState()
                                                      .updateUserControleTUBCALDStruct(
                                                    (e) => e
                                                      ..volumeMenorCemLitros =
                                                          _model
                                                              .statusDropDownCALDVolumeTUBCValue
                                                      ..pressaoMaiorZeroMeiaUm =
                                                          null
                                                      ..pressaoMaiorIgualDzNoveNove =
                                                          null
                                                      ..servicoProprioInspecaoEquipamentoSPIE =
                                                          null
                                                      ..recuperacaoAlcalis =
                                                          null
                                                      ..testeAberturaValvulasSegurancaUmAno =
                                                          null
                                                      ..barreiraSIS = null
                                                      ..comSGC = null
                                                      ..operacaoComAguaTratada =
                                                          null
                                                      ..vaporizacaoFluidoTermico =
                                                          null
                                                      ..ampliacaoProgramaPLH =
                                                          null,
                                                  );
                                                });
                                                _model.retornoAceitosCaldeiraTUBVolume =
                                                    await actions
                                                        .atualizaAceitosTUBCALD();
                                                setState(() {
                                                  _model.tubCaldeirasAceitos = _model
                                                      .retornoAceitosCaldeiraTUBVolume!
                                                      .toList()
                                                      .cast<TubCaldNrStruct>();
                                                });
                                                _model.keysToUpdateCaldeiraTUBVolume =
                                                    await actions
                                                        .keysToUpdateTUBCALD(
                                                  _model
                                                      .retornoAceitosCaldeiraTUBVolume
                                                      ?.toList(),
                                                );
                                                _model.addCaldeiraTUBVolume =
                                                    await actions.addNATUBCALD(
                                                  _model
                                                      .keysToUpdateCaldeiraTUBVolume
                                                      ?.toList(),
                                                );
                                                setState(() {
                                                  FFAppState()
                                                          .userControleTUBCALD =
                                                      _model
                                                          .addCaldeiraTUBVolume!;
                                                });
                                                setState(() {
                                                  FFAppState()
                                                      .updateUserControleTUBCALDStruct(
                                                    (e) => e
                                                      ..volumeMenorCemLitros =
                                                          _model
                                                              .statusDropDownCALDVolumeTUBCValue,
                                                  );
                                                });

                                                setState(() {});
                                              },
                                              width: MediaQuery.sizeOf(context)
                                                      .width *
                                                  1.0,
                                              height: 50.0,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                      ),
                                              hintText: 'Selecione',
                                              icon: Icon(
                                                Icons
                                                    .keyboard_arrow_down_rounded,
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryText,
                                                size: 24.0,
                                              ),
                                              fillColor:
                                                  FlutterFlowTheme.of(context)
                                                      .secondaryBackground,
                                              elevation: 2.0,
                                              borderColor:
                                                  FlutterFlowTheme.of(context)
                                                      .alternate,
                                              borderWidth: 2.0,
                                              borderRadius: 8.0,
                                              margin: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      16.0, 4.0, 16.0, 4.0),
                                              hidesUnderline: true,
                                              isOverButton: true,
                                              isSearchable: false,
                                              isMultiSelect: false,
                                            ),
                                          ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .pressaoMaiorZeroMeiaUm !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              (_model.statusDropDownCALDVolumeTUBCValue !=
                                                  '1'))
                                            Text(
                                              'Pressão  maior que 0,61kgf/cm²?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .pressaoMaiorZeroMeiaUm !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              (_model.statusDropDownCALDVolumeTUBCValue !=
                                                  '1'))
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDPressaoMaiorZeroUmTUBCValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDPressaoMaiorZeroUmTUBCValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDPressaoMaiorZeroUmTUBCValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDPressaoDzNoveTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDSpieTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDAlcalisTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDBarreiraSisTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDSgcCombustaoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDTesteSegurancaTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDAguaTratadaTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDProgramaPlhTUBCValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            _model
                                                                .statusDropDownCALDPressaoMaiorZeroUmTUBCValue
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            null
                                                        ..servicoProprioInspecaoEquipamentoSPIE =
                                                            null
                                                        ..recuperacaoAlcalis =
                                                            null
                                                        ..testeAberturaValvulasSegurancaUmAno =
                                                            null
                                                        ..barreiraSIS = null
                                                        ..comSGC = null
                                                        ..operacaoComAguaTratada =
                                                            null
                                                        ..vaporizacaoFluidoTermico =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraTUBPressaoZeroUm =
                                                      await actions
                                                          .atualizaAceitosTUBCALD();
                                                  setState(() {
                                                    _model.tubCaldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraTUBPressaoZeroUm!
                                                        .toList()
                                                        .cast<
                                                            TubCaldNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraTUBPressaoZeroUm =
                                                      await actions
                                                          .keysToUpdateTUBCALD(
                                                    _model
                                                        .retornoAceitosCaldeiraTUBPressaoZeroUm
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraTUBPressaoZeroUm =
                                                      await actions
                                                          .addNATUBCALD(
                                                    _model
                                                        .keysToUpdateCaldeiraTUBPressaoZeroUm
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBCALD =
                                                        _model
                                                            .addCaldeiraTUBPressaoZeroUm!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            _model
                                                                .statusDropDownCALDPressaoMaiorZeroUmTUBCValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .pressaoMaiorIgualDzNoveNove !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm())
                                            Text(
                                              'Pressão  maior ou igual a 19,981kgf/cm²?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .pressaoMaiorIgualDzNoveNove !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDPressaoDzNoveTUBCValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDPressaoDzNoveTUBCValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDPressaoDzNoveTUBCValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDSpieTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDAlcalisTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDBarreiraSisTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDSgcCombustaoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDTesteSegurancaTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDAguaTratadaTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDProgramaPlhTUBCValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            _model
                                                                .statusDropDownCALDPressaoDzNoveTUBCValue
                                                        ..servicoProprioInspecaoEquipamentoSPIE =
                                                            null
                                                        ..recuperacaoAlcalis =
                                                            null
                                                        ..testeAberturaValvulasSegurancaUmAno =
                                                            null
                                                        ..barreiraSIS = null
                                                        ..comSGC = null
                                                        ..operacaoComAguaTratada =
                                                            null
                                                        ..vaporizacaoFluidoTermico =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraTUBPressaoDzNove =
                                                      await actions
                                                          .atualizaAceitosTUBCALD();
                                                  setState(() {
                                                    _model.tubCaldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraTUBPressaoDzNove!
                                                        .toList()
                                                        .cast<
                                                            TubCaldNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraTUBDzNove =
                                                      await actions
                                                          .keysToUpdateTUBCALD(
                                                    _model
                                                        .retornoAceitosCaldeiraTUBPressaoDzNove
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraTUBDzNove =
                                                      await actions
                                                          .addNATUBCALD(
                                                    _model
                                                        .keysToUpdateCaldeiraTUBDzNove
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBCALD =
                                                        _model
                                                            .addCaldeiraTUBDzNove!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoMaiorZeroUmTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            _model
                                                                .statusDropDownCALDPressaoDzNoveTUBCValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .servicoProprioInspecaoEquipamentoSPIE !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove())
                                            Text(
                                              'SPIE - Serviço Próprio de Inspeção de Equipamento?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .servicoProprioInspecaoEquipamentoSPIE !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDSpieTUBCValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDSpieTUBCValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDSpieTUBCValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDAlcalisTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDBarreiraSisTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDSgcCombustaoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDTesteSegurancaTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDAguaTratadaTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDProgramaPlhTUBCValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..servicoProprioInspecaoEquipamentoSPIE =
                                                            _model
                                                                .statusDropDownCALDSpieTUBCValue
                                                        ..recuperacaoAlcalis =
                                                            null
                                                        ..testeAberturaValvulasSegurancaUmAno =
                                                            null
                                                        ..barreiraSIS = null
                                                        ..comSGC = null
                                                        ..operacaoComAguaTratada =
                                                            null
                                                        ..vaporizacaoFluidoTermico =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraTUBSpie =
                                                      await actions
                                                          .atualizaAceitosTUBCALD();
                                                  setState(() {
                                                    _model.tubCaldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraTUBSpie!
                                                        .toList()
                                                        .cast<
                                                            TubCaldNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraTUBSpie =
                                                      await actions
                                                          .keysToUpdateTUBCALD(
                                                    _model
                                                        .retornoAceitosCaldeiraTUBSpie
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraTUBSpie =
                                                      await actions
                                                          .addNATUBCALD(
                                                    _model
                                                        .keysToUpdateCaldeiraTUBSpie
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBCALD =
                                                        _model
                                                            .addCaldeiraTUBSpie!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoMaiorZeroUmTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoDzNoveTUBCValue,
                                                          '3',
                                                        )
                                                        ..servicoProprioInspecaoEquipamentoSPIE =
                                                            _model
                                                                .statusDropDownCALDSpieTUBCValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .recuperacaoAlcalis !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE())
                                            Text(
                                              'Para Recuperação de Álcalis?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .recuperacaoAlcalis !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDAlcalisTUBCValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDAlcalisTUBCValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDAlcalisTUBCValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDBarreiraSisTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDSgcCombustaoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDTesteSegurancaTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDAguaTratadaTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDProgramaPlhTUBCValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..recuperacaoAlcalis =
                                                            _model
                                                                .statusDropDownCALDAlcalisTUBCValue
                                                        ..testeAberturaValvulasSegurancaUmAno =
                                                            null
                                                        ..barreiraSIS = null
                                                        ..comSGC = null
                                                        ..operacaoComAguaTratada =
                                                            null
                                                        ..vaporizacaoFluidoTermico =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraTUBAlcalis =
                                                      await actions
                                                          .atualizaAceitosTUBCALD();
                                                  setState(() {
                                                    _model.tubCaldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraTUBAlcalis!
                                                        .toList()
                                                        .cast<
                                                            TubCaldNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraTUBAlcalis =
                                                      await actions
                                                          .keysToUpdateTUBCALD(
                                                    _model
                                                        .retornoAceitosCaldeiraTUBAlcalis
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraTUBAlcalis =
                                                      await actions
                                                          .addNATUBCALD(
                                                    _model
                                                        .keysToUpdateCaldeiraTUBAlcalis
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBCALD =
                                                        _model
                                                            .addCaldeiraTUBAlcalis!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoMaiorZeroUmTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoDzNoveTUBCValue,
                                                          '3',
                                                        )
                                                        ..servicoProprioInspecaoEquipamentoSPIE =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieTUBCValue,
                                                          '3',
                                                        )
                                                        ..recuperacaoAlcalis =
                                                            _model
                                                                .statusDropDownCALDAlcalisTUBCValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .testeAberturaValvulasSegurancaUmAno !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasRecuperacaoAlcalis())
                                            Text(
                                              'Teste de Abertura de Válvulas de Seguurança a cada período de, no máximo, de 12 meses?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .testeAberturaValvulasSegurancaUmAno !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasRecuperacaoAlcalis())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDTesteSegurancaTUBCValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDTesteSegurancaTUBCValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDTesteSegurancaTUBCValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDBarreiraSisTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDSgcCombustaoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDAguaTratadaTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDProgramaPlhTUBCValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..testeAberturaValvulasSegurancaUmAno =
                                                            _model
                                                                .statusDropDownCALDTesteSegurancaTUBCValue
                                                        ..barreiraSIS = null
                                                        ..comSGC = null
                                                        ..operacaoComAguaTratada =
                                                            null
                                                        ..vaporizacaoFluidoTermico =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraTUBTesteSeguranca =
                                                      await actions
                                                          .atualizaAceitosTUBCALD();
                                                  setState(() {
                                                    _model.tubCaldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraTUBTesteSeguranca!
                                                        .toList()
                                                        .cast<
                                                            TubCaldNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraTUBTesteSeguranca =
                                                      await actions
                                                          .keysToUpdateTUBCALD(
                                                    _model
                                                        .retornoAceitosCaldeiraTUBTesteSeguranca
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraTUBTesteSeguranca =
                                                      await actions
                                                          .addNATUBCALD(
                                                    _model
                                                        .keysToUpdateCaldeiraTUBTesteSeguranca
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBCALD =
                                                        _model
                                                            .addCaldeiraTUBTesteSeguranca!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoMaiorZeroUmTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoDzNoveTUBCValue,
                                                          '3',
                                                        )
                                                        ..servicoProprioInspecaoEquipamentoSPIE =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieTUBCValue,
                                                          '3',
                                                        )
                                                        ..recuperacaoAlcalis =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAlcalisTUBCValue,
                                                          '3',
                                                        )
                                                        ..testeAberturaValvulasSegurancaUmAno =
                                                            _model
                                                                .statusDropDownCALDTesteSegurancaTUBCValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .barreiraSIS !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasTesteAberturaValvulasSegurancaUmAno())
                                            Text(
                                              'Barreira Por SIS - Sistema Instrumentado de Segurança?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .barreiraSIS !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasTesteAberturaValvulasSegurancaUmAno())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDBarreiraSisTUBCValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDBarreiraSisTUBCValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDBarreiraSisTUBCValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDSgcCombustaoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDAguaTratadaTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDProgramaPlhTUBCValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..barreiraSIS = _model
                                                            .statusDropDownCALDBarreiraSisTUBCValue
                                                        ..comSGC = null
                                                        ..operacaoComAguaTratada =
                                                            null
                                                        ..vaporizacaoFluidoTermico =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraTUBBarreiraSis =
                                                      await actions
                                                          .atualizaAceitosTUBCALD();
                                                  setState(() {
                                                    _model.tubCaldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraTUBBarreiraSis!
                                                        .toList()
                                                        .cast<
                                                            TubCaldNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraTUBBarreiraSis =
                                                      await actions
                                                          .keysToUpdateTUBCALD(
                                                    _model
                                                        .retornoAceitosCaldeiraTUBBarreiraSis
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraTUBBarreiraSis =
                                                      await actions
                                                          .addNATUBCALD(
                                                    _model
                                                        .keysToUpdateCaldeiraTUBBarreiraSis
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBCALD =
                                                        _model
                                                            .addCaldeiraTUBBarreiraSis!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoMaiorZeroUmTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoDzNoveTUBCValue,
                                                          '3',
                                                        )
                                                        ..servicoProprioInspecaoEquipamentoSPIE =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieTUBCValue,
                                                          '3',
                                                        )
                                                        ..recuperacaoAlcalis =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAlcalisTUBCValue,
                                                          '3',
                                                        )
                                                        ..testeAberturaValvulasSegurancaUmAno =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDTesteSegurancaTUBCValue,
                                                          '3',
                                                        )
                                                        ..barreiraSIS = _model
                                                            .statusDropDownCALDBarreiraSisTUBCValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .comSGC !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasTesteAberturaValvulasSegurancaUmAno() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasBarreiraSIS())
                                            Text(
                                              'Com SGC- Sistema de Gerenciamento de Combustão?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBCALD
                                                      .comSGC !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasTesteAberturaValvulasSegurancaUmAno() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasBarreiraSIS())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDSgcCombustaoTUBCValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDSgcCombustaoTUBCValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDSgcCombustaoTUBCValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDAguaTratadaTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDProgramaPlhTUBCValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..comSGC = _model
                                                            .statusDropDownCALDSgcCombustaoTUBCValue
                                                        ..operacaoComAguaTratada =
                                                            null
                                                        ..vaporizacaoFluidoTermico =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraTUBSgc =
                                                      await actions
                                                          .atualizaAceitosTUBCALD();
                                                  setState(() {
                                                    _model.tubCaldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraTUBSgc!
                                                        .toList()
                                                        .cast<
                                                            TubCaldNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraTUBSgc =
                                                      await actions
                                                          .keysToUpdateTUBCALD(
                                                    _model
                                                        .retornoAceitosCaldeiraTUBSgc
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraTUBSgc =
                                                      await actions
                                                          .addNATUBCALD(
                                                    _model
                                                        .keysToUpdateCaldeiraTUBSgc
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBCALD =
                                                        _model
                                                            .addCaldeiraTUBSgc!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoMaiorZeroUmTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoDzNoveTUBCValue,
                                                          '3',
                                                        )
                                                        ..servicoProprioInspecaoEquipamentoSPIE =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieTUBCValue,
                                                          '3',
                                                        )
                                                        ..recuperacaoAlcalis =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAlcalisTUBCValue,
                                                          '3',
                                                        )
                                                        ..testeAberturaValvulasSegurancaUmAno =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDTesteSegurancaTUBCValue,
                                                          '3',
                                                        )
                                                        ..barreiraSIS =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDBarreiraSisTUBCValue,
                                                          '3',
                                                        )
                                                        ..comSGC = _model
                                                            .statusDropDownCALDSgcCombustaoTUBCValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleTUBCALD.operacaoComAguaTratada !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasTesteAberturaValvulasSegurancaUmAno() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasBarreiraSIS() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasComSGC())
                                            Text(
                                              'Operação Com Água Tratada?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleTUBCALD.operacaoComAguaTratada !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasTesteAberturaValvulasSegurancaUmAno() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasBarreiraSIS() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasComSGC())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDAguaTratadaTUBCValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDAguaTratadaTUBCValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDAguaTratadaTUBCValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoTUBCValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDProgramaPlhTUBCValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..operacaoComAguaTratada =
                                                            _model
                                                                .statusDropDownCALDAguaTratadaTUBCValue
                                                        ..vaporizacaoFluidoTermico =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraTUBAguaTratada =
                                                      await actions
                                                          .atualizaAceitosTUBCALD();
                                                  setState(() {
                                                    _model.tubCaldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraTUBAguaTratada!
                                                        .toList()
                                                        .cast<
                                                            TubCaldNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraTUBAguaTratada =
                                                      await actions
                                                          .keysToUpdateTUBCALD(
                                                    _model
                                                        .retornoAceitosCaldeiraTUBAguaTratada
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraTUBAguaTratada =
                                                      await actions
                                                          .addNATUBCALD(
                                                    _model
                                                        .keysToUpdateCaldeiraTUBAguaTratada
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBCALD =
                                                        _model
                                                            .addCaldeiraTUBAguaTratada!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoMaiorZeroUmTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoDzNoveTUBCValue,
                                                          '3',
                                                        )
                                                        ..servicoProprioInspecaoEquipamentoSPIE =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieTUBCValue,
                                                          '3',
                                                        )
                                                        ..recuperacaoAlcalis =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAlcalisTUBCValue,
                                                          '3',
                                                        )
                                                        ..testeAberturaValvulasSegurancaUmAno =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDTesteSegurancaTUBCValue,
                                                          '3',
                                                        )
                                                        ..barreiraSIS =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDBarreiraSisTUBCValue,
                                                          '3',
                                                        )
                                                        ..comSGC =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSgcCombustaoTUBCValue,
                                                          '3',
                                                        )
                                                        ..operacaoComAguaTratada =
                                                            _model
                                                                .statusDropDownCALDAguaTratadaTUBCValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleTUBCALD.vaporizacaoFluidoTermico !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasTesteAberturaValvulasSegurancaUmAno() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasBarreiraSIS() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasComSGC() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasOperacaoComAguaTratada())
                                            Text(
                                              'Vaporização de Fluido Térmico?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleTUBCALD.vaporizacaoFluidoTermico !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasTesteAberturaValvulasSegurancaUmAno() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasBarreiraSIS() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasComSGC() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasOperacaoComAguaTratada())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDFluidoTermicoTUBCValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDFluidoTermicoTUBCValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDFluidoTermicoTUBCValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDProgramaPlhTUBCValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..vaporizacaoFluidoTermico =
                                                            _model
                                                                .statusDropDownCALDFluidoTermicoTUBCValue
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraTUBFluidoTermico =
                                                      await actions
                                                          .atualizaAceitosTUBCALD();
                                                  setState(() {
                                                    _model.tubCaldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraTUBFluidoTermico!
                                                        .toList()
                                                        .cast<
                                                            TubCaldNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraTUBFluidoTermico =
                                                      await actions
                                                          .keysToUpdateTUBCALD(
                                                    _model
                                                        .retornoAceitosCaldeiraTUBFluidoTermico
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraTUBFluidoTermico =
                                                      await actions
                                                          .addNATUBCALD(
                                                    _model
                                                        .keysToUpdateCaldeiraTUBFluidoTermico
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBCALD =
                                                        _model
                                                            .addCaldeiraTUBFluidoTermico!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoMaiorZeroUmTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoDzNoveTUBCValue,
                                                          '3',
                                                        )
                                                        ..servicoProprioInspecaoEquipamentoSPIE =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieTUBCValue,
                                                          '3',
                                                        )
                                                        ..recuperacaoAlcalis =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAlcalisTUBCValue,
                                                          '3',
                                                        )
                                                        ..testeAberturaValvulasSegurancaUmAno =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDTesteSegurancaTUBCValue,
                                                          '3',
                                                        )
                                                        ..barreiraSIS =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDBarreiraSisTUBCValue,
                                                          '3',
                                                        )
                                                        ..comSGC =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSgcCombustaoTUBCValue,
                                                          '3',
                                                        )
                                                        ..operacaoComAguaTratada =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAguaTratadaTUBCValue,
                                                          '3',
                                                        )
                                                        ..vaporizacaoFluidoTermico =
                                                            _model
                                                                .statusDropDownCALDFluidoTermicoTUBCValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleTUBCALD.ampliacaoProgramaPLH !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasTesteAberturaValvulasSegurancaUmAno() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasBarreiraSIS() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasComSGC() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasOperacaoComAguaTratada() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVaporizacaoFluidoTermico())
                                            Text(
                                              ' Ampliação por Programa de PLH?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleTUBCALD.ampliacaoProgramaPLH !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasServicoProprioInspecaoEquipamentoSPIE() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasTesteAberturaValvulasSegurancaUmAno() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasBarreiraSIS() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasComSGC() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasOperacaoComAguaTratada() &&
                                              FFAppState()
                                                  .userControleTUBCALD
                                                  .hasVaporizacaoFluidoTermico())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDProgramaPlhTUBCValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDProgramaPlhTUBCValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDProgramaPlhTUBCValue =
                                                      val);
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..ampliacaoProgramaPLH =
                                                            _model
                                                                .statusDropDownCALDProgramaPlhTUBCValue,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraTUBProgramapaPlh =
                                                      await actions
                                                          .atualizaAceitosTUBCALD();
                                                  setState(() {
                                                    _model.tubCaldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraTUBProgramapaPlh!
                                                        .toList()
                                                        .cast<
                                                            TubCaldNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraTUBProgramapaPlh =
                                                      await actions
                                                          .keysToUpdateTUBCALD(
                                                    _model
                                                        .retornoAceitosCaldeiraTUBProgramapaPlh
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraTUBProgramapaPlh =
                                                      await actions
                                                          .addNATUBCALD(
                                                    _model
                                                        .keysToUpdateCaldeiraTUBProgramapaPlh
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBCALD =
                                                        _model
                                                            .addCaldeiraTUBProgramapaPlh!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBCALDStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoMaiorZeroUmTUBCValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDPressaoDzNoveTUBCValue,
                                                          '3',
                                                        )
                                                        ..servicoProprioInspecaoEquipamentoSPIE =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieTUBCValue,
                                                          '3',
                                                        )
                                                        ..recuperacaoAlcalis =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAlcalisTUBCValue,
                                                          '3',
                                                        )
                                                        ..testeAberturaValvulasSegurancaUmAno =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDTesteSegurancaTUBCValue,
                                                          '3',
                                                        )
                                                        ..barreiraSIS =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDBarreiraSisTUBCValue,
                                                          '3',
                                                        )
                                                        ..comSGC =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSgcCombustaoTUBCValue,
                                                          '3',
                                                        )
                                                        ..operacaoComAguaTratada =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAguaTratadaTUBCValue,
                                                          '3',
                                                        )
                                                        ..vaporizacaoFluidoTermico =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDFluidoTermicoTUBCValue,
                                                          '3',
                                                        )
                                                        ..ampliacaoProgramaPLH =
                                                            _model
                                                                .statusDropDownCALDProgramaPlhTUBCValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      if (_model.tubCaldeirasAceitos.length ==
                                          1)
                                        Text(
                                          _model
                                              .tubCaldeirasAceitos.first.codigo,
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      if ((_model.vpAceitos.length == 0) &&
                                          FFAppState()
                                              .userControleVp
                                              .hasINIConformTrzCincoQuatCincoTresInspecNIntru())
                                        Text(
                                          'Código não encontrado! Reveja suas respostas.',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      Row(
                                        mainAxisSize: MainAxisSize.max,
                                        mainAxisAlignment:
                                            MainAxisAlignment.end,
                                        children: [
                                          FFButtonWidget(
                                            onPressed: () async {
                                              setState(() {
                                                FFAppState()
                                                        .aplicabilidadeCreating =
                                                    false;
                                                FFAppState()
                                                        .createAplicabilidadeTUBCALDS =
                                                    null;
                                              });
                                              setState(() {
                                                FFAppState()
                                                        .userControleTUBCALD =
                                                    TubCaldNrStruct();
                                              });
                                              setState(() {
                                                _model
                                                    .statusDropDownOutrosValueController1
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController2
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController3
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController4
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController5
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController6
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController7
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController8
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController9
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController10
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController11
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController12
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController13
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController14
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController15
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESMetalicoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESDiametroMaiorrValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESVinteMIlValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESEnterradoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPernasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESSapatasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPedestaisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESSelasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESEmbarcacaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESNavioValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPlataformaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESFluidoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDVolumeTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDPressaoMaiorZeroUmTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDPressaoDzNoveTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSpieTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAlcalisTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDTesteSegurancaTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDBarreiraSisTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSgcCombustaoTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAguaTratadaTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDFluidoTermicoTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDProgramaPlhTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDVolumeValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSpieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAlcalisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDTesteSegurancaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDBarreiraSisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSgcCombustaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAguaTratadaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDFluidoTermicoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownRedePubTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOcupacaoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSistemaAuxiliarTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPlasticoReforTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTransporteTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSubmarinoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownDiametroTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfCodigoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAntesDezTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPmtaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFluidoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTemperaturaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEvidenciaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCatalisadorTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownServicoProprioSpieTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEstudoAbandonadorTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAmpliPorgTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOcupacaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSistemaAuxiliarValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPlasticoReforValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTransporteValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSubmarinoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownDiametroValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfCodigoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAntesDezValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPmtaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFluidoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTemperaturaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEvidenciaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCatalisadorValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEstudoAbandonadorValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFabSerieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownValvulaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownServicoProprioSpieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfInnValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownInmetroValueController
                                                    ?.reset();
                                              });
                                              setState(() {
                                                _model.showAvaliacaoVP = false;
                                                _model.showAvaliacaoTUBVP =
                                                    false;
                                                _model.showAvaliacaoTANQUES =
                                                    false;
                                                _model.showAvaliacaoCALDEIRAS =
                                                    false;
                                                _model.showAvaliacaoTUBCALDEIRAS =
                                                    false;
                                                _model.showAvaliacaoOUTROS =
                                                    false;
                                              });

                                              context.pushNamed('Equipamentos');
                                            },
                                            text: 'Cancelar',
                                            options: FFButtonOptions(
                                              height: 40.0,
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      24.0, 0.0, 24.0, 0.0),
                                              iconPadding: EdgeInsetsDirectional
                                                  .fromSTEB(0.0, 0.0, 0.0, 0.0),
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondary,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .titleSmall
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color: Colors.white,
                                                        letterSpacing: 0.0,
                                                      ),
                                              elevation: 3.0,
                                              borderSide: BorderSide(
                                                color: Colors.transparent,
                                                width: 1.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                          FFButtonWidget(
                                            onPressed: ((_model
                                                            .tubCaldeirasAceitos
                                                            .length >
                                                        1) ||
                                                    (_model.statusDropDownCALDVolumeTUBCValue ==
                                                            null ||
                                                        _model.statusDropDownCALDVolumeTUBCValue ==
                                                            ''))
                                                ? null
                                                : () async {
                                                    _model.retornoPeriodicidadeTUBCALDS =
                                                        await queryPeriodicidadeTubCaldeiraRecordOnce(
                                                      queryBuilder:
                                                          (periodicidadeTubCaldeiraRecord) =>
                                                              periodicidadeTubCaldeiraRecord
                                                                  .where(
                                                        'Codigo',
                                                        isEqualTo: _model
                                                            .tubCaldeirasAceitos
                                                            .first
                                                            .codigo,
                                                      ),
                                                      singleRecord: true,
                                                    ).then((s) =>
                                                            s.firstOrNull);

                                                    await AplicabilidadeTUBCALDSRecord
                                                        .collection
                                                        .doc()
                                                        .set(
                                                            createAplicabilidadeTUBCALDSRecordData(
                                                          volumeMenorCemLitros:
                                                              FFAppState()
                                                                  .userControleTUBCALD
                                                                  .volumeMenorCemLitros,
                                                          pressaoMaiorZeroMeiaUm:
                                                              FFAppState()
                                                                  .userControleTUBCALD
                                                                  .pressaoMaiorZeroMeiaUm,
                                                          pressaoMaiorIgualDzNoveNove:
                                                              FFAppState()
                                                                  .userControleTUBCALD
                                                                  .pressaoMaiorIgualDzNoveNove,
                                                          recuperacaoAlcalis:
                                                              FFAppState()
                                                                  .userControleTUBCALD
                                                                  .recuperacaoAlcalis,
                                                          testeAberturaValvulasSegurancaUmAno:
                                                              FFAppState()
                                                                  .userControleTUBCALD
                                                                  .testeAberturaValvulasSegurancaUmAno,
                                                          barreiraSIS: FFAppState()
                                                              .userControleTUBCALD
                                                              .barreiraSIS,
                                                          comSGC: FFAppState()
                                                              .userControleTUBCALD
                                                              .comSGC,
                                                          operacaoComAguaTratada:
                                                              FFAppState()
                                                                  .userControleTUBCALD
                                                                  .operacaoComAguaTratada,
                                                          vaporizacaoFluidoTermico:
                                                              FFAppState()
                                                                  .userControleTUBCALD
                                                                  .vaporizacaoFluidoTermico,
                                                          ampliacaoProgramaPLH:
                                                              FFAppState()
                                                                  .userControleTUBCALD
                                                                  .ampliacaoProgramaPLH,
                                                          codigo: _model
                                                              .tubCaldeirasAceitos
                                                              .first
                                                              .codigo,
                                                          servicoProprioInspecaoEquipamentoSPIE:
                                                              '',
                                                          inpecaoPeriodica: _model
                                                              .retornoPeriodicidadeTUBCALDS
                                                              ?.periodica,
                                                          equipamento: FFAppState()
                                                              .equipamentoAplicabilidade,
                                                          tipoEquipamento:
                                                              FFAppState()
                                                                  .tipoEquipAplicabilidade,
                                                          descricaoEquipamento:
                                                              FFAppState()
                                                                  .descriccaoEquipAplicabilidade,
                                                          tagEquipamento:
                                                              FFAppState()
                                                                  .tagEquipAplicabilidade,
                                                          serieEquipamento:
                                                              FFAppState()
                                                                  .serieEquipAplicabilidade,
                                                          dataCadEquipamento:
                                                              FFAppState()
                                                                  .dataCadEquipAplicabilidade
                                                                  ?.toString(),
                                                          createdTime:
                                                              getCurrentTimestamp,
                                                          avaliador:
                                                              currentUserDisplayName,
                                                          contrato: FFAppState()
                                                              .contrato,
                                                          inspecaoExterna:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeTUBCALDS
                                                                ?.periodica,
                                                            '0',
                                                          ),
                                                        ));

                                                    await FFAppState()
                                                        .createAplicabilidadeTUBCALDS!
                                                        .update(
                                                            createEquipamentosRecordData(
                                                          codigo: _model
                                                              .tubCaldeirasAceitos
                                                              .first
                                                              .codigo,
                                                          interna: '0',
                                                          externa:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeTUBCALDS
                                                                ?.externa,
                                                            '0',
                                                          ),
                                                        ));
                                                    setState(() {
                                                      FFAppState()
                                                              .aplicabilidadeCreating =
                                                          false;
                                                      FFAppState()
                                                              .createAplicabilidadeTUBCALDS =
                                                          null;
                                                    });
                                                    setState(() {
                                                      FFAppState()
                                                              .userControleTUBCALD =
                                                          TubCaldNrStruct();
                                                    });

                                                    context.goNamed(
                                                        'Equipamentos');

                                                    setState(() {});
                                                  },
                                            text: 'Salvar',
                                            options: FFButtonOptions(
                                              height: 40.0,
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      24.0, 0.0, 24.0, 0.0),
                                              iconPadding: EdgeInsetsDirectional
                                                  .fromSTEB(0.0, 0.0, 0.0, 0.0),
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .primary,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .titleSmall
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color: Colors.white,
                                                        letterSpacing: 0.0,
                                                      ),
                                              elevation: 3.0,
                                              borderSide: BorderSide(
                                                color: Colors.transparent,
                                                width: 1.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                        ].divide(SizedBox(width: 50.0)),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      if (FFAppState().createAplicabilidadeCALDEIRAS != null)
                        Column(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 12.0, 16.0, 12.0),
                              child: Container(
                                decoration: BoxDecoration(
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryBackground,
                                  borderRadius: BorderRadius.circular(20.0),
                                ),
                                child: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      20.0, 20.0, 20.0, 20.0),
                                  child: Column(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 10.0, 0.0, 0.0),
                                        child: Text(
                                          'CALDEIRAS',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .primary,
                                                fontSize: 18.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 30.0, 0.0, 20.0),
                                        child: Column(
                                          mainAxisSize: MainAxisSize.max,
                                          children: [
                                            Row(
                                              mainAxisSize: MainAxisSize.min,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    'Equipamento',
                                                    textAlign: TextAlign.end,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                ),
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    FFAppState()
                                                        .equipamentoAplicabilidade,
                                                    textAlign: TextAlign.start,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                                ),
                                              ].divide(SizedBox(width: 20.0)),
                                            ),
                                            Row(
                                              mainAxisSize: MainAxisSize.min,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    'Tipo de equipamento',
                                                    textAlign: TextAlign.end,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                ),
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    FFAppState()
                                                        .tipoEquipAplicabilidade,
                                                    textAlign: TextAlign.start,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                                ),
                                              ].divide(SizedBox(width: 20.0)),
                                            ),
                                          ].divide(SizedBox(height: 10.0)),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 0.0, 0.0, 25.0),
                                        child: Container(
                                          decoration: BoxDecoration(
                                            color: FlutterFlowTheme.of(context)
                                                .secondaryBackground,
                                          ),
                                        ),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Volume menor que 100 litros?',
                                            style: FlutterFlowTheme.of(context)
                                                .bodyMedium
                                                .override(
                                                  fontFamily: 'Inter',
                                                  fontSize: 16.0,
                                                  letterSpacing: 0.0,
                                                  fontWeight: FontWeight.w600,
                                                ),
                                          ),
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0.0, 0.0, 0.0, 25.0),
                                            child: FlutterFlowDropDown<String>(
                                              controller: _model
                                                      .statusDropDownCALDVolumeValueController ??=
                                                  FormFieldController<String>(
                                                _model.statusDropDownCALDVolumeValue ??=
                                                    FFAppState()
                                                        .userControleCALDEIRAS
                                                        .volumeMenorCemLitros,
                                              ),
                                              options:
                                                  List<String>.from(['1', '0']),
                                              optionLabels: ['Sim', 'Não'],
                                              onChanged: (val) async {
                                                setState(() => _model
                                                        .statusDropDownCALDVolumeValue =
                                                    val);
                                                setState(() {
                                                  _model
                                                      .statusDropDownCALDSpieValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDAlcalisValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDTesteSegurancaValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDBarreiraSisValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDSgcCombustaoValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDAguaTratadaValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCALDFluidoTermicoValueController
                                                      ?.reset();
                                                });
                                                setState(() {
                                                  FFAppState()
                                                      .updateUserControleCALDEIRASStruct(
                                                    (e) => e
                                                      ..volumeMenorCemLitros =
                                                          _model
                                                              .statusDropDownCALDVolumeValue
                                                      ..pressaoMaiorZeroMeiaUm =
                                                          null
                                                      ..pressaoMaiorIgualDzNoveNove =
                                                          null
                                                      ..sPIEServicoProprioInspecaoEquipamento =
                                                          null
                                                      ..paraRecuperacaoAlcalis =
                                                          null
                                                      ..testeAberturaValvulasSeguurancaUmAno =
                                                          null
                                                      ..barreiraSISSistemaInstrumentadoSeguranca =
                                                          null
                                                      ..sGCSistemaGerenciamentoCombustao =
                                                          null
                                                      ..operacaoComAguaTratada =
                                                          null
                                                      ..vaporizacaoFluidoTermico =
                                                          null,
                                                  );
                                                });
                                                _model.retornoAceitosCaldeiraVolum =
                                                    await actions
                                                        .atualizaAceitosCALDEIRAS();
                                                setState(() {
                                                  _model.caldeirasAceitos = _model
                                                      .retornoAceitosCaldeiraVolum!
                                                      .toList()
                                                      .cast<
                                                          CaldeirasNrStruct>();
                                                });
                                                _model.keysToUpdateCaldeirasVolum =
                                                    await actions
                                                        .keysToUpdateCALDEIRAS(
                                                  _model
                                                      .retornoAceitosCaldeiraVolum
                                                      ?.toList(),
                                                );
                                                _model.addCaldVolum =
                                                    await actions
                                                        .addNACALDEIRAS(
                                                  _model
                                                      .keysToUpdateCaldeirasVolum
                                                      ?.toList(),
                                                );
                                                setState(() {
                                                  FFAppState()
                                                          .userControleCALDEIRAS =
                                                      _model.addCaldVolum!;
                                                });
                                                setState(() {
                                                  FFAppState()
                                                      .updateUserControleCALDEIRASStruct(
                                                    (e) => e
                                                      ..volumeMenorCemLitros =
                                                          _model
                                                              .statusDropDownCALDVolumeValue,
                                                  );
                                                });

                                                setState(() {});
                                              },
                                              width: MediaQuery.sizeOf(context)
                                                      .width *
                                                  1.0,
                                              height: 50.0,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                      ),
                                              hintText: 'Selecione',
                                              icon: Icon(
                                                Icons
                                                    .keyboard_arrow_down_rounded,
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryText,
                                                size: 24.0,
                                              ),
                                              fillColor:
                                                  FlutterFlowTheme.of(context)
                                                      .secondaryBackground,
                                              elevation: 2.0,
                                              borderColor:
                                                  FlutterFlowTheme.of(context)
                                                      .alternate,
                                              borderWidth: 2.0,
                                              borderRadius: 8.0,
                                              margin: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      16.0, 4.0, 16.0, 4.0),
                                              hidesUnderline: true,
                                              isOverButton: true,
                                              isSearchable: false,
                                              isMultiSelect: false,
                                            ),
                                          ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Column(
                                            mainAxisSize: MainAxisSize.max,
                                            crossAxisAlignment:
                                                CrossAxisAlignment.stretch,
                                            children: [
                                              if ((FFAppState()
                                                          .userControleCALDEIRAS
                                                          .pressaoMaiorZeroMeiaUm !=
                                                      '3') &&
                                                  (_model.statusDropDownCALDVolumeValue ==
                                                      '0'))
                                                Text(
                                                  'Pressão:',
                                                  style: FlutterFlowTheme.of(
                                                          context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                                ),
                                              Container(
                                                width: 0.0,
                                                decoration: BoxDecoration(),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.min,
                                                  children: [
                                                    if ((FFAppState()
                                                                .userControleCALDEIRAS
                                                                .pressaoMaiorZeroMeiaUm !=
                                                            '3') &&
                                                        (_model.statusDropDownCALDVolumeValue ==
                                                            '0'))
                                                      Flexible(
                                                        child: Padding(
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      20.0,
                                                                      0.0),
                                                          child: Container(
                                                            width: 250.0,
                                                            child:
                                                                TextFormField(
                                                              controller: _model
                                                                  .pressaoInputCaldeirasTextController,
                                                              focusNode: _model
                                                                  .pressaoInputCaldeirasFocusNode,
                                                              onFieldSubmitted:
                                                                  (_) async {
                                                                setState(() {
                                                                  _model.radioButtonPressaoCaldsValueController
                                                                          ?.value =
                                                                      'kgf/cm²';
                                                                });
                                                                setState(() {
                                                                  _model.pressaoKGF =
                                                                      () {
                                                                    if (_model
                                                                            .radioButtonPressaoCaldsValue ==
                                                                        'MPa') {
                                                                      return (double.parse(_model
                                                                              .pressaoInputCaldeirasTextController
                                                                              .text) *
                                                                          10.197);
                                                                    } else if (_model
                                                                            .radioButtonPressaoCaldsValue ==
                                                                        'Psi') {
                                                                      return (double.parse(_model
                                                                              .pressaoInputCaldeirasTextController
                                                                              .text) *
                                                                          0.070307);
                                                                    } else if (_model
                                                                            .radioButtonPressaoCaldsValue ==
                                                                        'bar') {
                                                                      return (double.parse(_model
                                                                              .pressaoInputCaldeirasTextController
                                                                              .text) *
                                                                          1.01972);
                                                                    } else {
                                                                      return double.parse(_model
                                                                          .pressaoInputCaldeirasTextController
                                                                          .text);
                                                                    }
                                                                  }();
                                                                });
                                                              },
                                                              autofocus: false,
                                                              obscureText:
                                                                  false,
                                                              decoration:
                                                                  InputDecoration(
                                                                isDense: true,
                                                                labelStyle: FlutterFlowTheme.of(
                                                                        context)
                                                                    .bodyMedium
                                                                    .override(
                                                                      fontFamily:
                                                                          'Inter',
                                                                      color: FlutterFlowTheme.of(
                                                                              context)
                                                                          .primary,
                                                                      fontSize:
                                                                          18.0,
                                                                      letterSpacing:
                                                                          0.0,
                                                                    ),
                                                                hintStyle: FlutterFlowTheme.of(
                                                                        context)
                                                                    .bodyMedium
                                                                    .override(
                                                                      fontFamily:
                                                                          'Inter',
                                                                      letterSpacing:
                                                                          0.0,
                                                                    ),
                                                                enabledBorder:
                                                                    UnderlineInputBorder(
                                                                  borderSide:
                                                                      BorderSide(
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .primaryText,
                                                                    width: 2.0,
                                                                  ),
                                                                  borderRadius:
                                                                      const BorderRadius
                                                                          .only(
                                                                    topLeft: Radius
                                                                        .circular(
                                                                            4.0),
                                                                    topRight: Radius
                                                                        .circular(
                                                                            4.0),
                                                                  ),
                                                                ),
                                                                focusedBorder:
                                                                    UnderlineInputBorder(
                                                                  borderSide:
                                                                      BorderSide(
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .primary,
                                                                    width: 2.0,
                                                                  ),
                                                                  borderRadius:
                                                                      const BorderRadius
                                                                          .only(
                                                                    topLeft: Radius
                                                                        .circular(
                                                                            4.0),
                                                                    topRight: Radius
                                                                        .circular(
                                                                            4.0),
                                                                  ),
                                                                ),
                                                                errorBorder:
                                                                    UnderlineInputBorder(
                                                                  borderSide:
                                                                      BorderSide(
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .error,
                                                                    width: 2.0,
                                                                  ),
                                                                  borderRadius:
                                                                      const BorderRadius
                                                                          .only(
                                                                    topLeft: Radius
                                                                        .circular(
                                                                            4.0),
                                                                    topRight: Radius
                                                                        .circular(
                                                                            4.0),
                                                                  ),
                                                                ),
                                                                focusedErrorBorder:
                                                                    UnderlineInputBorder(
                                                                  borderSide:
                                                                      BorderSide(
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .error,
                                                                    width: 2.0,
                                                                  ),
                                                                  borderRadius:
                                                                      const BorderRadius
                                                                          .only(
                                                                    topLeft: Radius
                                                                        .circular(
                                                                            4.0),
                                                                    topRight: Radius
                                                                        .circular(
                                                                            4.0),
                                                                  ),
                                                                ),
                                                              ),
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .primary,
                                                                    fontSize:
                                                                        18.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                              keyboardType:
                                                                  TextInputType
                                                                      .number,
                                                              validator: _model
                                                                  .pressaoInputCaldeirasTextControllerValidator
                                                                  .asValidator(
                                                                      context),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    if ((FFAppState()
                                                                .userControleCALDEIRAS
                                                                .pressaoMaiorZeroMeiaUm !=
                                                            '3') &&
                                                        (_model.statusDropDownCALDVolumeValue ==
                                                            '0'))
                                                      FFButtonWidget(
                                                        onPressed: () async {
                                                          setState(() {
                                                            _model
                                                                .statusDropDownCALDSpieValueController
                                                                ?.reset();
                                                            _model
                                                                .statusDropDownCALDAlcalisValueController
                                                                ?.reset();
                                                            _model
                                                                .statusDropDownCALDTesteSegurancaValueController
                                                                ?.reset();
                                                            _model
                                                                .statusDropDownCALDBarreiraSisValueController
                                                                ?.reset();
                                                            _model
                                                                .statusDropDownCALDSgcCombustaoValueController
                                                                ?.reset();
                                                            _model
                                                                .statusDropDownCALDAguaTratadaValueController
                                                                ?.reset();
                                                            _model
                                                                .statusDropDownCALDFluidoTermicoValueController
                                                                ?.reset();
                                                          });
                                                          setState(() {
                                                            _model.pressaoKGF =
                                                                () {
                                                              if (_model
                                                                      .radioButtonPressaoCaldsValue ==
                                                                  'MPa') {
                                                                return (double.parse(_model
                                                                        .pressaoInputCaldeirasTextController
                                                                        .text) *
                                                                    10.197);
                                                              } else if (_model
                                                                      .radioButtonPressaoCaldsValue ==
                                                                  'Psi') {
                                                                return (double.parse(_model
                                                                        .pressaoInputCaldeirasTextController
                                                                        .text) *
                                                                    0.070307);
                                                              } else if (_model
                                                                      .radioButtonPressaoCaldsValue ==
                                                                  'bar') {
                                                                return (double.parse(_model
                                                                        .pressaoInputCaldeirasTextController
                                                                        .text) *
                                                                    1.01972);
                                                              } else {
                                                                return double
                                                                    .parse(_model
                                                                        .pressaoInputCaldeirasTextController
                                                                        .text);
                                                              }
                                                            }();
                                                          });
                                                          setState(() {
                                                            FFAppState()
                                                                .updateUserControleCALDEIRASStruct(
                                                              (e) => e
                                                                ..pressaoMaiorZeroMeiaUm =
                                                                    _model.pressaoKGF >
                                                                            0.61
                                                                        ? '1'
                                                                        : '0'
                                                                ..pressaoMaiorIgualDzNoveNove =
                                                                    _model.pressaoKGF >
                                                                            19.981
                                                                        ? '1'
                                                                        : '0'
                                                                ..sPIEServicoProprioInspecaoEquipamento =
                                                                    null
                                                                ..paraRecuperacaoAlcalis =
                                                                    null
                                                                ..testeAberturaValvulasSeguurancaUmAno =
                                                                    null
                                                                ..barreiraSISSistemaInstrumentadoSeguranca =
                                                                    null
                                                                ..sGCSistemaGerenciamentoCombustao =
                                                                    null
                                                                ..operacaoComAguaTratada =
                                                                    null
                                                                ..vaporizacaoFluidoTermico =
                                                                    null,
                                                            );
                                                          });
                                                          _model.retornoAceitosCaldeiraPRESSAO =
                                                              await actions
                                                                  .atualizaAceitosCALDEIRAS();
                                                          setState(() {
                                                            _model.caldeirasAceitos = _model
                                                                .retornoAceitosCaldeiraPRESSAO!
                                                                .toList()
                                                                .cast<
                                                                    CaldeirasNrStruct>();
                                                          });
                                                          _model.keysToUpdateCaldeiraPRESSAO =
                                                              await actions
                                                                  .keysToUpdateCALDEIRAS(
                                                            _model
                                                                .retornoAceitosCaldeiraPRESSAO
                                                                ?.toList(),
                                                          );
                                                          _model.addNaCaldeiraPRESSAO =
                                                              await actions
                                                                  .addNACALDEIRAS(
                                                            _model
                                                                .keysToUpdateCaldeiraPRESSAO
                                                                ?.toList(),
                                                          );
                                                          setState(() {
                                                            FFAppState()
                                                                    .userControleCALDEIRAS =
                                                                _model
                                                                    .addNaCaldeiraPRESSAO!;
                                                          });
                                                          setState(() {
                                                            FFAppState()
                                                                .updateUserControleCALDEIRASStruct(
                                                              (e) => e
                                                                ..volumeMenorCemLitros =
                                                                    valueOrDefault<
                                                                        String>(
                                                                  _model
                                                                      .statusDropDownCALDVolumeValue,
                                                                  '3',
                                                                )
                                                                ..pressaoMaiorZeroMeiaUm =
                                                                    _model.pressaoKGF >
                                                                            0.61
                                                                        ? '1'
                                                                        : '0'
                                                                ..pressaoMaiorIgualDzNoveNove =
                                                                    _model.pressaoKGF >
                                                                            19.981
                                                                        ? '1'
                                                                        : '0',
                                                            );
                                                          });

                                                          setState(() {});
                                                        },
                                                        text: 'Aplicar',
                                                        options:
                                                            FFButtonOptions(
                                                          height: 40.0,
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      24.0,
                                                                      0.0,
                                                                      24.0,
                                                                      0.0),
                                                          iconPadding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      0.0,
                                                                      0.0),
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primary,
                                                          textStyle:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .titleSmall
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                          elevation: 3.0,
                                                          borderSide:
                                                              BorderSide(
                                                            color: Colors
                                                                .transparent,
                                                            width: 1.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      8.0),
                                                        ),
                                                      ),
                                                  ],
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 0.0, 0.0, 25.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  children: [
                                                    if ((FFAppState()
                                                                .userControleCALDEIRAS
                                                                .pressaoMaiorZeroMeiaUm !=
                                                            '3') &&
                                                        (_model.statusDropDownCALDVolumeValue ==
                                                            '0'))
                                                      FlutterFlowRadioButton(
                                                        options: [
                                                          'MPa',
                                                          'Psi',
                                                          'bar',
                                                          'kgf/cm²'
                                                        ].toList(),
                                                        onChanged: (val) async {
                                                          setState(() {});
                                                          setState(() {
                                                            _model.pressaoKGF =
                                                                () {
                                                              if (_model
                                                                      .radioButtonPressaoCaldsValue ==
                                                                  'MPa') {
                                                                return (double.parse(_model
                                                                        .pressaoInputCaldeirasTextController
                                                                        .text) *
                                                                    10.197);
                                                              } else if (_model
                                                                      .radioButtonPressaoCaldsValue ==
                                                                  'Psi') {
                                                                return (double.parse(_model
                                                                        .pressaoInputCaldeirasTextController
                                                                        .text) *
                                                                    0.070307);
                                                              } else if (_model
                                                                      .radioButtonPressaoCaldsValue ==
                                                                  'bar') {
                                                                return (double.parse(_model
                                                                        .pressaoInputCaldeirasTextController
                                                                        .text) *
                                                                    1.01972);
                                                              } else {
                                                                return double
                                                                    .parse(_model
                                                                        .pressaoInputCaldeirasTextController
                                                                        .text);
                                                              }
                                                            }();
                                                          });
                                                        },
                                                        controller: _model
                                                                .radioButtonPressaoCaldsValueController ??=
                                                            FormFieldController<
                                                                String>(null),
                                                        optionHeight: 30.0,
                                                        textStyle:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  letterSpacing:
                                                                      0.0,
                                                                ),
                                                        selectedTextStyle:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                        textPadding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(
                                                                    0.0,
                                                                    0.0,
                                                                    10.0,
                                                                    0.0),
                                                        buttonPosition:
                                                            RadioButtonPosition
                                                                .left,
                                                        direction:
                                                            Axis.horizontal,
                                                        radioButtonColor:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .primary,
                                                        inactiveRadioButtonColor:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .secondaryText,
                                                        toggleable: true,
                                                        horizontalAlignment:
                                                            WrapAlignment.start,
                                                        verticalAlignment:
                                                            WrapCrossAlignment
                                                                .start,
                                                      ),
                                                  ].divide(
                                                      SizedBox(width: 15.0)),
                                                ),
                                              ),
                                            ],
                                          ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .sPIEServicoProprioInspecaoEquipamento !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove())
                                            Text(
                                              'SPIE - Serviço Próprio de Inspeção de Equipamento?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .sPIEServicoProprioInspecaoEquipamento !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDSpieValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDSpieValue ??=
                                                      FFAppState()
                                                          .userControleCALDEIRAS
                                                          .sPIEServicoProprioInspecaoEquipamento,
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDSpieValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDAlcalisValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDTesteSegurancaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDBarreiraSisValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDSgcCombustaoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDAguaTratadaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..sPIEServicoProprioInspecaoEquipamento =
                                                            _model
                                                                .statusDropDownCALDSpieValue
                                                        ..paraRecuperacaoAlcalis =
                                                            null
                                                        ..testeAberturaValvulasSeguurancaUmAno =
                                                            null
                                                        ..barreiraSISSistemaInstrumentadoSeguranca =
                                                            null
                                                        ..sGCSistemaGerenciamentoCombustao =
                                                            null
                                                        ..operacaoComAguaTratada =
                                                            null
                                                        ..vaporizacaoFluidoTermico =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraSpie =
                                                      await actions
                                                          .atualizaAceitosCALDEIRAS();
                                                  setState(() {
                                                    _model.caldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraSpie!
                                                        .toList()
                                                        .cast<
                                                            CaldeirasNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraSpies =
                                                      await actions
                                                          .keysToUpdateCALDEIRAS(
                                                    _model
                                                        .retornoAceitosCaldeiraSpie
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraSpie =
                                                      await actions
                                                          .addNACALDEIRAS(
                                                    _model
                                                        .keysToUpdateCaldeiraSpies
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleCALDEIRAS =
                                                        _model.addCaldeiraSpie!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pressaoKGF >
                                                                  0.61
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pressaoKGF >
                                                                  19.981
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..sPIEServicoProprioInspecaoEquipamento =
                                                            _model
                                                                .statusDropDownCALDSpieValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .paraRecuperacaoAlcalis !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSPIEServicoProprioInspecaoEquipamento())
                                            Text(
                                              'Para Recuperação de Álcalis?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .paraRecuperacaoAlcalis !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSPIEServicoProprioInspecaoEquipamento())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDAlcalisValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDAlcalisValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDAlcalisValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDTesteSegurancaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDBarreiraSisValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDSgcCombustaoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDAguaTratadaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..paraRecuperacaoAlcalis =
                                                            _model
                                                                .statusDropDownCALDAlcalisValue
                                                        ..testeAberturaValvulasSeguurancaUmAno =
                                                            null
                                                        ..barreiraSISSistemaInstrumentadoSeguranca =
                                                            null
                                                        ..sGCSistemaGerenciamentoCombustao =
                                                            null
                                                        ..operacaoComAguaTratada =
                                                            null
                                                        ..vaporizacaoFluidoTermico =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraAlcalis =
                                                      await actions
                                                          .atualizaAceitosCALDEIRAS();
                                                  setState(() {
                                                    _model.caldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraAlcalis!
                                                        .toList()
                                                        .cast<
                                                            CaldeirasNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraAlcalis =
                                                      await actions
                                                          .keysToUpdateCALDEIRAS(
                                                    _model
                                                        .retornoAceitosCaldeiraAlcalis
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraAlcalis =
                                                      await actions
                                                          .addNACALDEIRAS(
                                                    _model
                                                        .keysToUpdateCaldeiraAlcalis
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleCALDEIRAS =
                                                        _model
                                                            .addCaldeiraAlcalis!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            _model.pressaoKGF >
                                                                    19.981
                                                                ? '1'
                                                                : '0'
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            _model.pressaoKGF >
                                                                    19.981
                                                                ? '1'
                                                                : '0'
                                                        ..sPIEServicoProprioInspecaoEquipamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieValue,
                                                          '3',
                                                        )
                                                        ..paraRecuperacaoAlcalis =
                                                            _model
                                                                .statusDropDownCALDAlcalisValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .testeAberturaValvulasSeguurancaUmAno !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSPIEServicoProprioInspecaoEquipamento() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasParaRecuperacaoAlcalis())
                                            Text(
                                              'Teste de Abertura de Válvulas de Segurança a cada período de, no máximo, de 12 meses?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .testeAberturaValvulasSeguurancaUmAno !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSPIEServicoProprioInspecaoEquipamento() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasParaRecuperacaoAlcalis())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDTesteSegurancaValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDTesteSegurancaValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDTesteSegurancaValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDBarreiraSisValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDSgcCombustaoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDAguaTratadaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..testeAberturaValvulasSeguurancaUmAno =
                                                            _model
                                                                .statusDropDownCALDTesteSegurancaValue
                                                        ..barreiraSISSistemaInstrumentadoSeguranca =
                                                            null
                                                        ..sGCSistemaGerenciamentoCombustao =
                                                            null
                                                        ..operacaoComAguaTratada =
                                                            null
                                                        ..vaporizacaoFluidoTermico =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraTesteSeguranca =
                                                      await actions
                                                          .atualizaAceitosCALDEIRAS();
                                                  setState(() {
                                                    _model.caldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraTesteSeguranca!
                                                        .toList()
                                                        .cast<
                                                            CaldeirasNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraTesteSeguranca =
                                                      await actions
                                                          .keysToUpdateCALDEIRAS(
                                                    _model
                                                        .retornoAceitosCaldeiraTesteSeguranca
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraTesteSeguranca =
                                                      await actions
                                                          .addNACALDEIRAS(
                                                    _model
                                                        .keysToUpdateCaldeiraTesteSeguranca
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleCALDEIRAS =
                                                        _model
                                                            .addCaldeiraTesteSeguranca!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            _model.pressaoKGF >
                                                                    0.61
                                                                ? '1'
                                                                : '0'
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            _model.pressaoKGF >
                                                                    19.981
                                                                ? '1'
                                                                : '0'
                                                        ..sPIEServicoProprioInspecaoEquipamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieValue,
                                                          '3',
                                                        )
                                                        ..paraRecuperacaoAlcalis =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAlcalisValue,
                                                          '3',
                                                        )
                                                        ..testeAberturaValvulasSeguurancaUmAno =
                                                            _model
                                                                .statusDropDownCALDTesteSegurancaValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .barreiraSISSistemaInstrumentadoSeguranca !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSPIEServicoProprioInspecaoEquipamento() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasParaRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasTesteAberturaValvulasSeguurancaUmAno())
                                            Text(
                                              'Barreira Por SIS - Sistema Instrumentado de Segurança?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .barreiraSISSistemaInstrumentadoSeguranca !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSPIEServicoProprioInspecaoEquipamento() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasParaRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasTesteAberturaValvulasSeguurancaUmAno())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDBarreiraSisValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDBarreiraSisValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDBarreiraSisValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDSgcCombustaoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDAguaTratadaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..barreiraSISSistemaInstrumentadoSeguranca =
                                                            _model
                                                                .statusDropDownCALDBarreiraSisValue
                                                        ..sGCSistemaGerenciamentoCombustao =
                                                            null
                                                        ..operacaoComAguaTratada =
                                                            null
                                                        ..vaporizacaoFluidoTermico =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraBarreisaSis =
                                                      await actions
                                                          .atualizaAceitosCALDEIRAS();
                                                  setState(() {
                                                    _model.caldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraBarreisaSis!
                                                        .toList()
                                                        .cast<
                                                            CaldeirasNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraBarreisaSis =
                                                      await actions
                                                          .keysToUpdateCALDEIRAS(
                                                    _model
                                                        .retornoAceitosCaldeiraBarreisaSis
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraBarreisaSis =
                                                      await actions
                                                          .addNACALDEIRAS(
                                                    _model
                                                        .keysToUpdateCaldeiraBarreisaSis
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleCALDEIRAS =
                                                        _model
                                                            .addCaldeiraBarreisaSis!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            _model.pressaoKGF >
                                                                    0.61
                                                                ? '1'
                                                                : '0'
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            _model.pressaoKGF >
                                                                    19.981
                                                                ? '1'
                                                                : '0'
                                                        ..sPIEServicoProprioInspecaoEquipamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieValue,
                                                          '3',
                                                        )
                                                        ..paraRecuperacaoAlcalis =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAlcalisValue,
                                                          '3',
                                                        )
                                                        ..testeAberturaValvulasSeguurancaUmAno =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDTesteSegurancaValue,
                                                          '3',
                                                        )
                                                        ..barreiraSISSistemaInstrumentadoSeguranca =
                                                            _model
                                                                .statusDropDownCALDBarreiraSisValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .sGCSistemaGerenciamentoCombustao !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSPIEServicoProprioInspecaoEquipamento() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasParaRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasTesteAberturaValvulasSeguurancaUmAno() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasBarreiraSISSistemaInstrumentadoSeguranca())
                                            Text(
                                              'Com SGC- Sistema de Gerenciamento de Combustão?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .sGCSistemaGerenciamentoCombustao !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSPIEServicoProprioInspecaoEquipamento() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasParaRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasTesteAberturaValvulasSeguurancaUmAno() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasBarreiraSISSistemaInstrumentadoSeguranca())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDSgcCombustaoValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDSgcCombustaoValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDSgcCombustaoValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDAguaTratadaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..sGCSistemaGerenciamentoCombustao =
                                                            _model
                                                                .statusDropDownCALDSgcCombustaoValue
                                                        ..operacaoComAguaTratada =
                                                            null
                                                        ..vaporizacaoFluidoTermico =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraSgc =
                                                      await actions
                                                          .atualizaAceitosCALDEIRAS();
                                                  setState(() {
                                                    _model.caldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraSgc!
                                                        .toList()
                                                        .cast<
                                                            CaldeirasNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraSgc =
                                                      await actions
                                                          .keysToUpdateCALDEIRAS(
                                                    _model
                                                        .retornoAceitosCaldeiraSgc
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraSgc =
                                                      await actions
                                                          .addNACALDEIRAS(
                                                    _model
                                                        .keysToUpdateCaldeiraSgc
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleCALDEIRAS =
                                                        _model.addCaldeiraSgc!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            _model.pressaoKGF >
                                                                    0.61
                                                                ? '1'
                                                                : '0'
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            _model.pressaoKGF >
                                                                    19.981
                                                                ? '1'
                                                                : '0'
                                                        ..sPIEServicoProprioInspecaoEquipamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieValue,
                                                          '3',
                                                        )
                                                        ..paraRecuperacaoAlcalis =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAlcalisValue,
                                                          '3',
                                                        )
                                                        ..testeAberturaValvulasSeguurancaUmAno =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDTesteSegurancaValue,
                                                          '3',
                                                        )
                                                        ..barreiraSISSistemaInstrumentadoSeguranca =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDBarreiraSisValue,
                                                          '3',
                                                        )
                                                        ..sGCSistemaGerenciamentoCombustao =
                                                            _model
                                                                .statusDropDownCALDSgcCombustaoValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .operacaoComAguaTratada !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSPIEServicoProprioInspecaoEquipamento() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasParaRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasTesteAberturaValvulasSeguurancaUmAno() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasBarreiraSISSistemaInstrumentadoSeguranca() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSGCSistemaGerenciamentoCombustao())
                                            Text(
                                              'Operação Com Água Tratada?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .operacaoComAguaTratada !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSPIEServicoProprioInspecaoEquipamento() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasParaRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasTesteAberturaValvulasSeguurancaUmAno() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasBarreiraSISSistemaInstrumentadoSeguranca() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSGCSistemaGerenciamentoCombustao())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDAguaTratadaValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDAguaTratadaValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDAguaTratadaValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCALDFluidoTermicoValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..operacaoComAguaTratada =
                                                            _model
                                                                .statusDropDownCALDAguaTratadaValue
                                                        ..vaporizacaoFluidoTermico =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraAguaTratada =
                                                      await actions
                                                          .atualizaAceitosCALDEIRAS();
                                                  setState(() {
                                                    _model.caldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraAguaTratada!
                                                        .toList()
                                                        .cast<
                                                            CaldeirasNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraAguaTratada =
                                                      await actions
                                                          .keysToUpdateCALDEIRAS(
                                                    _model
                                                        .retornoAceitosCaldeiraAguaTratada
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraAguaTratada =
                                                      await actions
                                                          .addNACALDEIRAS(
                                                    _model
                                                        .keysToUpdateCaldeiraAguaTratada
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleCALDEIRAS =
                                                        _model
                                                            .addCaldeiraAguaTratada!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            _model.pressaoKGF >
                                                                    0.61
                                                                ? '1'
                                                                : '0'
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            _model.pressaoKGF >
                                                                    19.981
                                                                ? '1'
                                                                : '0'
                                                        ..sPIEServicoProprioInspecaoEquipamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieValue,
                                                          '3',
                                                        )
                                                        ..paraRecuperacaoAlcalis =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAlcalisValue,
                                                          '3',
                                                        )
                                                        ..testeAberturaValvulasSeguurancaUmAno =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDTesteSegurancaValue,
                                                          '3',
                                                        )
                                                        ..barreiraSISSistemaInstrumentadoSeguranca =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDBarreiraSisValue,
                                                          '3',
                                                        )
                                                        ..sGCSistemaGerenciamentoCombustao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSgcCombustaoValue,
                                                          '3',
                                                        )
                                                        ..operacaoComAguaTratada =
                                                            _model
                                                                .statusDropDownCALDAguaTratadaValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .vaporizacaoFluidoTermico !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSPIEServicoProprioInspecaoEquipamento() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasParaRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasTesteAberturaValvulasSeguurancaUmAno() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasBarreiraSISSistemaInstrumentadoSeguranca() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSGCSistemaGerenciamentoCombustao() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasOperacaoComAguaTratada())
                                            Text(
                                              'Vaporização de Fluido Térmico?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleCALDEIRAS
                                                      .vaporizacaoFluidoTermico !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasVolumeMenorCemLitros() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorZeroMeiaUm() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasPressaoMaiorIgualDzNoveNove() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSPIEServicoProprioInspecaoEquipamento() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasParaRecuperacaoAlcalis() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasTesteAberturaValvulasSeguurancaUmAno() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasBarreiraSISSistemaInstrumentadoSeguranca() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasSGCSistemaGerenciamentoCombustao() &&
                                              FFAppState()
                                                  .userControleCALDEIRAS
                                                  .hasOperacaoComAguaTratada())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCALDFluidoTermicoValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCALDFluidoTermicoValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCALDFluidoTermicoValue =
                                                      val);
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..vaporizacaoFluidoTermico =
                                                            _model
                                                                .statusDropDownCALDFluidoTermicoValue,
                                                    );
                                                  });
                                                  _model.retornoAceitosCaldeiraVapoTermico =
                                                      await actions
                                                          .atualizaAceitosCALDEIRAS();
                                                  setState(() {
                                                    _model.caldeirasAceitos = _model
                                                        .retornoAceitosCaldeiraVapoTermico!
                                                        .toList()
                                                        .cast<
                                                            CaldeirasNrStruct>();
                                                  });
                                                  _model.keysToUpdateCaldeiraVapoTermico =
                                                      await actions
                                                          .keysToUpdateCALDEIRAS(
                                                    _model
                                                        .retornoAceitosCaldeiraVapoTermico
                                                        ?.toList(),
                                                  );
                                                  _model.addCaldeiraVapoTermico =
                                                      await actions
                                                          .addNACALDEIRAS(
                                                    _model
                                                        .keysToUpdateCaldeiraVapoTermico
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleCALDEIRAS =
                                                        _model
                                                            .addCaldeiraVapoTermico!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleCALDEIRASStruct(
                                                      (e) => e
                                                        ..volumeMenorCemLitros =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDVolumeValue,
                                                          '3',
                                                        )
                                                        ..pressaoMaiorZeroMeiaUm =
                                                            _model.pressaoKGF >
                                                                    0.61
                                                                ? '1'
                                                                : '0'
                                                        ..pressaoMaiorIgualDzNoveNove =
                                                            _model.pressaoKGF >
                                                                    19.981
                                                                ? '1'
                                                                : '0'
                                                        ..sPIEServicoProprioInspecaoEquipamento =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSpieValue,
                                                          '3',
                                                        )
                                                        ..paraRecuperacaoAlcalis =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAlcalisValue,
                                                          '3',
                                                        )
                                                        ..testeAberturaValvulasSeguurancaUmAno =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDTesteSegurancaValue,
                                                          '3',
                                                        )
                                                        ..barreiraSISSistemaInstrumentadoSeguranca =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDBarreiraSisValue,
                                                          '3',
                                                        )
                                                        ..sGCSistemaGerenciamentoCombustao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDSgcCombustaoValue,
                                                          '3',
                                                        )
                                                        ..operacaoComAguaTratada =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCALDAguaTratadaValue,
                                                          '3',
                                                        )
                                                        ..vaporizacaoFluidoTermico =
                                                            _model
                                                                .statusDropDownCALDFluidoTermicoValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      if (_model.caldeirasAceitos.length == 1)
                                        Text(
                                          _model.caldeirasAceitos.first.codigo,
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      if ((_model.vpAceitos.length == 0) &&
                                          FFAppState()
                                              .userControleVp
                                              .hasINIConformTrzCincoQuatCincoTresInspecNIntru())
                                        Text(
                                          'Código não encontrado! Reveja suas respostas.',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      Row(
                                        mainAxisSize: MainAxisSize.max,
                                        mainAxisAlignment:
                                            MainAxisAlignment.end,
                                        children: [
                                          FFButtonWidget(
                                            onPressed: () async {
                                              setState(() {
                                                FFAppState()
                                                        .aplicabilidadeCreating =
                                                    false;
                                                FFAppState()
                                                        .createAplicabilidadeCALDEIRAS =
                                                    null;
                                              });
                                              setState(() {
                                                FFAppState()
                                                        .userControleCALDEIRAS =
                                                    CaldeirasNrStruct();
                                              });
                                              setState(() {
                                                _model
                                                    .statusDropDownOutrosValueController1
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController2
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController3
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController4
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController5
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController6
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController7
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController8
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController9
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController10
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController11
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController12
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController13
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController14
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController15
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESMetalicoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESDiametroMaiorrValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESVinteMIlValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESEnterradoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPernasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESSapatasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPedestaisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESSelasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESEmbarcacaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESNavioValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPlataformaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESFluidoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDVolumeTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDPressaoMaiorZeroUmTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDPressaoDzNoveTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSpieTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAlcalisTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDTesteSegurancaTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDBarreiraSisTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSgcCombustaoTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAguaTratadaTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDFluidoTermicoTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDProgramaPlhTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDVolumeValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSpieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAlcalisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDTesteSegurancaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDBarreiraSisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSgcCombustaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAguaTratadaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDFluidoTermicoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownRedePubTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOcupacaoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSistemaAuxiliarTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPlasticoReforTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTransporteTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSubmarinoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownDiametroTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfCodigoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAntesDezTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPmtaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFluidoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTemperaturaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEvidenciaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCatalisadorTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownServicoProprioSpieTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEstudoAbandonadorTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAmpliPorgTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOcupacaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSistemaAuxiliarValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPlasticoReforValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTransporteValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSubmarinoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownDiametroValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfCodigoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAntesDezValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPmtaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFluidoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTemperaturaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEvidenciaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCatalisadorValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEstudoAbandonadorValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFabSerieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownValvulaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownServicoProprioSpieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfInnValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownInmetroValueController
                                                    ?.reset();
                                              });
                                              setState(() {
                                                _model.showAvaliacaoVP = false;
                                                _model.showAvaliacaoTUBVP =
                                                    false;
                                                _model.showAvaliacaoTANQUES =
                                                    false;
                                                _model.showAvaliacaoCALDEIRAS =
                                                    false;
                                                _model.showAvaliacaoTUBCALDEIRAS =
                                                    false;
                                                _model.showAvaliacaoOUTROS =
                                                    false;
                                              });

                                              context.pushNamed('Equipamentos');
                                            },
                                            text: 'Cancelar',
                                            options: FFButtonOptions(
                                              height: 40.0,
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      24.0, 0.0, 24.0, 0.0),
                                              iconPadding: EdgeInsetsDirectional
                                                  .fromSTEB(0.0, 0.0, 0.0, 0.0),
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondary,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .titleSmall
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color: Colors.white,
                                                        letterSpacing: 0.0,
                                                      ),
                                              elevation: 3.0,
                                              borderSide: BorderSide(
                                                color: Colors.transparent,
                                                width: 1.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                          FFButtonWidget(
                                            onPressed: ((_model.caldeirasAceitos
                                                            .length >
                                                        1) ||
                                                    (_model.statusDropDownCALDVolumeValue ==
                                                            null ||
                                                        _model.statusDropDownCALDVolumeValue ==
                                                            ''))
                                                ? null
                                                : () async {
                                                    _model.retornoPeriodicidadeCALDERIAS =
                                                        await queryPeriodicidadeCaldeiraRecordOnce(
                                                      queryBuilder:
                                                          (periodicidadeCaldeiraRecord) =>
                                                              periodicidadeCaldeiraRecord
                                                                  .where(
                                                        'Codigo',
                                                        isEqualTo: _model
                                                            .caldeirasAceitos
                                                            .first
                                                            .codigo,
                                                      ),
                                                      singleRecord: true,
                                                    ).then((s) =>
                                                            s.firstOrNull);

                                                    await AplicabilidadeCALDSRecord
                                                        .collection
                                                        .doc()
                                                        .set(
                                                            createAplicabilidadeCALDSRecordData(
                                                          volumeMenorCemLitros:
                                                              FFAppState()
                                                                  .userControleCALDEIRAS
                                                                  .volumeMenorCemLitros,
                                                          pressaoMaiorZeroMeiaUm:
                                                              FFAppState()
                                                                  .userControleCALDEIRAS
                                                                  .pressaoMaiorZeroMeiaUm,
                                                          pressaoMaiorIgualDzNoveNove:
                                                              FFAppState()
                                                                  .userControleCALDEIRAS
                                                                  .pressaoMaiorIgualDzNoveNove,
                                                          sPIEServicoProprioInspecaoEquipamento:
                                                              FFAppState()
                                                                  .userControleCALDEIRAS
                                                                  .sPIEServicoProprioInspecaoEquipamento,
                                                          paraRecuperacaoAlcalis:
                                                              FFAppState()
                                                                  .userControleCALDEIRAS
                                                                  .paraRecuperacaoAlcalis,
                                                          testeAberturaValvulasSeguurancaUmAno:
                                                              FFAppState()
                                                                  .userControleCALDEIRAS
                                                                  .testeAberturaValvulasSeguurancaUmAno,
                                                          barreiraSISSistemaInstrumentadoSeguranca:
                                                              FFAppState()
                                                                  .userControleCALDEIRAS
                                                                  .barreiraSISSistemaInstrumentadoSeguranca,
                                                          sGCSistemaGerenciamentoCombustao:
                                                              FFAppState()
                                                                  .userControleCALDEIRAS
                                                                  .sGCSistemaGerenciamentoCombustao,
                                                          operacaoComAguaTratada:
                                                              FFAppState()
                                                                  .userControleCALDEIRAS
                                                                  .operacaoComAguaTratada,
                                                          vaporizacaoFluidoTermico:
                                                              FFAppState()
                                                                  .userControleCALDEIRAS
                                                                  .vaporizacaoFluidoTermico,
                                                          codigo: _model
                                                              .caldeirasAceitos
                                                              .first
                                                              .codigo,
                                                          inspecaoInterna: _model
                                                              .retornoPeriodicidadeCALDERIAS
                                                              ?.interna,
                                                          inspecaoExterna: _model
                                                              .retornoPeriodicidadeCALDERIAS
                                                              ?.externa,
                                                          equipamento: FFAppState()
                                                              .equipamentoAplicabilidade,
                                                          observacao: _model
                                                              .retornoPeriodicidadeCALDERIAS
                                                              ?.observacao,
                                                          serieEquipamento:
                                                              FFAppState()
                                                                  .serieEquipAplicabilidade,
                                                          tipoEquipamento:
                                                              FFAppState()
                                                                  .tipoEquipAplicabilidade,
                                                          tagEquipamento:
                                                              FFAppState()
                                                                  .tagEquipAplicabilidade,
                                                          dataCadEquipamento:
                                                              FFAppState()
                                                                  .dataCadEquipAplicabilidade
                                                                  ?.toString(),
                                                          descricaoEquipamento:
                                                              FFAppState()
                                                                  .descriccaoEquipAplicabilidade,
                                                          createdTime:
                                                              getCurrentTimestamp,
                                                          avaliador:
                                                              currentUserDisplayName,
                                                          contrato: FFAppState()
                                                              .contrato,
                                                        ));

                                                    await FFAppState()
                                                        .createAplicabilidadeCALDEIRAS!
                                                        .update(
                                                            createEquipamentosRecordData(
                                                          codigo: _model
                                                              .caldeirasAceitos
                                                              .first
                                                              .codigo,
                                                          interna:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeCALDERIAS
                                                                ?.interna,
                                                            '0',
                                                          ),
                                                          externa:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeCALDERIAS
                                                                ?.externa,
                                                            '0',
                                                          ),
                                                        ));
                                                    setState(() {
                                                      FFAppState()
                                                              .aplicabilidadeCreating =
                                                          false;
                                                      FFAppState()
                                                              .createAplicabilidadeCALDEIRAS =
                                                          null;
                                                    });
                                                    setState(() {
                                                      FFAppState()
                                                              .userControleCALDEIRAS =
                                                          CaldeirasNrStruct();
                                                    });

                                                    context.goNamed(
                                                        'Equipamentos');

                                                    setState(() {});
                                                  },
                                            text: 'Salvar',
                                            options: FFButtonOptions(
                                              height: 40.0,
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      24.0, 0.0, 24.0, 0.0),
                                              iconPadding: EdgeInsetsDirectional
                                                  .fromSTEB(0.0, 0.0, 0.0, 0.0),
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .primary,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .titleSmall
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color: Colors.white,
                                                        letterSpacing: 0.0,
                                                      ),
                                              elevation: 3.0,
                                              borderSide: BorderSide(
                                                color: Colors.transparent,
                                                width: 1.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                        ].divide(SizedBox(width: 50.0)),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      if (FFAppState().createAplicabilidadeTUBVP != null)
                        Column(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 12.0, 16.0, 12.0),
                              child: Container(
                                decoration: BoxDecoration(
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryBackground,
                                  borderRadius: BorderRadius.circular(20.0),
                                ),
                                child: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      20.0, 20.0, 20.0, 20.0),
                                  child: Column(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 10.0, 0.0, 0.0),
                                        child: Text(
                                          'TUBULAÇÕES DE VASOS DE PRESSÃO',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .primary,
                                                fontSize: 18.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 30.0, 0.0, 20.0),
                                        child: Column(
                                          mainAxisSize: MainAxisSize.max,
                                          children: [
                                            Row(
                                              mainAxisSize: MainAxisSize.min,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    'Equipamento',
                                                    textAlign: TextAlign.end,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                ),
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    FFAppState()
                                                        .equipamentoAplicabilidade,
                                                    textAlign: TextAlign.start,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                                ),
                                              ].divide(SizedBox(width: 20.0)),
                                            ),
                                            Row(
                                              mainAxisSize: MainAxisSize.min,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    'Tipo de equipamento',
                                                    textAlign: TextAlign.end,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                ),
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    FFAppState()
                                                        .tipoEquipAplicabilidade,
                                                    textAlign: TextAlign.start,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                                ),
                                              ].divide(SizedBox(width: 20.0)),
                                            ),
                                          ].divide(SizedBox(height: 10.0)),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 0.0, 0.0, 25.0),
                                        child: Container(
                                          decoration: BoxDecoration(
                                            color: FlutterFlowTheme.of(context)
                                                .secondaryBackground,
                                          ),
                                        ),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Rede Pública de Distribuição de Gás?',
                                            style: FlutterFlowTheme.of(context)
                                                .bodyMedium
                                                .override(
                                                  fontFamily: 'Inter',
                                                  fontSize: 16.0,
                                                  letterSpacing: 0.0,
                                                  fontWeight: FontWeight.w600,
                                                ),
                                          ),
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0.0, 0.0, 0.0, 25.0),
                                            child: FlutterFlowDropDown<String>(
                                              controller: _model
                                                      .statusDropDownRedePubTUBValueController ??=
                                                  FormFieldController<String>(
                                                _model.statusDropDownRedePubTUBValue ??=
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .redePublicaDistribuicaoGas,
                                              ),
                                              options:
                                                  List<String>.from(['1', '0']),
                                              optionLabels: ['Sim', 'Não'],
                                              onChanged: (val) async {
                                                setState(() => _model
                                                        .statusDropDownRedePubTUBValue =
                                                    val);
                                                setState(() {
                                                  _model
                                                      .statusDropDownOcupacaoTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownSistemaAuxiliarTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownPlasticoReforTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTransporteValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownSubmarinoTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownDiametroTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownConfCodigoTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownAntesDezTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownPmtaTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownFluidoTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTemperaturaTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownEvidenciaTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCatalisadorTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownEstudoAbandonadorTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownServicoProprioSpieTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownAmpliPorgTUBValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTransporteTUBValueController
                                                      ?.reset();
                                                });
                                                setState(() {
                                                  _model
                                                      .pressaoInputTUBTextController
                                                      ?.clear();
                                                  _model
                                                      .volumeInputTUBTextController
                                                      ?.clear();
                                                });
                                                setState(() {
                                                  _model.pressaoKGF = 0.0;
                                                  _model.volumeMcubico = 0.0;
                                                  _model.pv = 0.0;
                                                  _model.pressaoMPA = null;
                                                });
                                                setState(() {
                                                  FFAppState()
                                                      .updateUserControleTUBVPStruct(
                                                    (e) => e
                                                      ..redePublicaDistribuicaoGas =
                                                          _model
                                                              .statusDropDownRedePubTUBValue
                                                      ..interligadaVPParaOcupacaoHumana =
                                                          null
                                                      ..interligadaVPSistemaAuxiliarMaquina =
                                                          null
                                                      ..interligadaVasoPressaoPRFV =
                                                          null
                                                      ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                          null
                                                      ..ligadaVasoDiametro =
                                                          null
                                                      ..conformidadeCodigoProjeto =
                                                          null
                                                      ..instalacaoAntesDezembroDzOito =
                                                          null
                                                      ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                          null
                                                      ..classeA = null
                                                      ..classeB = null
                                                      ..classeC = null
                                                      ..classeD = null
                                                      ..pressaoZeroCincoMenorZeroUm =
                                                          null
                                                      ..pVMaiorZZZOitoPV = null
                                                      ..pVMaiorIgualUmMenorDoisCincoPV =
                                                          null
                                                      ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                          null
                                                      ..pVMaiorIgualTrintaMenorCemPV =
                                                          null
                                                      ..pVMaiorIgualCemPV = null
                                                      ..temperaturaMenor0C =
                                                          null
                                                      ..semEvidenciaDeterioracao =
                                                          null
                                                      ..enchInternoEOUCatalisador =
                                                          null
                                                      ..estudoAbonadorInspecaoInternaDif =
                                                          null
                                                      ..sPIEServicoPropInspecaoEquip =
                                                          null
                                                      ..ampliacaoProgramaPLH =
                                                          null
                                                      ..transporteProduto =
                                                          null,
                                                  );
                                                });
                                                _model.retornoAceitosTUBVP =
                                                    await actions
                                                        .atualizaAceitosTUBVP();
                                                setState(() {
                                                  _model.tubeVpAceitos = _model
                                                      .retornoAceitosTUBVP!
                                                      .toList()
                                                      .cast<TubVpNrStruct>();
                                                });
                                                _model.keysToUpdateReturnTUBVP =
                                                    await actions
                                                        .keysToUpdateTUBVP(
                                                  _model.retornoAceitosTUBVP
                                                      ?.toList(),
                                                );
                                                _model.addTUBVP =
                                                    await actions.addNATUBVP(
                                                  _model.keysToUpdateReturnTUBVP
                                                      ?.toList(),
                                                );
                                                setState(() {
                                                  FFAppState()
                                                          .userControleTUBVP =
                                                      _model.addTUBVP!;
                                                });
                                                setState(() {
                                                  FFAppState()
                                                      .updateUserControleTUBVPStruct(
                                                    (e) => e
                                                      ..redePublicaDistribuicaoGas =
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                  );
                                                });

                                                setState(() {});
                                              },
                                              width: MediaQuery.sizeOf(context)
                                                      .width *
                                                  1.0,
                                              height: 50.0,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                      ),
                                              hintText: 'Selecione',
                                              icon: Icon(
                                                Icons
                                                    .keyboard_arrow_down_rounded,
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryText,
                                                size: 24.0,
                                              ),
                                              fillColor:
                                                  FlutterFlowTheme.of(context)
                                                      .secondaryBackground,
                                              elevation: 2.0,
                                              borderColor:
                                                  FlutterFlowTheme.of(context)
                                                      .alternate,
                                              borderWidth: 2.0,
                                              borderRadius: 8.0,
                                              margin: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      16.0, 4.0, 16.0, 4.0),
                                              hidesUnderline: true,
                                              isOverButton: true,
                                              isSearchable: false,
                                              isMultiSelect: false,
                                            ),
                                          ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .interligadaVPParaOcupacaoHumana !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas())
                                            Text(
                                              'Interligada à Vaso de Pressão para ocupação humana?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .interligadaVPParaOcupacaoHumana !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownOcupacaoTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownOcupacaoTUBValue ??=
                                                      FFAppState()
                                                          .userControleTUBVP
                                                          .interligadaVPParaOcupacaoHumana,
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownOcupacaoTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownSistemaAuxiliarTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPlasticoReforTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTransporteValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownSubmarinoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownDiametroTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfCodigoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAntesDezTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTransporteTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .pressaoInputTUBTextController
                                                        ?.clear();
                                                    _model
                                                        .volumeInputTUBTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            _model
                                                                .statusDropDownOcupacaoTUBValue
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            null
                                                        ..interligadaVasoPressaoPRFV =
                                                            null
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            null
                                                        ..ligadaVasoDiametro =
                                                            null
                                                        ..conformidadeCodigoProjeto =
                                                            null
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null
                                                        ..transporteProduto =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPOcupacao =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPOcupacao!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPOcupacao =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPOcupacao
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPOcupacao =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPOcupacao
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model
                                                            .addTUBVPOcupacao!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            _model
                                                                .statusDropDownOcupacaoTUBValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .interligadaVPSistemaAuxiliarMaquina !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana())
                                            Text(
                                              'Interligada à Vaso de Pressão de sistema auxiliar de máquina?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .interligadaVPSistemaAuxiliarMaquina !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownSistemaAuxiliarTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownSistemaAuxiliarTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownSistemaAuxiliarTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownPlasticoReforTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTransporteValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownSubmarinoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownDiametroTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfCodigoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAntesDezTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTransporteTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .pressaoInputTUBTextController
                                                        ?.clear();
                                                    _model
                                                        .volumeInputTUBTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarTUBValue
                                                        ..interligadaVasoPressaoPRFV =
                                                            null
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            null
                                                        ..ligadaVasoDiametro =
                                                            null
                                                        ..conformidadeCodigoProjeto =
                                                            null
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null
                                                        ..transporteProduto =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPAuxMaq =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPAuxMaq!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPAuxMaq =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPAuxMaq
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPAuxMaq =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPAuxMaq
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model.addTUBVPAuxMaq!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarTUBValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .interligadaVasoPressaoPRFV !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina())
                                            Text(
                                              'Interligada à Vaso De Pressão PRFV?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .interligadaVasoPressaoPRFV !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownPlasticoReforTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownPlasticoReforTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownPlasticoReforTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTransporteValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownSubmarinoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownDiametroTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfCodigoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAntesDezTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTransporteTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .pressaoInputTUBTextController
                                                        ?.clear();
                                                    _model
                                                        .volumeInputTUBTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..interligadaVasoPressaoPRFV =
                                                            _model
                                                                .statusDropDownPlasticoReforTUBValue
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            null
                                                        ..ligadaVasoDiametro =
                                                            null
                                                        ..conformidadeCodigoProjeto =
                                                            null
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null
                                                        ..transporteProduto =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPReforcado =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPReforcado!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPReforcado =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPReforcado
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPReforcado =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPReforcado
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model
                                                            .addTUBVPReforcado!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            _model
                                                                .statusDropDownPlasticoReforTUBValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .transporteProduto !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV())
                                            Text(
                                              'Interligada à Vaso de Pressão Para Transporte de Produto',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .transporteProduto !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTransporteTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTransporteTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTransporteTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTransporteValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownSubmarinoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownDiametroTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfCodigoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAntesDezTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .pressaoInputTUBTextController
                                                        ?.clear();
                                                    _model
                                                        .volumeInputTUBTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            null
                                                        ..ligadaVasoDiametro =
                                                            null
                                                        ..conformidadeCodigoProjeto =
                                                            null
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteTUBValue,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPTransporte =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPTransporte!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPTransporte =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPTransporte
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPTransporte =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPTransporte
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model
                                                            .addTUBVPTransporte!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPlasticoReforTUBValue,
                                                          '3',
                                                        )
                                                        ..transporteProduto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTransporteTUBValue,
                                                          '3',
                                                        ),
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .equipamentoSubmarinoExploracaoProducaoPetroleo !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto())
                                            Text(
                                              'Equipamento submarino para exploração e produção de petróleo?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .equipamentoSubmarinoExploracaoProducaoPetroleo !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownSubmarinoTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownSubmarinoTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownSubmarinoTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownDiametroTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfCodigoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAntesDezTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .pressaoInputTUBTextController
                                                        ?.clear();
                                                    _model
                                                        .volumeInputTUBTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            _model
                                                                .statusDropDownSubmarinoTUBValue
                                                        ..ligadaVasoDiametro =
                                                            null
                                                        ..conformidadeCodigoProjeto =
                                                            null
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPSubmarino =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPSubmarino!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPSubmarino =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPSubmarino
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPSubmarino =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPSubmarino
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model
                                                            .addTUBVPSubmarino!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPlasticoReforTUBValue,
                                                          '3',
                                                        )
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            _model
                                                                .statusDropDownSubmarinoTUBValue
                                                        ..transporteProduto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTransporteValue,
                                                          '3',
                                                        ),
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .ligadaVasoDiametro !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo())
                                            Text(
                                              'Ligada à Vaso de Pressão com diâmentro interno menor que 150mm?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .ligadaVasoDiametro !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownDiametroTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownDiametroTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownDiametroTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownConfCodigoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAntesDezTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .pressaoInputTUBTextController
                                                        ?.clear();
                                                    _model
                                                        .volumeInputTUBTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..ligadaVasoDiametro =
                                                            _model
                                                                .statusDropDownDiametroTUBValue
                                                        ..conformidadeCodigoProjeto =
                                                            null
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPDiametro =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPDiametro!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPDiametro =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPDiametro
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPDiametro =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPDiametro
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model
                                                            .addTUBVPDiametro!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPlasticoReforTUBValue,
                                                          '3',
                                                        )
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSubmarinoTUBValue,
                                                          '3',
                                                        )
                                                        ..ligadaVasoDiametro =
                                                            _model
                                                                .statusDropDownDiametroTUBValue
                                                        ..transporteProduto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTransporteTUBValue,
                                                          '3',
                                                        ),
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .conformidadeCodigoProjeto !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro())
                                            Text(
                                              'Em conformidade com o código do projeto?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .conformidadeCodigoProjeto !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownConfCodigoTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownConfCodigoTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownConfCodigoTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownAntesDezTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .pressaoInputTUBTextController
                                                        ?.clear();
                                                    _model
                                                        .volumeInputTUBTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoTUBValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPConfCodProj =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPConfCodProj!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPConfCodProj =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPConfCodProj
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPConfCodProj =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPConfCodProj
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model
                                                            .addTUBVPConfCodProj!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPlasticoReforTUBValue,
                                                          '3',
                                                        )
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSubmarinoTUBValue,
                                                          '3',
                                                        )
                                                        ..ligadaVasoDiametro =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownDiametroTUBValue,
                                                          '3',
                                                        )
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoTUBValue
                                                        ..transporteProduto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTransporteTUBValue,
                                                          '3',
                                                        ),
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleTUBVP.instalacaoAntesDezembroDzOito !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto())
                                            Text(
                                              'Instalação feita antes de 18 de dezembro de 2018?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleTUBVP.instalacaoAntesDezembroDzOito !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownAntesDezTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownAntesDezTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownAntesDezTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownPmtaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .pressaoInputTUBTextController
                                                        ?.clear();
                                                    _model
                                                        .volumeInputTUBTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..instalacaoAntesDezembroDzOito =
                                                            _model
                                                                .statusDropDownAntesDezTUBValue
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPAntesDz =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPAntesDz!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPAntesDz =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPAntesDz
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPAntesDz =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPAntesDz
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model.addTUBVPAntesDz!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPlasticoReforTUBValue,
                                                          '3',
                                                        )
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSubmarinoTUBValue,
                                                          '3',
                                                        )
                                                        ..ligadaVasoDiametro =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownDiametroTUBValue,
                                                          '3',
                                                        )
                                                        ..conformidadeCodigoProjeto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownConfCodigoTUBValue,
                                                          '3',
                                                        )
                                                        ..transporteProduto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTransporteTUBValue,
                                                          '3',
                                                        )
                                                        ..instalacaoAntesDezembroDzOito =
                                                            _model
                                                                .statusDropDownAntesDezTUBValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleTUBVP.possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito())
                                            Text(
                                              'Possibilidade de reconstrução da memória de cálculo da PMTA sgundo código reconhecido?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleTUBVP.possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownPmtaTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownPmtaTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownPmtaTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownFluidoTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .pressaoInputTUBTextController
                                                        ?.clear();
                                                    _model
                                                        .volumeInputTUBTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            _model
                                                                .statusDropDownPmtaTUBValue
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPPmta =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPPmta!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPPmta =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPPmta
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPPmta =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPPmta
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model.addTUBVPPmta!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPlasticoReforTUBValue,
                                                          '3',
                                                        )
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSubmarinoTUBValue,
                                                          '3',
                                                        )
                                                        ..ligadaVasoDiametro =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownDiametroTUBValue,
                                                          '3',
                                                        )
                                                        ..conformidadeCodigoProjeto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownConfCodigoTUBValue,
                                                          '3',
                                                        )
                                                        ..transporteProduto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTransporteTUBValue,
                                                          '3',
                                                        )
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezTUBValue,
                                                          '3',
                                                        )
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            _model
                                                                .statusDropDownPmtaTUBValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .classeA !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido())
                                            Text(
                                              'Flúido: (classe)',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .classeA !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownFluidoTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownFluidoTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from([
                                                  'A',
                                                  'A2',
                                                  'A3',
                                                  'A4',
                                                  'B',
                                                  'B2',
                                                  'D',
                                                  'A5'
                                                ]),
                                                optionLabels: [
                                                  'Combustível & Temperatura de Operação ≥ 200°C',
                                                  'H2 - Hidrogênio',
                                                  'C2H2 - Acetileno',
                                                  'Tóxico com Limite ≤ 20 ppm',
                                                  'Combustível & Temperatura de Operação < 200°C',
                                                  'Tóxico com Limite > 20 ppm',
                                                  'Não classificado',
                                                  'Inflamável'
                                                ],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownFluidoTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTemperaturaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .pressaoInputTUBTextController
                                                        ?.clear();
                                                    _model
                                                        .volumeInputTUBTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..classeA = (_model
                                                                        .statusDropDownFluidoTUBValue ==
                                                                    'A') ||
                                                                (_model.statusDropDownFluidoTUBValue ==
                                                                    'A2') ||
                                                                (_model.statusDropDownFluidoTUBValue ==
                                                                    'A3') ||
                                                                (_model.statusDropDownFluidoTUBValue ==
                                                                    'A4')
                                                            ? '1'
                                                            : '0'
                                                        ..classeB =
                                                            (_model.statusDropDownFluidoTUBValue ==
                                                                        'B') ||
                                                                    (_model.statusDropDownFluidoTUBValue ==
                                                                        'B2')
                                                                ? '1'
                                                                : '0'
                                                        ..classeC = (_model
                                                                        .statusDropDownFluidoTUBValue ==
                                                                    'C') ||
                                                                (_model.statusDropDownFluidoTUBValue ==
                                                                    'C2') ||
                                                                (_model.statusDropDownFluidoTUBValue ==
                                                                    'C3')
                                                            ? '1'
                                                            : '0'
                                                        ..classeD =
                                                            (_model.statusDropDownFluidoTUBValue ==
                                                                        'D') ||
                                                                    (_model.statusDropDownFluidoTUBValue ==
                                                                        'D1')
                                                                ? '1'
                                                                : '0'
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPFluido =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPFluido!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPFluido =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPFluido
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPFluido =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPFluido
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model.addTUBVPFluido!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPlasticoReforTUBValue,
                                                          '3',
                                                        )
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSubmarinoTUBValue,
                                                          '3',
                                                        )
                                                        ..ligadaVasoDiametro =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownDiametroTUBValue,
                                                          '3',
                                                        )
                                                        ..conformidadeCodigoProjeto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownConfCodigoTUBValue,
                                                          '3',
                                                        )
                                                        ..transporteProduto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTransporteTUBValue,
                                                          '3',
                                                        )
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezTUBValue,
                                                          '3',
                                                        )
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaTUBValue,
                                                          '3',
                                                        )
                                                        ..classeA = (_model
                                                                        .statusDropDownFluidoTUBValue ==
                                                                    'A') ||
                                                                (_model.statusDropDownFluidoTUBValue ==
                                                                    'A2') ||
                                                                (_model.statusDropDownFluidoTUBValue ==
                                                                    'A3') ||
                                                                (_model.statusDropDownFluidoTUBValue ==
                                                                    'A4') ||
                                                                (_model.statusDropDownFluidoTUBValue ==
                                                                    'A5')
                                                            ? '1'
                                                            : '0'
                                                        ..classeB =
                                                            (_model.statusDropDownFluidoTUBValue ==
                                                                        'B') ||
                                                                    (_model.statusDropDownFluidoTUBValue ==
                                                                        'B2')
                                                                ? '1'
                                                                : '0'
                                                        ..classeC = (_model
                                                                        .statusDropDownFluidoTUBValue ==
                                                                    'C') ||
                                                                (_model.statusDropDownFluidoTUBValue ==
                                                                    'C2') ||
                                                                (_model.statusDropDownFluidoTUBValue ==
                                                                    'C3')
                                                            ? '1'
                                                            : '0'
                                                        ..classeD =
                                                            (_model.statusDropDownFluidoTUBValue ==
                                                                        'D') ||
                                                                    (_model.statusDropDownFluidoTUBValue ==
                                                                        'D1')
                                                                ? '1'
                                                                : '0',
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.stretch,
                                        children: [
                                          if ((FFAppState().userControleTUBVP.pressaoZeroCincoMenorZeroUm !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA())
                                            Text(
                                              'Pressão:',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          Row(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              if ((FFAppState()
                                                          .userControleTUBVP
                                                          .pressaoZeroCincoMenorZeroUm !=
                                                      '3') &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasRedePublicaDistribuicaoGas() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVPParaOcupacaoHumana() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVasoPressaoPRFV() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasTransporteProduto() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasLigadaVasoDiametro() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasConformidadeCodigoProjeto() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInstalacaoAntesDezembroDzOito() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasClasseA())
                                                Flexible(
                                                  child: Container(
                                                    width: 250.0,
                                                    child: TextFormField(
                                                      controller: _model
                                                          .pressaoInputTUBTextController,
                                                      focusNode: _model
                                                          .pressaoInputTUBFocusNode,
                                                      onFieldSubmitted:
                                                          (_) async {
                                                        setState(() {
                                                          _model
                                                              .radioButtonPressaoTUBValueController
                                                              ?.value = 'kgf/cm²';
                                                        });
                                                        setState(() {
                                                          _model.pressaoKGF =
                                                              () {
                                                            if (_model
                                                                    .radioButtonPressaoTUBValue ==
                                                                'MPa') {
                                                              return (double.parse(_model
                                                                      .pressaoInputTUBTextController
                                                                      .text) *
                                                                  10.197);
                                                            } else if (_model
                                                                    .radioButtonPressaoTUBValue ==
                                                                'Psi') {
                                                              return (double.parse(_model
                                                                      .pressaoInputTUBTextController
                                                                      .text) *
                                                                  0.070307);
                                                            } else if (_model
                                                                    .radioButtonPressaoTUBValue ==
                                                                'bar') {
                                                              return (double.parse(_model
                                                                      .pressaoInputTUBTextController
                                                                      .text) *
                                                                  1.01972);
                                                            } else {
                                                              return double
                                                                  .parse(_model
                                                                      .pressaoInputTUBTextController
                                                                      .text);
                                                            }
                                                          }();
                                                        });
                                                      },
                                                      autofocus: false,
                                                      obscureText: false,
                                                      decoration:
                                                          InputDecoration(
                                                        isDense: true,
                                                        labelStyle:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .primary,
                                                                  fontSize:
                                                                      18.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                ),
                                                        hintStyle:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  letterSpacing:
                                                                      0.0,
                                                                ),
                                                        enabledBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primaryText,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        focusedBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primary,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        errorBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .error,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        focusedErrorBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .error,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                      ),
                                                      style: FlutterFlowTheme
                                                              .of(context)
                                                          .bodyMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primary,
                                                            fontSize: 18.0,
                                                            letterSpacing: 0.0,
                                                          ),
                                                      keyboardType:
                                                          TextInputType.number,
                                                      validator: _model
                                                          .pressaoInputTUBTextControllerValidator
                                                          .asValidator(context),
                                                    ),
                                                  ),
                                                ),
                                              if ((FFAppState()
                                                          .userControleTUBVP
                                                          .pressaoZeroCincoMenorZeroUm !=
                                                      '3') &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasRedePublicaDistribuicaoGas() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVPParaOcupacaoHumana() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVasoPressaoPRFV() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasTransporteProduto() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasLigadaVasoDiametro() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasConformidadeCodigoProjeto() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInstalacaoAntesDezembroDzOito() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasClasseA())
                                                Padding(
                                                  padding: EdgeInsetsDirectional
                                                      .fromSTEB(
                                                          20.0, 0.0, 0.0, 0.0),
                                                  child: FFButtonWidget(
                                                    onPressed: () async {
                                                      setState(() {
                                                        _model
                                                            .statusDropDownTemperaturaTUBValueController
                                                            ?.reset();
                                                        _model
                                                            .statusDropDownEvidenciaTUBValueController
                                                            ?.reset();
                                                        _model
                                                            .statusDropDownCatalisadorTUBValueController
                                                            ?.reset();
                                                        _model
                                                            .statusDropDownEstudoAbandonadorTUBValueController
                                                            ?.reset();
                                                        _model
                                                            .statusDropDownServicoProprioSpieTUBValueController
                                                            ?.reset();
                                                        _model
                                                            .statusDropDownAmpliPorgTUBValueController
                                                            ?.reset();
                                                      });
                                                      setState(() {
                                                        _model.pressaoMPA = () {
                                                          if (_model
                                                                  .radioButtonPressaoTUBValue ==
                                                              'Psi') {
                                                            return (double.parse(
                                                                    _model
                                                                        .pressaoInputTUBTextController
                                                                        .text) *
                                                                0.00689476);
                                                          } else if (_model
                                                                  .radioButtonPressaoTUBValue ==
                                                              'bar') {
                                                            return (double.parse(
                                                                    _model
                                                                        .pressaoInputTUBTextController
                                                                        .text) *
                                                                0.1);
                                                          } else if (_model
                                                                  .radioButtonPressaoTUBValue ==
                                                              'kgf/cm²') {
                                                            return (double.parse(
                                                                    _model
                                                                        .pressaoInputTUBTextController
                                                                        .text) *
                                                                0.0980665);
                                                          } else {
                                                            return double
                                                                .tryParse(_model
                                                                    .pressaoInputTUBTextController
                                                                    .text);
                                                          }
                                                        }();
                                                      });
                                                      setState(() {
                                                        FFAppState()
                                                            .updateUserControleTUBVPStruct(
                                                          (e) => e
                                                            ..pressaoZeroCincoMenorZeroUm =
                                                                (_model.pressaoMPA! >=
                                                                            0.005100139) &&
                                                                        (_model.pressaoMPA! <
                                                                            0.10133)
                                                                    ? '1'
                                                                    : '0'
                                                            ..pVMaiorZZZOitoPV =
                                                                null
                                                            ..pVMaiorIgualUmMenorDoisCincoPV =
                                                                null
                                                            ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                                null
                                                            ..pVMaiorIgualTrintaMenorCemPV =
                                                                null
                                                            ..pVMaiorIgualCemPV =
                                                                null
                                                            ..temperaturaMenor0C =
                                                                null
                                                            ..semEvidenciaDeterioracao =
                                                                null
                                                            ..enchInternoEOUCatalisador =
                                                                null
                                                            ..estudoAbonadorInspecaoInternaDif =
                                                                null
                                                            ..sPIEServicoPropInspecaoEquip =
                                                                null
                                                            ..ampliacaoProgramaPLH =
                                                                null,
                                                        );
                                                      });
                                                      _model.retornoAceitosTUBVPPressao =
                                                          await actions
                                                              .atualizaAceitosTUBVP();
                                                      setState(() {
                                                        _model.tubeVpAceitos = _model
                                                            .retornoAceitosTUBVPPressao!
                                                            .toList()
                                                            .cast<
                                                                TubVpNrStruct>();
                                                      });
                                                      _model.keysToUpdateReturnTUBVPPressao =
                                                          await actions
                                                              .keysToUpdateTUBVP(
                                                        _model
                                                            .retornoAceitosTUBVPPressao
                                                            ?.toList(),
                                                      );
                                                      _model.addTUBVPPressao =
                                                          await actions
                                                              .addNATUBVP(
                                                        _model
                                                            .keysToUpdateReturnTUBVPPressao
                                                            ?.toList(),
                                                      );
                                                      setState(() {
                                                        FFAppState()
                                                                .userControleTUBVP =
                                                            _model
                                                                .addTUBVPPressao!;
                                                      });
                                                      setState(() {
                                                        FFAppState()
                                                            .updateUserControleTUBVPStruct(
                                                          (e) => e
                                                            ..redePublicaDistribuicaoGas =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownRedePubTUBValue,
                                                              '3',
                                                            )
                                                            ..interligadaVPParaOcupacaoHumana =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownOcupacaoTUBValue,
                                                              '3',
                                                            )
                                                            ..interligadaVPSistemaAuxiliarMaquina =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownSistemaAuxiliarTUBValue,
                                                              '3',
                                                            )
                                                            ..interligadaVasoPressaoPRFV =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownPlasticoReforTUBValue,
                                                              '3',
                                                            )
                                                            ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownSubmarinoTUBValue,
                                                              '3',
                                                            )
                                                            ..ligadaVasoDiametro =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownDiametroTUBValue,
                                                              '3',
                                                            )
                                                            ..conformidadeCodigoProjeto =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownConfCodigoTUBValue,
                                                              '3',
                                                            )
                                                            ..transporteProduto =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownTransporteTUBValue,
                                                              '3',
                                                            )
                                                            ..instalacaoAntesDezembroDzOito =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownAntesDezTUBValue,
                                                              '3',
                                                            )
                                                            ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownPmtaTUBValue,
                                                              '3',
                                                            )
                                                            ..classeA =
                                                                valueOrDefault<
                                                                    String>(
                                                              (_model.statusDropDownFluidoTUBValue == 'A') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'A2') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'A3') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'A4') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'A5')
                                                                  ? '1'
                                                                  : '0',
                                                              '3',
                                                            )
                                                            ..classeB =
                                                                valueOrDefault<
                                                                    String>(
                                                              (_model.statusDropDownFluidoTUBValue ==
                                                                          'B') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'B2')
                                                                  ? '1'
                                                                  : '0',
                                                              '3',
                                                            )
                                                            ..classeC =
                                                                valueOrDefault<
                                                                    String>(
                                                              (_model.statusDropDownFluidoTUBValue == 'C') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'C2') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'C3')
                                                                  ? '1'
                                                                  : '0',
                                                              '3',
                                                            )
                                                            ..classeD =
                                                                valueOrDefault<
                                                                    String>(
                                                              (_model.statusDropDownFluidoTUBValue ==
                                                                          'D') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'D1')
                                                                  ? '1'
                                                                  : '0',
                                                              '3',
                                                            )
                                                            ..pressaoZeroCincoMenorZeroUm =
                                                                (_model.pressaoMPA! >=
                                                                            0.005100139) &&
                                                                        (_model.pressaoMPA! <
                                                                            0.10133)
                                                                    ? '1'
                                                                    : '0',
                                                        );
                                                      });

                                                      setState(() {});
                                                    },
                                                    text: 'Aplicar',
                                                    options: FFButtonOptions(
                                                      height: 40.0,
                                                      padding:
                                                          EdgeInsetsDirectional
                                                              .fromSTEB(
                                                                  24.0,
                                                                  0.0,
                                                                  24.0,
                                                                  0.0),
                                                      iconPadding:
                                                          EdgeInsetsDirectional
                                                              .fromSTEB(
                                                                  0.0,
                                                                  0.0,
                                                                  0.0,
                                                                  0.0),
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .primary,
                                                      textStyle:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .titleSmall
                                                              .override(
                                                                fontFamily:
                                                                    'Inter',
                                                                color: Colors
                                                                    .white,
                                                                letterSpacing:
                                                                    0.0,
                                                              ),
                                                      elevation: 3.0,
                                                      borderSide: BorderSide(
                                                        color:
                                                            Colors.transparent,
                                                        width: 1.0,
                                                      ),
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              8.0),
                                                    ),
                                                  ),
                                                ),
                                            ],
                                          ),
                                          Row(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              if ((FFAppState()
                                                          .userControleTUBVP
                                                          .pressaoZeroCincoMenorZeroUm !=
                                                      '3') &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasRedePublicaDistribuicaoGas() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVPParaOcupacaoHumana() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVasoPressaoPRFV() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasTransporteProduto() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasLigadaVasoDiametro() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasConformidadeCodigoProjeto() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInstalacaoAntesDezembroDzOito() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasClasseA())
                                                FlutterFlowRadioButton(
                                                  options: [
                                                    'MPa',
                                                    'Psi',
                                                    'bar',
                                                    'kgf/cm²'
                                                  ].toList(),
                                                  onChanged: (val) =>
                                                      setState(() {}),
                                                  controller: _model
                                                          .radioButtonPressaoTUBValueController ??=
                                                      FormFieldController<
                                                          String>('MPa'),
                                                  optionHeight: 30.0,
                                                  textStyle:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .labelMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            letterSpacing: 0.0,
                                                          ),
                                                  selectedTextStyle:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .bodyMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            fontSize: 16.0,
                                                            letterSpacing: 0.0,
                                                            fontWeight:
                                                                FontWeight.w600,
                                                          ),
                                                  textPadding:
                                                      EdgeInsetsDirectional
                                                          .fromSTEB(0.0, 0.0,
                                                              10.0, 0.0),
                                                  buttonPosition:
                                                      RadioButtonPosition.left,
                                                  direction: Axis.horizontal,
                                                  radioButtonColor:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .primary,
                                                  inactiveRadioButtonColor:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .secondaryText,
                                                  toggleable: true,
                                                  horizontalAlignment:
                                                      WrapAlignment.start,
                                                  verticalAlignment:
                                                      WrapCrossAlignment.start,
                                                ),
                                            ].divide(SizedBox(width: 15.0)),
                                          ),
                                        ],
                                      ),
                                      if ((FFAppState()
                                                  .userControleTUBVP
                                                  .pressaoZeroCincoMenorZeroUm !=
                                              '3') &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasRedePublicaDistribuicaoGas() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasInterligadaVPParaOcupacaoHumana() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasInterligadaVasoPressaoPRFV() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasTransporteProduto() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasLigadaVasoDiametro() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasConformidadeCodigoProjeto() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasInstalacaoAntesDezembroDzOito() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasClasseA())
                                        Text(
                                          '${valueOrDefault<String>(
                                            _model.pressaoMPA?.toString(),
                                            '0',
                                          )}MPa',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                fontSize: 16.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.w600,
                                              ),
                                        ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.stretch,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .pVMaiorZZZOitoPV !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm())
                                            Text(
                                              'Volume:',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          Row(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              if ((FFAppState()
                                                          .userControleTUBVP
                                                          .pVMaiorZZZOitoPV !=
                                                      '3') &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasRedePublicaDistribuicaoGas() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVPParaOcupacaoHumana() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVasoPressaoPRFV() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasTransporteProduto() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasLigadaVasoDiametro() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasConformidadeCodigoProjeto() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInstalacaoAntesDezembroDzOito() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasClasseA() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasPressaoZeroCincoMenorZeroUm())
                                                Flexible(
                                                  child: Container(
                                                    width: 250.0,
                                                    child: TextFormField(
                                                      controller: _model
                                                          .volumeInputTUBTextController,
                                                      focusNode: _model
                                                          .volumeInputTUBFocusNode,
                                                      autofocus: false,
                                                      obscureText: false,
                                                      decoration:
                                                          InputDecoration(
                                                        isDense: true,
                                                        labelStyle:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .primary,
                                                                  fontSize:
                                                                      18.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                ),
                                                        hintStyle:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  letterSpacing:
                                                                      0.0,
                                                                ),
                                                        enabledBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primaryText,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        focusedBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primary,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        errorBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .error,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        focusedErrorBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .error,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                      ),
                                                      style: FlutterFlowTheme
                                                              .of(context)
                                                          .bodyMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primary,
                                                            fontSize: 18.0,
                                                            letterSpacing: 0.0,
                                                          ),
                                                      keyboardType:
                                                          TextInputType.number,
                                                      validator: _model
                                                          .volumeInputTUBTextControllerValidator
                                                          .asValidator(context),
                                                    ),
                                                  ),
                                                ),
                                              if ((FFAppState()
                                                          .userControleTUBVP
                                                          .pVMaiorZZZOitoPV !=
                                                      '3') &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasRedePublicaDistribuicaoGas() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVPParaOcupacaoHumana() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVasoPressaoPRFV() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasTransporteProduto() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasLigadaVasoDiametro() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasConformidadeCodigoProjeto() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInstalacaoAntesDezembroDzOito() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasClasseA() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasPressaoZeroCincoMenorZeroUm())
                                                Padding(
                                                  padding: EdgeInsetsDirectional
                                                      .fromSTEB(
                                                          20.0, 0.0, 0.0, 0.0),
                                                  child: FFButtonWidget(
                                                    onPressed: () async {
                                                      setState(() {
                                                        _model.volumeMcubico =
                                                            () {
                                                          if (_model
                                                                  .radioButtonVolumeTUBValue ==
                                                              'Litros') {
                                                            return (double.parse(
                                                                    _model
                                                                        .volumeInputTUBTextController
                                                                        .text) *
                                                                0.001);
                                                          } else if (_model
                                                                  .radioButtonVolumeTUBValue ==
                                                              'ft³') {
                                                            return (double.parse(
                                                                    _model
                                                                        .volumeInputTUBTextController
                                                                        .text) *
                                                                0.0283168);
                                                          } else if (_model
                                                                  .radioButtonVolumeTUBValue ==
                                                              'USA gal') {
                                                            return (double.parse(
                                                                    _model
                                                                        .volumeInputTUBTextController
                                                                        .text) *
                                                                0.00378541);
                                                          } else {
                                                            return double
                                                                .tryParse(_model
                                                                    .volumeInputTUBTextController
                                                                    .text);
                                                          }
                                                        }();
                                                      });
                                                      setState(() {
                                                        _model.pv = ((_model
                                                                .pressaoMPA!) *
                                                            (_model
                                                                .volumeMcubico!));
                                                      });
                                                      setState(() {
                                                        _model
                                                            .statusDropDownTemperaturaTUBValueController
                                                            ?.reset();
                                                        _model
                                                            .statusDropDownEvidenciaTUBValueController
                                                            ?.reset();
                                                        _model
                                                            .statusDropDownCatalisadorTUBValueController
                                                            ?.reset();
                                                        _model
                                                            .statusDropDownEstudoAbandonadorTUBValueController
                                                            ?.reset();
                                                        _model
                                                            .statusDropDownServicoProprioSpieTUBValueController
                                                            ?.reset();
                                                        _model
                                                            .statusDropDownAmpliPorgTUBValueController
                                                            ?.reset();
                                                      });
                                                      setState(() {
                                                        FFAppState()
                                                            .updateUserControleTUBVPStruct(
                                                          (e) => e
                                                            ..pVMaiorZZZOitoPV =
                                                                (_model.pv! >
                                                                            0.008) &&
                                                                        (_model.pv! <
                                                                            1.0)
                                                                    ? '1'
                                                                    : '0'
                                                            ..pVMaiorIgualUmMenorDoisCincoPV =
                                                                (_model.pv! >=
                                                                            1.0) &&
                                                                        (_model.pv! <
                                                                            2.5)
                                                                    ? '1'
                                                                    : '0'
                                                            ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                                (_model.pv! >=
                                                                            2.5) &&
                                                                        (_model.pv! <
                                                                            30.0)
                                                                    ? '1'
                                                                    : '0'
                                                            ..pVMaiorIgualTrintaMenorCemPV =
                                                                (_model.pv! >=
                                                                            30.0) &&
                                                                        (_model.pv! <
                                                                            100.0)
                                                                    ? '1'
                                                                    : '0'
                                                            ..pVMaiorIgualCemPV =
                                                                _model.pv! >=
                                                                        100.0
                                                                    ? '1'
                                                                    : '0'
                                                            ..temperaturaMenor0C =
                                                                null
                                                            ..semEvidenciaDeterioracao =
                                                                null
                                                            ..enchInternoEOUCatalisador =
                                                                null
                                                            ..estudoAbonadorInspecaoInternaDif =
                                                                null
                                                            ..sPIEServicoPropInspecaoEquip =
                                                                null
                                                            ..ampliacaoProgramaPLH =
                                                                null,
                                                        );
                                                      });
                                                      _model.retornoAceitosTUBVPVolume =
                                                          await actions
                                                              .atualizaAceitosTUBVP();
                                                      setState(() {
                                                        _model.tubeVpAceitos = _model
                                                            .retornoAceitosTUBVPVolume!
                                                            .toList()
                                                            .cast<
                                                                TubVpNrStruct>();
                                                      });
                                                      _model.keysToUpdateReturnTUBVPVolume =
                                                          await actions
                                                              .keysToUpdateTUBVP(
                                                        _model
                                                            .retornoAceitosTUBVPVolume
                                                            ?.toList(),
                                                      );
                                                      _model.addTUBVPVolume =
                                                          await actions
                                                              .addNATUBVP(
                                                        _model
                                                            .keysToUpdateReturnTUBVPVolume
                                                            ?.toList(),
                                                      );
                                                      setState(() {
                                                        FFAppState()
                                                                .userControleTUBVP =
                                                            _model
                                                                .addTUBVPVolume!;
                                                      });
                                                      setState(() {
                                                        FFAppState()
                                                            .updateUserControleTUBVPStruct(
                                                          (e) => e
                                                            ..redePublicaDistribuicaoGas =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownRedePubTUBValue,
                                                              '3',
                                                            )
                                                            ..interligadaVPParaOcupacaoHumana =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownOcupacaoTUBValue,
                                                              '3',
                                                            )
                                                            ..interligadaVPSistemaAuxiliarMaquina =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownSistemaAuxiliarTUBValue,
                                                              '3',
                                                            )
                                                            ..interligadaVasoPressaoPRFV =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownPlasticoReforTUBValue,
                                                              '3',
                                                            )
                                                            ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownSubmarinoTUBValue,
                                                              '3',
                                                            )
                                                            ..ligadaVasoDiametro =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownDiametroTUBValue,
                                                              '3',
                                                            )
                                                            ..conformidadeCodigoProjeto =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownConfCodigoTUBValue,
                                                              '3',
                                                            )
                                                            ..transporteProduto =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownTransporteTUBValue,
                                                              '3',
                                                            )
                                                            ..instalacaoAntesDezembroDzOito =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownAntesDezTUBValue,
                                                              '3',
                                                            )
                                                            ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .statusDropDownPmtaTUBValue,
                                                              '3',
                                                            )
                                                            ..classeA =
                                                                valueOrDefault<
                                                                    String>(
                                                              (_model.statusDropDownFluidoTUBValue == 'A') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'A2') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'A3') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'A4') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'A5')
                                                                  ? '1'
                                                                  : '0',
                                                              '3',
                                                            )
                                                            ..classeB =
                                                                valueOrDefault<
                                                                    String>(
                                                              (_model.statusDropDownFluidoTUBValue ==
                                                                          'B') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'B2')
                                                                  ? '1'
                                                                  : '0',
                                                              '3',
                                                            )
                                                            ..classeC =
                                                                valueOrDefault<
                                                                    String>(
                                                              (_model.statusDropDownFluidoTUBValue == 'C') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'C2') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'C3')
                                                                  ? '1'
                                                                  : '0',
                                                              '3',
                                                            )
                                                            ..classeD =
                                                                valueOrDefault<
                                                                    String>(
                                                              (_model.statusDropDownFluidoTUBValue ==
                                                                          'D') ||
                                                                      (_model.statusDropDownFluidoTUBValue ==
                                                                          'D1')
                                                                  ? '1'
                                                                  : '0',
                                                              '3',
                                                            )
                                                            ..pressaoZeroCincoMenorZeroUm =
                                                                valueOrDefault<
                                                                    String>(
                                                              (_model.pressaoMPA! >=
                                                                          0.005100139) &&
                                                                      (_model.pressaoMPA! <
                                                                          0.10133)
                                                                  ? '1'
                                                                  : '0',
                                                              '3',
                                                            )
                                                            ..pVMaiorZZZOitoPV =
                                                                (_model.pv! >
                                                                            0.008) &&
                                                                        (_model.pv! <
                                                                            1.0)
                                                                    ? '1'
                                                                    : '0'
                                                            ..pVMaiorIgualUmMenorDoisCincoPV =
                                                                (_model.pv! >=
                                                                            1.0) &&
                                                                        (_model.pv! <
                                                                            2.5)
                                                                    ? '1'
                                                                    : '0'
                                                            ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                                (_model.pv! >=
                                                                            2.5) &&
                                                                        (_model.pv! <
                                                                            30.0)
                                                                    ? '1'
                                                                    : '0'
                                                            ..pVMaiorIgualTrintaMenorCemPV =
                                                                (_model.pv! >=
                                                                            30.0) &&
                                                                        (_model.pv! <
                                                                            100.0)
                                                                    ? '1'
                                                                    : '0'
                                                            ..pVMaiorIgualCemPV =
                                                                _model.pv! >=
                                                                        100.0
                                                                    ? '1'
                                                                    : '0',
                                                        );
                                                      });

                                                      setState(() {});
                                                    },
                                                    text: 'Aplicar',
                                                    options: FFButtonOptions(
                                                      height: 40.0,
                                                      padding:
                                                          EdgeInsetsDirectional
                                                              .fromSTEB(
                                                                  24.0,
                                                                  0.0,
                                                                  24.0,
                                                                  0.0),
                                                      iconPadding:
                                                          EdgeInsetsDirectional
                                                              .fromSTEB(
                                                                  0.0,
                                                                  0.0,
                                                                  0.0,
                                                                  0.0),
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .primary,
                                                      textStyle:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .titleSmall
                                                              .override(
                                                                fontFamily:
                                                                    'Inter',
                                                                color: Colors
                                                                    .white,
                                                                letterSpacing:
                                                                    0.0,
                                                              ),
                                                      elevation: 3.0,
                                                      borderSide: BorderSide(
                                                        color:
                                                            Colors.transparent,
                                                        width: 1.0,
                                                      ),
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              8.0),
                                                    ),
                                                  ),
                                                ),
                                            ],
                                          ),
                                          Row(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              if ((FFAppState()
                                                          .userControleTUBVP
                                                          .pVMaiorZZZOitoPV !=
                                                      '3') &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasRedePublicaDistribuicaoGas() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVPParaOcupacaoHumana() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInterligadaVasoPressaoPRFV() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasTransporteProduto() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasLigadaVasoDiametro() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasConformidadeCodigoProjeto() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasInstalacaoAntesDezembroDzOito() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasClasseA() &&
                                                  FFAppState()
                                                      .userControleTUBVP
                                                      .hasPressaoZeroCincoMenorZeroUm())
                                                FlutterFlowRadioButton(
                                                  options: [
                                                    ' m³',
                                                    'Litros',
                                                    'ft³',
                                                    'USA gal'
                                                  ].toList(),
                                                  onChanged: (val) =>
                                                      setState(() {}),
                                                  controller: _model
                                                          .radioButtonVolumeTUBValueController ??=
                                                      FormFieldController<
                                                          String>(' m³'),
                                                  optionHeight: 30.0,
                                                  textStyle:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .labelMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            letterSpacing: 0.0,
                                                          ),
                                                  selectedTextStyle:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .bodyMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            fontSize: 16.0,
                                                            letterSpacing: 0.0,
                                                          ),
                                                  textPadding:
                                                      EdgeInsetsDirectional
                                                          .fromSTEB(0.0, 0.0,
                                                              10.0, 0.0),
                                                  buttonPosition:
                                                      RadioButtonPosition.left,
                                                  direction: Axis.horizontal,
                                                  radioButtonColor:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .primary,
                                                  inactiveRadioButtonColor:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .secondaryText,
                                                  toggleable: false,
                                                  horizontalAlignment:
                                                      WrapAlignment.start,
                                                  verticalAlignment:
                                                      WrapCrossAlignment.start,
                                                ),
                                            ].divide(SizedBox(width: 15.0)),
                                          ),
                                        ],
                                      ),
                                      if ((FFAppState()
                                                  .userControleTUBVP
                                                  .pVMaiorZZZOitoPV !=
                                              '3') &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasRedePublicaDistribuicaoGas() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasInterligadaVPParaOcupacaoHumana() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasInterligadaVasoPressaoPRFV() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasTransporteProduto() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasLigadaVasoDiametro() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasConformidadeCodigoProjeto() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasInstalacaoAntesDezembroDzOito() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasClasseA() &&
                                          FFAppState()
                                              .userControleTUBVP
                                              .hasPressaoZeroCincoMenorZeroUm())
                                        Text(
                                          '${valueOrDefault<String>(
                                            _model.volumeMcubico?.toString(),
                                            '0',
                                          )} m³',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                fontSize: 16.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.w600,
                                              ),
                                        ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.stretch,
                                        children: [
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0.0, 0.0, 0.0, 40.0),
                                            child: Row(
                                              mainAxisSize: MainAxisSize.max,
                                              children: [
                                                if ((FFAppState()
                                                            .userControleTUBVP
                                                            .pVMaiorZZZOitoPV !=
                                                        '3') &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasRedePublicaDistribuicaoGas() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasInterligadaVPParaOcupacaoHumana() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasInterligadaVasoPressaoPRFV() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasTransporteProduto() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasLigadaVasoDiametro() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasConformidadeCodigoProjeto() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasInstalacaoAntesDezembroDzOito() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasClasseA() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasPressaoZeroCincoMenorZeroUm())
                                                  Text(
                                                    'P.V (MPa.m3):',
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.w600,
                                                        ),
                                                  ),
                                                if ((FFAppState()
                                                            .userControleTUBVP
                                                            .pVMaiorZZZOitoPV !=
                                                        '3') &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasRedePublicaDistribuicaoGas() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasInterligadaVPParaOcupacaoHumana() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasInterligadaVasoPressaoPRFV() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasTransporteProduto() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasLigadaVasoDiametro() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasConformidadeCodigoProjeto() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasInstalacaoAntesDezembroDzOito() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasClasseA() &&
                                                    FFAppState()
                                                        .userControleTUBVP
                                                        .hasPressaoZeroCincoMenorZeroUm())
                                                  Text(
                                                    valueOrDefault<String>(
                                                      _model.pv?.toString(),
                                                      '0',
                                                    ).maybeHandleOverflow(
                                                        maxChars: 5),
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                              ].divide(SizedBox(width: 10.0)),
                                            ),
                                          ),
                                        ],
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .temperaturaMenor0C !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPVMaiorZZZOitoPV())
                                            Text(
                                              'Temperatura de operação menor que 0°C?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleTUBVP
                                                      .temperaturaMenor0C !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPVMaiorZZZOitoPV())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTemperaturaTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTemperaturaTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTemperaturaTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownEvidenciaTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..temperaturaMenor0C =
                                                            _model
                                                                .statusDropDownTemperaturaTUBValue
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPTempp =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPTempp!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPTempp =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPTempp
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPTempp =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPTempp
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model.addTUBVPTempp!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPlasticoReforTUBValue,
                                                          '3',
                                                        )
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSubmarinoTUBValue,
                                                          '3',
                                                        )
                                                        ..ligadaVasoDiametro =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownDiametroTUBValue,
                                                          '3',
                                                        )
                                                        ..conformidadeCodigoProjeto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownConfCodigoTUBValue,
                                                          '3',
                                                        )
                                                        ..transporteProduto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTransporteTUBValue,
                                                          '3',
                                                        )
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezTUBValue,
                                                          '3',
                                                        )
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaTUBValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'D') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'D1')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoMPA! >=
                                                                      0.005100139) &&
                                                                  (_model.pressaoMPA! <
                                                                      0.10133)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            _model
                                                                .statusDropDownTemperaturaTUBValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleTUBVP.semEvidenciaDeterioracao !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTemperaturaMenor0C())
                                            Text(
                                              'Sem evidência de deterioração?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleTUBVP.semEvidenciaDeterioracao !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTemperaturaMenor0C())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownEvidenciaTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownEvidenciaTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownEvidenciaTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCatalisadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..semEvidenciaDeterioracao =
                                                            _model
                                                                .statusDropDownEvidenciaTUBValue
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPEvidencias =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPEvidencias!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPEvidencias =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPEvidencias
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPEvidencias =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPEvidencias
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model
                                                            .addTUBVPEvidencias!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPlasticoReforTUBValue,
                                                          '3',
                                                        )
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSubmarinoTUBValue,
                                                          '3',
                                                        )
                                                        ..ligadaVasoDiametro =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownDiametroTUBValue,
                                                          '3',
                                                        )
                                                        ..conformidadeCodigoProjeto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownConfCodigoTUBValue,
                                                          '3',
                                                        )
                                                        ..transporteProduto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTransporteTUBValue,
                                                          '3',
                                                        )
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezTUBValue,
                                                          '3',
                                                        )
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaTUBValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'D') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'D1')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoMPA! >=
                                                                      0.005100139) &&
                                                                  (_model.pressaoMPA! <
                                                                      0.10133)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTemperaturaTUBValue,
                                                          '3',
                                                        )
                                                        ..semEvidenciaDeterioracao =
                                                            _model
                                                                .statusDropDownEvidenciaTUBValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleTUBVP.enchInternoEOUCatalisador !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasSemEvidenciaDeterioracao())
                                            Text(
                                              'Enchimento interno e/ou catalisador?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleTUBVP.enchInternoEOUCatalisador !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasSemEvidenciaDeterioracao())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCatalisadorTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCatalisadorTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCatalisadorTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..enchInternoEOUCatalisador =
                                                            _model
                                                                .statusDropDownCatalisadorTUBValue
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPCatalis =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPCatalis!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPCatalis =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPCatalis
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPCatalis =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPCatalis
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model.addTUBVPCatalis!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPlasticoReforTUBValue,
                                                          '3',
                                                        )
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSubmarinoTUBValue,
                                                          '3',
                                                        )
                                                        ..ligadaVasoDiametro =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownDiametroTUBValue,
                                                          '3',
                                                        )
                                                        ..conformidadeCodigoProjeto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownConfCodigoTUBValue,
                                                          '3',
                                                        )
                                                        ..transporteProduto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTransporteTUBValue,
                                                          '3',
                                                        )
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezTUBValue,
                                                          '3',
                                                        )
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaTUBValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'D') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'D1')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoMPA! >=
                                                                      0.005100139) &&
                                                                  (_model.pressaoMPA! <
                                                                      0.10133)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTemperaturaTUBValue,
                                                          '3',
                                                        )
                                                        ..semEvidenciaDeterioracao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEvidenciaTUBValue,
                                                          '3',
                                                        )
                                                        ..enchInternoEOUCatalisador =
                                                            _model
                                                                .statusDropDownCatalisadorTUBValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleTUBVP.estudoAbonadorInspecaoInternaDif !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEnchInternoEOUCatalisador())
                                            Text(
                                              'Estudo abonador para inspeção interna diferenciada?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleTUBVP.estudoAbonadorInspecaoInternaDif !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEnchInternoEOUCatalisador())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownEstudoAbandonadorTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownEstudoAbandonadorTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownEstudoAbandonadorTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownServicoProprioSpieTUBValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            _model
                                                                .statusDropDownEstudoAbandonadorTUBValue
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPEstudo =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPEstudo!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPEstudo =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPEstudo
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPEstudo =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPEstudo
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model.addTUBVPEstudo!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPlasticoReforTUBValue,
                                                          '3',
                                                        )
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSubmarinoTUBValue,
                                                          '3',
                                                        )
                                                        ..ligadaVasoDiametro =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownDiametroTUBValue,
                                                          '3',
                                                        )
                                                        ..conformidadeCodigoProjeto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownConfCodigoTUBValue,
                                                          '3',
                                                        )
                                                        ..transporteProduto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTransporteTUBValue,
                                                          '3',
                                                        )
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezTUBValue,
                                                          '3',
                                                        )
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaTUBValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'D') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'D1')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoMPA! >=
                                                                      0.005100139) &&
                                                                  (_model.pressaoMPA! <
                                                                      0.10133)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTemperaturaTUBValue,
                                                          '3',
                                                        )
                                                        ..semEvidenciaDeterioracao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEvidenciaTUBValue,
                                                          '3',
                                                        )
                                                        ..enchInternoEOUCatalisador =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCatalisadorTUBValue,
                                                          '3',
                                                        )
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            _model
                                                                .statusDropDownEstudoAbandonadorTUBValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleTUBVP.sPIEServicoPropInspecaoEquip !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEstudoAbonadorInspecaoInternaDif())
                                            Text(
                                              ' Serviço Próprio de Inspeção de Equipamento - SPIE?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleTUBVP.sPIEServicoPropInspecaoEquip !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEstudoAbonadorInspecaoInternaDif())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownServicoProprioSpieTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownServicoProprioSpieTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownServicoProprioSpieTUBValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownAmpliPorgTUBValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            _model
                                                                .statusDropDownServicoProprioSpieTUBValue
                                                        ..ampliacaoProgramaPLH =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPSpie =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPSpie!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTUBVPSpie =
                                                      await actions
                                                          .keysToUpdateTUBVP(
                                                    _model
                                                        .retornoAceitosTUBVPSpie
                                                        ?.toList(),
                                                  );
                                                  _model.addTUBVPSpie =
                                                      await actions.addNATUBVP(
                                                    _model
                                                        .keysToUpdateReturnTUBVPSpie
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleTUBVP =
                                                        _model.addTUBVPSpie!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..redePublicaDistribuicaoGas =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownRedePubTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPParaOcupacaoHumana =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownOcupacaoTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVPSistemaAuxiliarMaquina =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSistemaAuxiliarTUBValue,
                                                          '3',
                                                        )
                                                        ..interligadaVasoPressaoPRFV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPlasticoReforTUBValue,
                                                          '3',
                                                        )
                                                        ..equipamentoSubmarinoExploracaoProducaoPetroleo =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownSubmarinoTUBValue,
                                                          '3',
                                                        )
                                                        ..ligadaVasoDiametro =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownDiametroTUBValue,
                                                          '3',
                                                        )
                                                        ..conformidadeCodigoProjeto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownConfCodigoTUBValue,
                                                          '3',
                                                        )
                                                        ..transporteProduto =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTransporteTUBValue,
                                                          '3',
                                                        )
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezTUBValue,
                                                          '3',
                                                        )
                                                        ..possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaTUBValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoTUBValue ==
                                                                      'D') ||
                                                                  (_model.statusDropDownFluidoTUBValue ==
                                                                      'D1')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorZeroUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoMPA! >=
                                                                      0.005100139) &&
                                                                  (_model.pressaoMPA! <
                                                                      0.10133)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTemperaturaTUBValue,
                                                          '3',
                                                        )
                                                        ..semEvidenciaDeterioracao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEvidenciaTUBValue,
                                                          '3',
                                                        )
                                                        ..enchInternoEOUCatalisador =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCatalisadorTUBValue,
                                                          '3',
                                                        )
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEstudoAbandonadorTUBValue,
                                                          '3',
                                                        )
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            _model
                                                                .statusDropDownServicoProprioSpieTUBValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleTUBVP.ampliacaoProgramaPLH !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEstudoAbonadorInspecaoInternaDif() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasSPIEServicoPropInspecaoEquip())
                                            Text(
                                              'Ampliação por Programa de PLH?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleTUBVP.ampliacaoProgramaPLH !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasRedePublicaDistribuicaoGas() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPParaOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVPSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInterligadaVasoPressaoPRFV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEquipamentoSubmarinoExploracaoProducaoPetroleo() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasLigadaVasoDiametro() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPossibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPressaoZeroCincoMenorZeroUm() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasEstudoAbonadorInspecaoInternaDif() &&
                                              FFAppState()
                                                  .userControleTUBVP
                                                  .hasSPIEServicoPropInspecaoEquip())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownAmpliPorgTUBValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownAmpliPorgTUBValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownAmpliPorgTUBValue =
                                                      val);
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleTUBVPStruct(
                                                      (e) => e
                                                        ..ampliacaoProgramaPLH =
                                                            _model
                                                                .statusDropDownAmpliPorgTUBValue,
                                                    );
                                                  });
                                                  _model.retornoAceitosTUBVPAmpliProg =
                                                      await actions
                                                          .atualizaAceitosTUBVP();
                                                  setState(() {
                                                    _model.tubeVpAceitos = _model
                                                        .retornoAceitosTUBVPAmpliProg!
                                                        .toList()
                                                        .cast<TubVpNrStruct>();
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      if (_model.tubeVpAceitos.length == 1)
                                        Text(
                                          _model.tubeVpAceitos.first.codigo,
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      if ((_model.vpAceitos.length == 0) &&
                                          FFAppState()
                                              .userControleVp
                                              .hasINIConformTrzCincoQuatCincoTresInspecNIntru())
                                        Text(
                                          'Código não encontrado! Reveja suas respostas.',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      Row(
                                        mainAxisSize: MainAxisSize.max,
                                        mainAxisAlignment:
                                            MainAxisAlignment.end,
                                        children: [
                                          FFButtonWidget(
                                            onPressed: () async {
                                              setState(() {
                                                FFAppState()
                                                        .aplicabilidadeCreating =
                                                    false;
                                                FFAppState()
                                                        .createAplicabilidadeTUBVP =
                                                    null;
                                              });
                                              setState(() {
                                                FFAppState().userControleTUBVP =
                                                    TubVpNrStruct();
                                              });
                                              setState(() {
                                                _model
                                                    .statusDropDownOutrosValueController1
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController2
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController3
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController4
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController5
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController6
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController7
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController8
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController9
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController10
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController11
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController12
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController13
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController14
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController15
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESMetalicoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESDiametroMaiorrValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESVinteMIlValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESEnterradoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPernasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESSapatasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPedestaisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESSelasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESEmbarcacaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESNavioValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPlataformaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESFluidoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDVolumeTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDPressaoMaiorZeroUmTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDPressaoDzNoveTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSpieTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAlcalisTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDTesteSegurancaTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDBarreiraSisTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSgcCombustaoTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAguaTratadaTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDFluidoTermicoTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDProgramaPlhTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDVolumeValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSpieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAlcalisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDTesteSegurancaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDBarreiraSisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSgcCombustaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAguaTratadaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDFluidoTermicoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownRedePubTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOcupacaoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSistemaAuxiliarTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPlasticoReforTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTransporteTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSubmarinoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownDiametroTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfCodigoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAntesDezTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPmtaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFluidoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTemperaturaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEvidenciaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCatalisadorTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownServicoProprioSpieTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEstudoAbandonadorTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAmpliPorgTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOcupacaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSistemaAuxiliarValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPlasticoReforValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTransporteValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSubmarinoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownDiametroValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfCodigoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAntesDezValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPmtaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFluidoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTemperaturaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEvidenciaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCatalisadorValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEstudoAbandonadorValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFabSerieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownValvulaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownServicoProprioSpieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfInnValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownInmetroValueController
                                                    ?.reset();
                                              });
                                              setState(() {
                                                _model.showAvaliacaoVP = false;
                                                _model.showAvaliacaoTUBVP =
                                                    false;
                                                _model.showAvaliacaoTANQUES =
                                                    false;
                                                _model.showAvaliacaoCALDEIRAS =
                                                    false;
                                                _model.showAvaliacaoTUBCALDEIRAS =
                                                    false;
                                                _model.showAvaliacaoOUTROS =
                                                    false;
                                              });
                                              setState(() {
                                                FFAppState()
                                                        .editiAplicabilidadeNR13 =
                                                    false;
                                              });

                                              context.goNamed('Equipamentos');
                                            },
                                            text: 'Cancelar',
                                            options: FFButtonOptions(
                                              height: 40.0,
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      24.0, 0.0, 24.0, 0.0),
                                              iconPadding: EdgeInsetsDirectional
                                                  .fromSTEB(0.0, 0.0, 0.0, 0.0),
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondary,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .titleSmall
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color: Colors.white,
                                                        letterSpacing: 0.0,
                                                      ),
                                              elevation: 3.0,
                                              borderSide: BorderSide(
                                                color: Colors.transparent,
                                                width: 1.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                          FFButtonWidget(
                                            onPressed: ((_model.tubeVpAceitos
                                                            .length >
                                                        1) ||
                                                    (_model.statusDropDownRedePubTUBValue ==
                                                            null ||
                                                        _model.statusDropDownRedePubTUBValue ==
                                                            ''))
                                                ? null
                                                : () async {
                                                    if (FFAppState()
                                                            .userControleTUBVP
                                                            .classeA ==
                                                        '1') {
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) <
                                                          1.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '3';
                                                          _model.grupoRiscoFluido =
                                                              '5';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              1.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              2.5)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '3';
                                                          _model.grupoRiscoFluido =
                                                              '4';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              2.5) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              30.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '2';
                                                          _model.grupoRiscoFluido =
                                                              '3';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              30.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              100.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '1';
                                                          _model.grupoRiscoFluido =
                                                              '2';
                                                        });
                                                      }
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) >=
                                                          100.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '1';
                                                          _model.grupoRiscoFluido =
                                                              '1';
                                                        });
                                                      }
                                                    }
                                                    if (FFAppState()
                                                            .userControleTUBVP
                                                            .classeB ==
                                                        '1') {
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) <
                                                          1.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '4';
                                                          _model.grupoRiscoFluido =
                                                              '5';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              1.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              2.5)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '4';
                                                          _model.grupoRiscoFluido =
                                                              '4';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              2.5) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              30.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '3';
                                                          _model.grupoRiscoFluido =
                                                              '3';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              30.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              100.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '2';
                                                          _model.grupoRiscoFluido =
                                                              '2';
                                                        });
                                                      }
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) >=
                                                          100.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '1';
                                                          _model.grupoRiscoFluido =
                                                              '1';
                                                        });
                                                      }
                                                    }
                                                    if (FFAppState()
                                                            .userControleTUBVP
                                                            .classeC ==
                                                        '1') {
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) <
                                                          1.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '5';
                                                          _model.grupoRiscoFluido =
                                                              '5';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              1.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              2.5)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '4';
                                                          _model.grupoRiscoFluido =
                                                              '4';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              2.5) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              30.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '3';
                                                          _model.grupoRiscoFluido =
                                                              '3';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              30.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              100.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '2';
                                                          _model.grupoRiscoFluido =
                                                              '2';
                                                        });
                                                      }
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) >=
                                                          100.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '1';
                                                          _model.grupoRiscoFluido =
                                                              '1';
                                                        });
                                                      }
                                                    }
                                                    if (FFAppState()
                                                            .userControleTUBVP
                                                            .classeD ==
                                                        '1') {
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) <
                                                          1.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '5';
                                                          _model.grupoRiscoFluido =
                                                              '5';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              1.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              2.5)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '5';
                                                          _model.grupoRiscoFluido =
                                                              '4';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              2.5) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              30.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '4';
                                                          _model.grupoRiscoFluido =
                                                              '3';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              30.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              100.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '3';
                                                          _model.grupoRiscoFluido =
                                                              '2';
                                                        });
                                                      }
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) >=
                                                          100.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '2';
                                                          _model.grupoRiscoFluido =
                                                              '1';
                                                        });
                                                      }
                                                    }
                                                    _model.retornoPeriodicidadeTUBVP =
                                                        await queryPeriodicidadeTubVpRecordOnce(
                                                      queryBuilder:
                                                          (periodicidadeTubVpRecord) =>
                                                              periodicidadeTubVpRecord
                                                                  .where(
                                                        'Codigo',
                                                        isEqualTo: _model
                                                            .tubeVpAceitos
                                                            .first
                                                            .codigo,
                                                      ),
                                                      singleRecord: true,
                                                    ).then((s) =>
                                                            s.firstOrNull);

                                                    await AplicabilidadeTubVPRecord
                                                        .collection
                                                        .doc()
                                                        .set(
                                                            createAplicabilidadeTubVPRecordData(
                                                          transporteProduto:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .transporteProduto,
                                                          conformidadeCodigoProjeto:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .conformidadeCodigoProjeto,
                                                          instalacaoAntesDezembroDzOito:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .instalacaoAntesDezembroDzOito,
                                                          classeA: FFAppState()
                                                              .userControleTUBVP
                                                              .classeA,
                                                          classeC: FFAppState()
                                                              .userControleTUBVP
                                                              .classeB,
                                                          classeD: FFAppState()
                                                              .userControleTUBVP
                                                              .classeA,
                                                          pVMaiorZZZOitoPV: FFAppState()
                                                              .userControleTUBVP
                                                              .pVMaiorZZZOitoPV,
                                                          pVMaiorIgualUmMenorDoisCincoPV:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .pVMaiorIgualUmMenorDoisCincoPV,
                                                          pVMaiorIgualDoisCincoMenorTrintaPV:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .pVMaiorIgualDoisCincoMenorTrintaPV,
                                                          pVMaiorIgualTrintaMenorCemPV:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .pVMaiorIgualTrintaMenorCemPV,
                                                          pVMaiorIgualCemPV:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .pVMaiorIgualCemPV,
                                                          temperaturaMenor0C:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .temperaturaMenor0C,
                                                          semEvidenciaDeterioracao:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .semEvidenciaDeterioracao,
                                                          enchInternoEOUCatalisador:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .enchInternoEOUCatalisador,
                                                          estudoAbonadorInspecaoInternaDif:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .estudoAbonadorInspecaoInternaDif,
                                                          sPIEServicoPropInspecaoEquip:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .sPIEServicoPropInspecaoEquip,
                                                          codigo: _model
                                                              .tubeVpAceitos
                                                              .first
                                                              .codigo,
                                                          classeB: FFAppState()
                                                              .userControleTUBVP
                                                              .classeB,
                                                          potencialDeRisco: _model
                                                              .grupoRiscoFluido,
                                                          categoria: _model
                                                              .categoriaFluido,
                                                          equipamento: FFAppState()
                                                              .equipamentoAplicabilidade,
                                                          tipoEquipamento:
                                                              FFAppState()
                                                                  .tipoEquipAplicabilidade,
                                                          avaliador:
                                                              currentUserDisplayName,
                                                          dataCadEquipamento:
                                                              FFAppState()
                                                                  .dataCadEquipAplicabilidade
                                                                  ?.toString(),
                                                          contrato: FFAppState()
                                                              .contrato,
                                                          redePublicaDistribuicaoGas:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .redePublicaDistribuicaoGas,
                                                          interligadaVPParaOcupacaoHumana:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .interligadaVPParaOcupacaoHumana,
                                                          interligadaVPSistemaAuxiliarMaquina:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .interligadaVPSistemaAuxiliarMaquina,
                                                          interligadaVasoPressaoPRFV:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .interligadaVasoPressaoPRFV,
                                                          equipamentoSubmarinoExploracaoProducaoPetroleo:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .equipamentoSubmarinoExploracaoProducaoPetroleo,
                                                          ligadaVasoDiametro:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .ligadaVasoDiametro,
                                                          possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido,
                                                          pressaoZeroCincoMenorZeroUm:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .pressaoZeroCincoMenorZeroUm,
                                                          ampliacaoProgramaPLH:
                                                              FFAppState()
                                                                  .userControleTUBVP
                                                                  .ampliacaoProgramaPLH,
                                                          causa: FFAppState()
                                                              .userControleTUBVP
                                                              .causa,
                                                          descricaoEquipamento:
                                                              FFAppState()
                                                                  .descriccaoEquipAplicabilidade,
                                                          tagEquipamento:
                                                              FFAppState()
                                                                  .tagEquipAplicabilidade,
                                                          createdTime:
                                                              getCurrentTimestamp
                                                                  .toString(),
                                                          inspecaoExterna: _model
                                                              .retornoPeriodicidadeTUBVP
                                                              ?.externa,
                                                          observacao: _model
                                                              .retornoPeriodicidadeTUBVP
                                                              ?.observacao,
                                                          fluido: () {
                                                            if (_model
                                                                    .statusDropDownFluidoTUBValue ==
                                                                'A') {
                                                              return 'Combustível & Temperatura de Operação ≥ 200°C';
                                                            } else if (_model
                                                                    .statusDropDownFluidoTUBValue ==
                                                                'A2') {
                                                              return 'H2 - Hidrogênio';
                                                            } else if (_model
                                                                    .statusDropDownFluidoTUBValue ==
                                                                'A3') {
                                                              return 'C2H2 - Acetileno';
                                                            } else if (_model
                                                                    .statusDropDownFluidoTUBValue ==
                                                                'A4') {
                                                              return 'Tóxico com Limite ≤ 20 ppm';
                                                            } else if (_model
                                                                    .statusDropDownFluidoTUBValue ==
                                                                'B') {
                                                              return 'Combustível & Temperatura de Operação < 200°C';
                                                            } else if (_model
                                                                    .statusDropDownFluidoTUBValue ==
                                                                'B2') {
                                                              return 'Tóxico com Limite > 20 ppm';
                                                            } else if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'D') {
                                                              return 'Não classificado';
                                                            } else if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'A5') {
                                                              return 'Inflamável';
                                                            } else {
                                                              return '-';
                                                            }
                                                          }(),
                                                          pressao: _model
                                                              .pressaoInputTUBTextController
                                                              .text,
                                                          pv: valueOrDefault<
                                                              String>(
                                                            _model.pv
                                                                ?.toString(),
                                                            '0',
                                                          ),
                                                        ));

                                                    await FFAppState()
                                                        .createAplicabilidadeTUBVP!
                                                        .update(
                                                            createEquipamentosRecordData(
                                                          codigo: _model
                                                              .tubeVpAceitos
                                                              .first
                                                              .codigo,
                                                          interna: '0',
                                                          externa:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeTUBVP
                                                                ?.externa,
                                                            '0',
                                                          ),
                                                        ));
                                                    setState(() {
                                                      FFAppState()
                                                              .aplicabilidadeCreating =
                                                          false;
                                                      FFAppState()
                                                              .createAplicabilidadeTUBVP =
                                                          null;
                                                    });
                                                    setState(() {
                                                      FFAppState()
                                                              .userControleTUBVP =
                                                          TubVpNrStruct();
                                                    });

                                                    context.goNamed(
                                                        'Equipamentos');

                                                    setState(() {});
                                                  },
                                            text: 'Salvar',
                                            options: FFButtonOptions(
                                              height: 40.0,
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      24.0, 0.0, 24.0, 0.0),
                                              iconPadding: EdgeInsetsDirectional
                                                  .fromSTEB(0.0, 0.0, 0.0, 0.0),
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .primary,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .titleSmall
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color: Colors.white,
                                                        letterSpacing: 0.0,
                                                      ),
                                              elevation: 3.0,
                                              borderSide: BorderSide(
                                                color: Colors.transparent,
                                                width: 1.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                        ].divide(SizedBox(width: 50.0)),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      if (FFAppState().createAplicabilidadeVP != null)
                        Column(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 12.0, 16.0, 12.0),
                              child: Container(
                                decoration: BoxDecoration(
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryBackground,
                                  borderRadius: BorderRadius.circular(20.0),
                                ),
                                child: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      20.0, 20.0, 20.0, 20.0),
                                  child: Column(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 10.0, 0.0, 0.0),
                                        child: Text(
                                          'VASOS DE PRESSÃO',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .primary,
                                                fontSize: 18.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 30.0, 0.0, 20.0),
                                        child: Column(
                                          mainAxisSize: MainAxisSize.max,
                                          children: [
                                            Row(
                                              mainAxisSize: MainAxisSize.min,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    'Equipamento',
                                                    textAlign: TextAlign.end,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                ),
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    FFAppState()
                                                        .equipamentoAplicabilidade,
                                                    textAlign: TextAlign.start,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                                ),
                                              ].divide(SizedBox(width: 20.0)),
                                            ),
                                            Row(
                                              mainAxisSize: MainAxisSize.min,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    'Tipo de equipamento',
                                                    textAlign: TextAlign.end,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                ),
                                                Container(
                                                  width: () {
                                                    if (MediaQuery.sizeOf(
                                                                context)
                                                            .width <
                                                        kBreakpointSmall) {
                                                      return 150.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointMedium) {
                                                      return 390.0;
                                                    } else if (MediaQuery
                                                                .sizeOf(context)
                                                            .width <
                                                        kBreakpointLarge) {
                                                      return 390.0;
                                                    } else {
                                                      return 390.0;
                                                    }
                                                  }(),
                                                  decoration: BoxDecoration(),
                                                  child: Text(
                                                    FFAppState()
                                                        .tipoEquipAplicabilidade,
                                                    textAlign: TextAlign.start,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                                ),
                                              ].divide(SizedBox(width: 20.0)),
                                            ),
                                          ].divide(SizedBox(height: 10.0)),
                                        ),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Para ocupação humana?',
                                            style: FlutterFlowTheme.of(context)
                                                .bodyMedium
                                                .override(
                                                  fontFamily: 'Inter',
                                                  fontSize: 16.0,
                                                  letterSpacing: 0.0,
                                                  fontWeight: FontWeight.w600,
                                                ),
                                          ),
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0.0, 0.0, 0.0, 25.0),
                                            child: FlutterFlowDropDown<String>(
                                              controller: _model
                                                      .statusDropDownOcupacaoValueController ??=
                                                  FormFieldController<String>(
                                                _model.statusDropDownOcupacaoValue ??=
                                                    '',
                                              ),
                                              options:
                                                  List<String>.from(['1', '0']),
                                              optionLabels: ['Sim', 'Não'],
                                              onChanged: (val) async {
                                                setState(() => _model
                                                        .statusDropDownOcupacaoValue =
                                                    val);
                                                setState(() {
                                                  _model
                                                      .statusDropDownSistemaAuxiliarValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownPlasticoReforValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTransporteValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownSubmarinoValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownDiametroValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownConfCodigoValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownAntesDezValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownFluidoValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownPmtaValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownTemperaturaValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownCatalisadorValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownEvidenciaValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownEstudoAbandonadorValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownInmetroValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownFabSerieValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownValvulaValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownServicoProprioSpieValueController
                                                      ?.reset();
                                                  _model
                                                      .statusDropDownConfInnValueController
                                                      ?.reset();
                                                });
                                                setState(() {
                                                  _model
                                                      .volumeInputTextController
                                                      ?.clear();
                                                  _model
                                                      .pressaoInputTextController
                                                      ?.clear();
                                                });
                                                setState(() {
                                                  _model.pressaoKGF = 0.0;
                                                  _model.volumeMcubico = 0.0;
                                                  _model.pv = 0.0;
                                                  _model.pressaoMPA = null;
                                                });
                                                setState(() {
                                                  FFAppState()
                                                      .updateUserControleVpStruct(
                                                    (e) => e
                                                      ..ocupacaoHumana = _model
                                                          .statusDropDownOcupacaoValue
                                                      ..sistemaAuxiliarMaquina =
                                                          null
                                                      ..plasticoReforcado = null
                                                      ..transporteProduto = null
                                                      ..submarinoExploracaoProducao =
                                                          null
                                                      ..diametroInterno = null
                                                      ..conformidadeCodigoProjeto =
                                                          null
                                                      ..instalacaoAntesDezembroDzOito =
                                                          null
                                                      ..possReconstMemCalcPMTA =
                                                          null
                                                      ..classeA = null
                                                      ..classeB = null
                                                      ..classeC = null
                                                      ..classeD = null
                                                      ..pressaoZeroCincoMenorUm =
                                                          null
                                                      ..pVMaiorZZZOitoPV = null
                                                      ..pVMaiorIgualUmMenorDoisCincoPV =
                                                          null
                                                      ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                          null
                                                      ..pVMaiorIgualTrintaMenorCemPV =
                                                          null
                                                      ..pVMaiorIgualCemPV = null
                                                      ..temperaturaMenor0C =
                                                          null
                                                      ..semEvidenciaDeterioracao =
                                                          null
                                                      ..enchInternoEOUCatalisador =
                                                          null
                                                      ..estudoAbonadorInspecaoInternaDif =
                                                          null
                                                      ..fabricacaoSerie = null
                                                      ..certificadoINMETRO =
                                                          null
                                                      ..valvulasSegurCalibradasFab =
                                                          null
                                                      ..sPIEServicoPropInspecaoEquip =
                                                          null
                                                      ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                          null,
                                                  );
                                                });
                                                _model.retornoAceitos =
                                                    await actions
                                                        .atualizaAceitosVP();
                                                setState(() {
                                                  _model.vpAceitos = _model
                                                      .retornoAceitos!
                                                      .toList()
                                                      .cast<VpNrStruct>();
                                                });
                                                _model.keysToUpdateReturn =
                                                    await actions.keysToUpdate(
                                                  _model.retornoAceitos
                                                      ?.toList(),
                                                );
                                                _model.add =
                                                    await actions.addNA(
                                                  _model.keysToUpdateReturn
                                                      ?.toList(),
                                                );
                                                setState(() {
                                                  FFAppState().userControleVp =
                                                      _model.add!;
                                                });
                                                setState(() {
                                                  FFAppState()
                                                      .updateUserControleVpStruct(
                                                    (e) => e
                                                      ..ocupacaoHumana = _model
                                                          .statusDropDownOcupacaoValue,
                                                  );
                                                });

                                                setState(() {});
                                              },
                                              width: MediaQuery.sizeOf(context)
                                                      .width *
                                                  1.0,
                                              height: 50.0,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                      ),
                                              hintText: 'Selecione',
                                              icon: Icon(
                                                Icons
                                                    .keyboard_arrow_down_rounded,
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryText,
                                                size: 24.0,
                                              ),
                                              fillColor:
                                                  FlutterFlowTheme.of(context)
                                                      .secondaryBackground,
                                              elevation: 2.0,
                                              borderColor:
                                                  FlutterFlowTheme.of(context)
                                                      .alternate,
                                              borderWidth: 2.0,
                                              borderRadius: 8.0,
                                              margin: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      16.0, 4.0, 16.0, 4.0),
                                              hidesUnderline: true,
                                              isOverButton: true,
                                              isSearchable: false,
                                              isMultiSelect: false,
                                            ),
                                          ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .sistemaAuxiliarMaquina !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana())
                                            Text(
                                              'Parte de sistema auxiliar de máquina?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .sistemaAuxiliarMaquina !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownSistemaAuxiliarValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownSistemaAuxiliarValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownSistemaAuxiliarValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownPlasticoReforValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTransporteValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownSubmarinoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownDiametroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfCodigoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAntesDezValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .volumeInputTextController
                                                        ?.clear();
                                                    _model
                                                        .pressaoInputTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado =
                                                            null
                                                        ..transporteProduto =
                                                            null
                                                        ..submarinoExploracaoProducao =
                                                            null
                                                        ..diametroInterno = null
                                                        ..conformidadeCodigoProjeto =
                                                            null
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possReconstMemCalcPMTA =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosSistemaAux =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosSistemaAux!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnSistemaAux =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model
                                                        .retornoAceitosSistemaAux
                                                        ?.toList(),
                                                  );
                                                  _model.addSistemaAux =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnSistemaAux
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addSistemaAux!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .plasticoReforcado !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina())
                                            Text(
                                              'De plástico reforçado de fibra de vidro - PRFV?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .plasticoReforcado !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownPlasticoReforValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownPlasticoReforValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownPlasticoReforValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTransporteValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownSubmarinoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownDiametroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfCodigoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAntesDezValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .volumeInputTextController
                                                        ?.clear();
                                                    _model
                                                        .pressaoInputTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto =
                                                            null
                                                        ..submarinoExploracaoProducao =
                                                            null
                                                        ..diametroInterno = null
                                                        ..conformidadeCodigoProjeto =
                                                            null
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possReconstMemCalcPMTA =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosPlastico =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosPlastico!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnPlastico =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model
                                                        .retornoAceitosPlastico
                                                        ?.toList(),
                                                  );
                                                  _model.addPlastico =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnPlastico
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addPlastico!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .transporteProduto !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado())
                                            Text(
                                              'Para transporte de produto?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .transporteProduto !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTransporteValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTransporteValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTransporteValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownSubmarinoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownDiametroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfCodigoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAntesDezValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .volumeInputTextController
                                                        ?.clear();
                                                    _model
                                                        .pressaoInputTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            null
                                                        ..diametroInterno = null
                                                        ..conformidadeCodigoProjeto =
                                                            null
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possReconstMemCalcPMTA =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTransporte =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosTransporte!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTransporte =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model
                                                        .retornoAceitosTransporte
                                                        ?.toList(),
                                                  );
                                                  _model.addTransporte =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnTransporte
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addTransporte!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .submarinoExploracaoProducao !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto())
                                            Text(
                                              'Equipamento submarino para exploração e produção de petróleo?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .submarinoExploracaoProducao !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownSubmarinoValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownSubmarinoValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownSubmarinoValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownDiametroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfCodigoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAntesDezValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .volumeInputTextController
                                                        ?.clear();
                                                    _model
                                                        .pressaoInputTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = null
                                                        ..conformidadeCodigoProjeto =
                                                            null
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possReconstMemCalcPMTA =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosSubmarino =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosSubmarino!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnSubmarino =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model
                                                        .retornoAceitosSubmarino
                                                        ?.toList(),
                                                  );
                                                  _model.addSubmarino =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnSubmarino
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addSubmarino!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .diametroInterno !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao())
                                            Text(
                                              'Diâmentro interno menor que 150mm?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .diametroInterno !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownDiametroValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownDiametroValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownDiametroValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownConfCodigoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownAntesDezValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .volumeInputTextController
                                                        ?.clear();
                                                    _model
                                                        .pressaoInputTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            null
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possReconstMemCalcPMTA =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosDiametro =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosDiametro!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnDiametro =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model
                                                        .retornoAceitosDiametro
                                                        ?.toList(),
                                                  );
                                                  _model.addDiametro =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnDiametro
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addDiametro!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .conformidadeCodigoProjeto !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno())
                                            Text(
                                              'Em conformidade com o código do projeto?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .conformidadeCodigoProjeto !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownConfCodigoValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownConfCodigoValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownConfCodigoValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownAntesDezValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .volumeInputTextController
                                                        ?.clear();
                                                    _model
                                                        .pressaoInputTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            null
                                                        ..possReconstMemCalcPMTA =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosConfCodigo =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosConfCodigo!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnConfCodigo =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model
                                                        .retornoAceitosConfCodigo
                                                        ?.toList(),
                                                  );
                                                  _model.addConfCodigo =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnConfCodigo
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addConfCodigo!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .instalacaoAntesDezembroDzOito !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto())
                                            Text(
                                              'Instalação feita antes de 18 de dezembro de 2018?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .instalacaoAntesDezembroDzOito !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownAntesDezValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownAntesDezValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownAntesDezValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownPmtaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .volumeInputTextController
                                                        ?.clear();
                                                    _model
                                                        .pressaoInputTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..instalacaoAntesDezembroDzOito =
                                                            _model
                                                                .statusDropDownAntesDezValue
                                                        ..possReconstMemCalcPMTA =
                                                            null
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosInstalacaoDez =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosInstalacaoDez!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnInstalacaoDez =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model
                                                        .retornoAceitosInstalacaoDez
                                                        ?.toList(),
                                                  );
                                                  _model.addInstalacaoDez =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnInstalacaoDez
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model
                                                            .addInstalacaoDez!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            _model
                                                                .statusDropDownAntesDezValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .possReconstMemCalcPMTA !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito())
                                            Text(
                                              'Possibilidade de reconstrução da memória de cálculo da PMTA sgundo código reconhecido?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .possReconstMemCalcPMTA !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownPmtaValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownPmtaValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownPmtaValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownFluidoValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownTemperaturaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .volumeInputTextController
                                                        ?.clear();
                                                    _model
                                                        .pressaoInputTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..possReconstMemCalcPMTA =
                                                            _model
                                                                .statusDropDownPmtaValue
                                                        ..classeA = null
                                                        ..classeB = null
                                                        ..classeC = null
                                                        ..classeD = null
                                                        ..pressaoZeroCincoMenorUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosPmta =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosPmta!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnPmta =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model.retornoAceitosPmta
                                                        ?.toList(),
                                                  );
                                                  _model.addInstalacaoPmta =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnPmta
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model
                                                            .addInstalacaoPmta!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezValue,
                                                          '3',
                                                        )
                                                        ..possReconstMemCalcPMTA =
                                                            _model
                                                                .statusDropDownPmtaValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if (((FFAppState()
                                                          .userControleVp
                                                          .classeA !=
                                                      '3') ||
                                                  (FFAppState()
                                                          .userControleVp
                                                          .classeB !=
                                                      '3') ||
                                                  (FFAppState()
                                                          .userControleVp
                                                          .classeC !=
                                                      '3') ||
                                                  (FFAppState()
                                                          .userControleVp
                                                          .classeD !=
                                                      '3')) &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA())
                                            Text(
                                              'Flúido: (classe)',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .classeA !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownFluidoValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownFluidoValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from([
                                                  'A',
                                                  'A2',
                                                  'A3',
                                                  'A4',
                                                  'B1',
                                                  'B2',
                                                  'C',
                                                  'C2',
                                                  'C3',
                                                  'D',
                                                  'A5'
                                                ]),
                                                optionLabels: [
                                                  'Combustível & Temperatura de Operação ≥ 200°C',
                                                  'H2 - Hidrogênio',
                                                  'C2H2 - Acetileno',
                                                  'Tóxico com Limite ≤ 20 ppm',
                                                  'Combustível & Temperatura de Operação < 200°C',
                                                  'Tóxico com Limite > 20 ppm',
                                                  'Ar comprimido',
                                                  'Vapor de Água',
                                                  'Gás Asfixiante Simples',
                                                  'Não classificado',
                                                  'Inflamável'
                                                ],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownFluidoValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownTemperaturaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownCatalisadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    _model
                                                        .volumeInputTextController
                                                        ?.clear();
                                                    _model
                                                        .pressaoInputTextController
                                                        ?.clear();
                                                  });
                                                  setState(() {
                                                    _model.pressaoKGF = 0.0;
                                                    _model.volumeMcubico = 0.0;
                                                    _model.pv = 0.0;
                                                    _model.pressaoMPA = null;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..classeA = (_model
                                                                        .statusDropDownFluidoValue ==
                                                                    'A') ||
                                                                (_model.statusDropDownFluidoValue ==
                                                                    'A2') ||
                                                                (_model.statusDropDownFluidoValue ==
                                                                    'A3') ||
                                                                (_model.statusDropDownFluidoValue ==
                                                                    'A4') ||
                                                                (_model.statusDropDownFluidoValue ==
                                                                    'A5')
                                                            ? '1'
                                                            : '0'
                                                        ..classeB =
                                                            (_model.statusDropDownFluidoValue ==
                                                                        'B') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'B2')
                                                                ? '1'
                                                                : '0'
                                                        ..classeC = (_model
                                                                        .statusDropDownFluidoValue ==
                                                                    'C') ||
                                                                (_model.statusDropDownFluidoValue ==
                                                                    'C2') ||
                                                                (_model.statusDropDownFluidoValue ==
                                                                    'C3')
                                                            ? '1'
                                                            : '0'
                                                        ..classeD =
                                                            (_model.statusDropDownFluidoValue ==
                                                                        'D') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'D1')
                                                                ? '1'
                                                                : '0'
                                                        ..pressaoZeroCincoMenorUm =
                                                            null
                                                        ..pVMaiorZZZOitoPV =
                                                            null
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            null
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            null
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            null
                                                        ..pVMaiorIgualCemPV =
                                                            null
                                                        ..temperaturaMenor0C =
                                                            null
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosFluido =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosFluido!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnFluido =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model.retornoAceitosFluido
                                                        ?.toList(),
                                                  );
                                                  _model.addFluido =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnFluido
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addFluido!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezValue,
                                                          '3',
                                                        )
                                                        ..possReconstMemCalcPMTA =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaValue,
                                                          '3',
                                                        )
                                                        ..classeA = (_model
                                                                        .statusDropDownFluidoValue ==
                                                                    'A') ||
                                                                (_model.statusDropDownFluidoValue ==
                                                                    'A2') ||
                                                                (_model.statusDropDownFluidoValue ==
                                                                    'A3') ||
                                                                (_model.statusDropDownFluidoValue ==
                                                                    'A4') ||
                                                                (_model.statusDropDownFluidoValue ==
                                                                    'A5')
                                                            ? '1'
                                                            : '0'
                                                        ..classeB =
                                                            (_model.statusDropDownFluidoValue ==
                                                                        'B') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'B2')
                                                                ? '1'
                                                                : '0'
                                                        ..classeC = (_model
                                                                        .statusDropDownFluidoValue ==
                                                                    'C') ||
                                                                (_model.statusDropDownFluidoValue ==
                                                                    'C2') ||
                                                                (_model.statusDropDownFluidoValue ==
                                                                    'C3')
                                                            ? '1'
                                                            : '0'
                                                        ..classeD =
                                                            _model.statusDropDownFluidoValue ==
                                                                    'D'
                                                                ? '1'
                                                                : '0',
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.stretch,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .pressaoZeroCincoMenorUm !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA())
                                            Text(
                                              'Pressão:',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          Row(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              if ((FFAppState().userControleVp.pressaoZeroCincoMenorUm !=
                                                      '3') &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasOcupacaoHumana() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasSistemaAuxiliarMaquina() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasPlasticoReforcado() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasTransporteProduto() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasSubmarinoExploracaoProducao() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasDiametroInterno() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasConformidadeCodigoProjeto() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasInstalacaoAntesDezembroDzOito() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasPossReconstMemCalcPMTA() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasClasseA())
                                                Flexible(
                                                  child: Container(
                                                    width: 250.0,
                                                    child: TextFormField(
                                                      controller: _model
                                                          .pressaoInputTextController,
                                                      focusNode: _model
                                                          .pressaoInputFocusNode,
                                                      onFieldSubmitted:
                                                          (_) async {
                                                        setState(() {
                                                          _model
                                                              .radioButtonPressaoVpValueController
                                                              ?.value = 'kgf/cm²';
                                                        });
                                                        setState(() {
                                                          _model.pressaoKGF =
                                                              () {
                                                            if (_model
                                                                    .radioButtonPressaoVpValue ==
                                                                'MPa') {
                                                              return (double.parse(_model
                                                                      .pressaoInputTextController
                                                                      .text) *
                                                                  10.197);
                                                            } else if (_model
                                                                    .radioButtonPressaoVpValue ==
                                                                'Psi') {
                                                              return (double.parse(_model
                                                                      .pressaoInputTextController
                                                                      .text) *
                                                                  0.070307);
                                                            } else if (_model
                                                                    .radioButtonPressaoVpValue ==
                                                                'bar') {
                                                              return (double.parse(_model
                                                                      .pressaoInputTextController
                                                                      .text) *
                                                                  1.01972);
                                                            } else {
                                                              return double
                                                                  .parse(_model
                                                                      .pressaoInputTextController
                                                                      .text);
                                                            }
                                                          }();
                                                        });
                                                      },
                                                      autofocus: false,
                                                      obscureText: false,
                                                      decoration:
                                                          InputDecoration(
                                                        isDense: true,
                                                        labelStyle:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .primary,
                                                                  fontSize:
                                                                      18.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                ),
                                                        hintStyle:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  letterSpacing:
                                                                      0.0,
                                                                ),
                                                        enabledBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primaryText,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        focusedBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primary,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        errorBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .error,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        focusedErrorBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .error,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                      ),
                                                      style: FlutterFlowTheme
                                                              .of(context)
                                                          .bodyMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primary,
                                                            fontSize: 18.0,
                                                            letterSpacing: 0.0,
                                                          ),
                                                      keyboardType:
                                                          TextInputType.number,
                                                      validator: _model
                                                          .pressaoInputTextControllerValidator
                                                          .asValidator(context),
                                                    ),
                                                  ),
                                                ),
                                              if ((FFAppState().userControleVp.pressaoZeroCincoMenorUm !=
                                                      '3') &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasOcupacaoHumana() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasSistemaAuxiliarMaquina() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasPlasticoReforcado() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasTransporteProduto() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasSubmarinoExploracaoProducao() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasDiametroInterno() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasConformidadeCodigoProjeto() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasInstalacaoAntesDezembroDzOito() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasPossReconstMemCalcPMTA() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasClasseA())
                                                FFButtonWidget(
                                                  onPressed: () async {
                                                    setState(() {
                                                      _model
                                                          .statusDropDownTemperaturaValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownCatalisadorValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownEvidenciaValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownEstudoAbandonadorValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownInmetroValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownFabSerieValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownValvulaValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownServicoProprioSpieValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownConfInnValueController
                                                          ?.reset();
                                                    });
                                                    setState(() {
                                                      _model.pressaoKGF = () {
                                                        if (_model
                                                                .radioButtonPressaoVpValue ==
                                                            'MPa') {
                                                          return (double.parse(
                                                                  _model
                                                                      .pressaoInputTextController
                                                                      .text) *
                                                              10.197);
                                                        } else if (_model
                                                                .radioButtonPressaoVpValue ==
                                                            'Psi') {
                                                          return (double.parse(
                                                                  _model
                                                                      .pressaoInputTextController
                                                                      .text) *
                                                              0.070307);
                                                        } else if (_model
                                                                .radioButtonPressaoVpValue ==
                                                            'bar') {
                                                          return (double.parse(
                                                                  _model
                                                                      .pressaoInputTextController
                                                                      .text) *
                                                              1.01972);
                                                        } else {
                                                          return double.parse(_model
                                                              .pressaoInputTextController
                                                              .text);
                                                        }
                                                      }();
                                                    });
                                                    setState(() {
                                                      _model.pressaoMPA = () {
                                                        if (_model
                                                                .radioButtonPressaoVpValue ==
                                                            'Psi') {
                                                          return (double.parse(
                                                                  _model
                                                                      .pressaoInputTextController
                                                                      .text) *
                                                              0.00689476);
                                                        } else if (_model
                                                                .radioButtonPressaoVpValue ==
                                                            'bar') {
                                                          return (double.parse(
                                                                  _model
                                                                      .pressaoInputTextController
                                                                      .text) *
                                                              0.1);
                                                        } else if (_model
                                                                .radioButtonPressaoVpValue ==
                                                            'kgf/cm²') {
                                                          return (double.parse(
                                                                  _model
                                                                      .pressaoInputTextController
                                                                      .text) *
                                                              0.0980665);
                                                        } else {
                                                          return double
                                                              .tryParse(_model
                                                                  .pressaoInputTextController
                                                                  .text);
                                                        }
                                                      }();
                                                    });
                                                    setState(() {
                                                      FFAppState()
                                                          .updateUserControleVpStruct(
                                                        (e) => e
                                                          ..pressaoZeroCincoMenorUm =
                                                              (_model.pressaoKGF >=
                                                                          0.051) &&
                                                                      (_model.pressaoKGF <
                                                                          1.033)
                                                                  ? '1'
                                                                  : '0'
                                                          ..pVMaiorZZZOitoPV =
                                                              null
                                                          ..pVMaiorIgualUmMenorDoisCincoPV =
                                                              null
                                                          ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                              null
                                                          ..pVMaiorIgualTrintaMenorCemPV =
                                                              null
                                                          ..pVMaiorIgualCemPV =
                                                              null
                                                          ..temperaturaMenor0C =
                                                              null
                                                          ..semEvidenciaDeterioracao =
                                                              null
                                                          ..enchInternoEOUCatalisador =
                                                              null
                                                          ..estudoAbonadorInspecaoInternaDif =
                                                              null
                                                          ..fabricacaoSerie =
                                                              null
                                                          ..certificadoINMETRO =
                                                              null
                                                          ..valvulasSegurCalibradasFab =
                                                              null
                                                          ..sPIEServicoPropInspecaoEquip =
                                                              null
                                                          ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                              null,
                                                      );
                                                    });
                                                    _model.retornoAceitosPressao =
                                                        await actions
                                                            .atualizaAceitosVP();
                                                    setState(() {
                                                      _model.vpAceitos = _model
                                                          .retornoAceitosPressao!
                                                          .toList()
                                                          .cast<VpNrStruct>();
                                                    });
                                                    _model.keysToUpdateReturnPressao =
                                                        await actions
                                                            .keysToUpdate(
                                                      _model
                                                          .retornoAceitosPressao
                                                          ?.toList(),
                                                    );
                                                    _model.addPressao =
                                                        await actions.addNA(
                                                      _model
                                                          .keysToUpdateReturnPressao
                                                          ?.toList(),
                                                    );
                                                    setState(() {
                                                      FFAppState()
                                                              .userControleVp =
                                                          _model.addPressao!;
                                                    });
                                                    setState(() {
                                                      FFAppState()
                                                          .updateUserControleVpStruct(
                                                        (e) => e
                                                          ..ocupacaoHumana = _model
                                                              .statusDropDownOcupacaoValue
                                                          ..sistemaAuxiliarMaquina =
                                                              _model
                                                                  .statusDropDownSistemaAuxiliarValue
                                                          ..plasticoReforcado =
                                                              _model
                                                                  .statusDropDownPlasticoReforValue
                                                          ..transporteProduto =
                                                              _model
                                                                  .statusDropDownTransporteValue
                                                          ..submarinoExploracaoProducao =
                                                              _model
                                                                  .statusDropDownSubmarinoValue
                                                          ..diametroInterno = _model
                                                              .statusDropDownDiametroValue
                                                          ..conformidadeCodigoProjeto =
                                                              _model
                                                                  .statusDropDownConfCodigoValue
                                                          ..instalacaoAntesDezembroDzOito =
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .statusDropDownAntesDezValue,
                                                            '3',
                                                          )
                                                          ..possReconstMemCalcPMTA =
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .statusDropDownPmtaValue,
                                                            '3',
                                                          )
                                                          ..classeA =
                                                              valueOrDefault<
                                                                  String>(
                                                            (_model.statusDropDownFluidoValue ==
                                                                        'A') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'A2') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'A3') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'A4') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'A5')
                                                                ? '1'
                                                                : '0',
                                                            '3',
                                                          )
                                                          ..classeB =
                                                              valueOrDefault<
                                                                  String>(
                                                            (_model.statusDropDownFluidoValue ==
                                                                        'B') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'B2')
                                                                ? '1'
                                                                : '0',
                                                            '3',
                                                          )
                                                          ..classeC =
                                                              valueOrDefault<
                                                                  String>(
                                                            (_model.statusDropDownFluidoValue ==
                                                                        'C') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'C2') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'C3')
                                                                ? '1'
                                                                : '0',
                                                            '3',
                                                          )
                                                          ..classeD =
                                                              valueOrDefault<
                                                                  String>(
                                                            _model.statusDropDownFluidoValue ==
                                                                    'D'
                                                                ? '1'
                                                                : '0',
                                                            '3',
                                                          )
                                                          ..pressaoZeroCincoMenorUm =
                                                              (_model.pressaoKGF >=
                                                                          0.051) &&
                                                                      (_model.pressaoKGF <
                                                                          1.033)
                                                                  ? '1'
                                                                  : '0',
                                                      );
                                                    });

                                                    setState(() {});
                                                  },
                                                  text: 'Aplicar',
                                                  options: FFButtonOptions(
                                                    height: 40.0,
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(24.0, 0.0,
                                                                24.0, 0.0),
                                                    iconPadding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(0.0, 0.0,
                                                                0.0, 0.0),
                                                    color: FlutterFlowTheme.of(
                                                            context)
                                                        .primary,
                                                    textStyle: FlutterFlowTheme
                                                            .of(context)
                                                        .titleSmall
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: Colors.white,
                                                          letterSpacing: 0.0,
                                                        ),
                                                    elevation: 3.0,
                                                    borderSide: BorderSide(
                                                      color: Colors.transparent,
                                                      width: 1.0,
                                                    ),
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            8.0),
                                                  ),
                                                ),
                                            ].divide(SizedBox(width: 20.0)),
                                          ),
                                          Row(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              if ((FFAppState().userControleVp.pressaoZeroCincoMenorUm !=
                                                      '3') &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasOcupacaoHumana() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasSistemaAuxiliarMaquina() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasPlasticoReforcado() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasTransporteProduto() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasSubmarinoExploracaoProducao() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasDiametroInterno() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasConformidadeCodigoProjeto() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasInstalacaoAntesDezembroDzOito() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasPossReconstMemCalcPMTA() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasClasseA())
                                                FlutterFlowRadioButton(
                                                  options: [
                                                    'MPa',
                                                    'Psi',
                                                    'bar',
                                                    'kgf/cm²'
                                                  ].toList(),
                                                  onChanged: (val) async {
                                                    setState(() {});
                                                    setState(() {
                                                      _model.pressaoKGF = () {
                                                        if (_model
                                                                .radioButtonPressaoVpValue ==
                                                            'MPa') {
                                                          return (double.parse(
                                                                  _model
                                                                      .pressaoInputTextController
                                                                      .text) *
                                                              10.197);
                                                        } else if (_model
                                                                .radioButtonPressaoVpValue ==
                                                            'Psi') {
                                                          return (double.parse(
                                                                  _model
                                                                      .pressaoInputTextController
                                                                      .text) *
                                                              0.070307);
                                                        } else if (_model
                                                                .radioButtonPressaoVpValue ==
                                                            'bar') {
                                                          return (double.parse(
                                                                  _model
                                                                      .pressaoInputTextController
                                                                      .text) *
                                                              1.01972);
                                                        } else {
                                                          return double.parse(_model
                                                              .pressaoInputTextController
                                                              .text);
                                                        }
                                                      }();
                                                    });
                                                  },
                                                  controller: _model
                                                          .radioButtonPressaoVpValueController ??=
                                                      FormFieldController<
                                                          String>('kgf/cm²'),
                                                  optionHeight: 30.0,
                                                  textStyle:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .labelMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            letterSpacing: 0.0,
                                                          ),
                                                  selectedTextStyle:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .bodyMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            fontSize: 16.0,
                                                            letterSpacing: 0.0,
                                                            fontWeight:
                                                                FontWeight.w600,
                                                          ),
                                                  textPadding:
                                                      EdgeInsetsDirectional
                                                          .fromSTEB(0.0, 0.0,
                                                              10.0, 0.0),
                                                  buttonPosition:
                                                      RadioButtonPosition.left,
                                                  direction: Axis.horizontal,
                                                  radioButtonColor:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .primary,
                                                  inactiveRadioButtonColor:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .secondaryText,
                                                  toggleable: true,
                                                  horizontalAlignment:
                                                      WrapAlignment.start,
                                                  verticalAlignment:
                                                      WrapCrossAlignment.start,
                                                ),
                                            ].divide(SizedBox(width: 15.0)),
                                          ),
                                        ],
                                      ),
                                      if ((FFAppState()
                                                  .userControleVp
                                                  .pressaoZeroCincoMenorUm !=
                                              '3') &&
                                          FFAppState()
                                              .userControleVp
                                              .hasOcupacaoHumana() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasSistemaAuxiliarMaquina() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasPlasticoReforcado() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasTransporteProduto() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasSubmarinoExploracaoProducao() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasDiametroInterno() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasConformidadeCodigoProjeto() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasInstalacaoAntesDezembroDzOito() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasPossReconstMemCalcPMTA() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasClasseA())
                                        Text(
                                          '${valueOrDefault<String>(
                                            _model.pressaoKGF.toString(),
                                            '0',
                                          )}kgf/cm²',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                fontSize: 16.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.w600,
                                              ),
                                        ),
                                      if (currentUserEmail == null ||
                                          currentUserEmail == '')
                                        Text(
                                          (_model.pressaoKGF >= 0.051) &&
                                                  (_model.pressaoKGF < 1.033)
                                              ? '1'
                                              : '0',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                fontSize: 16.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.w600,
                                              ),
                                        ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.stretch,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .pressaoZeroCincoMenorUm !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm())
                                            Text(
                                              'Volume:',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          Row(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              if ((FFAppState().userControleVp.pressaoZeroCincoMenorUm !=
                                                      '3') &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasOcupacaoHumana() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasSistemaAuxiliarMaquina() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasPlasticoReforcado() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasTransporteProduto() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasSubmarinoExploracaoProducao() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasDiametroInterno() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasConformidadeCodigoProjeto() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasInstalacaoAntesDezembroDzOito() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasPossReconstMemCalcPMTA() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasClasseA() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasPressaoZeroCincoMenorUm())
                                                Flexible(
                                                  child: Container(
                                                    width: 250.0,
                                                    child: TextFormField(
                                                      controller: _model
                                                          .volumeInputTextController,
                                                      focusNode: _model
                                                          .volumeInputFocusNode,
                                                      autofocus: false,
                                                      obscureText: false,
                                                      decoration:
                                                          InputDecoration(
                                                        isDense: true,
                                                        labelStyle:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .primary,
                                                                  fontSize:
                                                                      18.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                ),
                                                        hintStyle:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  letterSpacing:
                                                                      0.0,
                                                                ),
                                                        enabledBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primaryText,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        focusedBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primary,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        errorBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .error,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        focusedErrorBorder:
                                                            UnderlineInputBorder(
                                                          borderSide:
                                                              BorderSide(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .error,
                                                            width: 2.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                      ),
                                                      style: FlutterFlowTheme
                                                              .of(context)
                                                          .bodyMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primary,
                                                            fontSize: 18.0,
                                                            letterSpacing: 0.0,
                                                          ),
                                                      keyboardType:
                                                          TextInputType.number,
                                                      validator: _model
                                                          .volumeInputTextControllerValidator
                                                          .asValidator(context),
                                                    ),
                                                  ),
                                                ),
                                              if ((FFAppState().userControleVp.pressaoZeroCincoMenorUm !=
                                                      '3') &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasOcupacaoHumana() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasSistemaAuxiliarMaquina() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasPlasticoReforcado() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasTransporteProduto() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasSubmarinoExploracaoProducao() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasDiametroInterno() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasConformidadeCodigoProjeto() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasInstalacaoAntesDezembroDzOito() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasPossReconstMemCalcPMTA() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasClasseA() &&
                                                  FFAppState()
                                                      .userControleVp
                                                      .hasPressaoZeroCincoMenorUm())
                                                FFButtonWidget(
                                                  onPressed: () async {
                                                    setState(() {
                                                      _model.volumeMcubico =
                                                          () {
                                                        if (_model
                                                                .radioButtonVolumeVpValue ==
                                                            'Litros') {
                                                          return (double.parse(
                                                                  _model
                                                                      .volumeInputTextController
                                                                      .text) *
                                                              0.001);
                                                        } else if (_model
                                                                .radioButtonVolumeVpValue ==
                                                            'ft³') {
                                                          return (double.parse(
                                                                  _model
                                                                      .volumeInputTextController
                                                                      .text) *
                                                              0.0283168);
                                                        } else if (_model
                                                                .radioButtonVolumeVpValue ==
                                                            'USA gal') {
                                                          return (double.parse(
                                                                  _model
                                                                      .volumeInputTextController
                                                                      .text) *
                                                              0.00378541);
                                                        } else {
                                                          return double
                                                              .tryParse(_model
                                                                  .volumeInputTextController
                                                                  .text);
                                                        }
                                                      }();
                                                    });
                                                    setState(() {
                                                      _model.pv = ((_model
                                                              .pressaoMPA!) *
                                                          (_model
                                                              .volumeMcubico!));
                                                    });
                                                    setState(() {
                                                      _model
                                                          .statusDropDownTemperaturaValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownCatalisadorValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownEvidenciaValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownEstudoAbandonadorValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownInmetroValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownFabSerieValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownValvulaValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownServicoProprioSpieValueController
                                                          ?.reset();
                                                      _model
                                                          .statusDropDownConfInnValueController
                                                          ?.reset();
                                                    });
                                                    setState(() {
                                                      FFAppState()
                                                          .updateUserControleVpStruct(
                                                        (e) => e
                                                          ..pVMaiorZZZOitoPV =
                                                              (_model.pv! >
                                                                          0.008) &&
                                                                      (_model.pv! <
                                                                          1.0)
                                                                  ? '1'
                                                                  : '0'
                                                          ..pVMaiorIgualUmMenorDoisCincoPV =
                                                              (_model.pv! >=
                                                                          1.0) &&
                                                                      (_model.pv! <
                                                                          2.5)
                                                                  ? '1'
                                                                  : '0'
                                                          ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                              (_model.pv! >=
                                                                          2.5) &&
                                                                      (_model.pv! <
                                                                          30.0)
                                                                  ? '1'
                                                                  : '0'
                                                          ..pVMaiorIgualTrintaMenorCemPV =
                                                              (_model.pv! >=
                                                                          30.0) &&
                                                                      (_model.pv! <
                                                                          100.0)
                                                                  ? '1'
                                                                  : '0'
                                                          ..pVMaiorIgualCemPV =
                                                              _model.pv! >=
                                                                      100.0
                                                                  ? '1'
                                                                  : '0'
                                                          ..temperaturaMenor0C =
                                                              null
                                                          ..semEvidenciaDeterioracao =
                                                              null
                                                          ..enchInternoEOUCatalisador =
                                                              null
                                                          ..estudoAbonadorInspecaoInternaDif =
                                                              null
                                                          ..fabricacaoSerie =
                                                              null
                                                          ..certificadoINMETRO =
                                                              null
                                                          ..valvulasSegurCalibradasFab =
                                                              null
                                                          ..sPIEServicoPropInspecaoEquip =
                                                              null
                                                          ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                              null,
                                                      );
                                                    });
                                                    _model.retornoAceitosPvs =
                                                        await actions
                                                            .atualizaAceitosVP();
                                                    setState(() {
                                                      _model.vpAceitos = _model
                                                          .retornoAceitosPvs!
                                                          .toList()
                                                          .cast<VpNrStruct>();
                                                    });
                                                    _model.keysToUpdateReturnPvs =
                                                        await actions
                                                            .keysToUpdate(
                                                      _model.retornoAceitosPvs
                                                          ?.toList(),
                                                    );
                                                    _model.addPvs =
                                                        await actions.addNA(
                                                      _model
                                                          .keysToUpdateReturnPvs
                                                          ?.toList(),
                                                    );
                                                    setState(() {
                                                      FFAppState()
                                                              .userControleVp =
                                                          _model.addPvs!;
                                                    });
                                                    setState(() {
                                                      FFAppState()
                                                          .updateUserControleVpStruct(
                                                        (e) => e
                                                          ..ocupacaoHumana = _model
                                                              .statusDropDownOcupacaoValue
                                                          ..sistemaAuxiliarMaquina =
                                                              _model
                                                                  .statusDropDownSistemaAuxiliarValue
                                                          ..plasticoReforcado =
                                                              _model
                                                                  .statusDropDownPlasticoReforValue
                                                          ..transporteProduto =
                                                              _model
                                                                  .statusDropDownTransporteValue
                                                          ..submarinoExploracaoProducao =
                                                              _model
                                                                  .statusDropDownSubmarinoValue
                                                          ..diametroInterno = _model
                                                              .statusDropDownDiametroValue
                                                          ..conformidadeCodigoProjeto =
                                                              _model
                                                                  .statusDropDownConfCodigoValue
                                                          ..instalacaoAntesDezembroDzOito =
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .statusDropDownAntesDezValue,
                                                            '3',
                                                          )
                                                          ..possReconstMemCalcPMTA =
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .statusDropDownPmtaValue,
                                                            '3',
                                                          )
                                                          ..classeA =
                                                              valueOrDefault<
                                                                  String>(
                                                            (_model.statusDropDownFluidoValue ==
                                                                        'A') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'A2') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'A3') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'A4') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'A5')
                                                                ? '1'
                                                                : '0',
                                                            '3',
                                                          )
                                                          ..classeB =
                                                              valueOrDefault<
                                                                  String>(
                                                            (_model.statusDropDownFluidoValue ==
                                                                        'B') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'B2')
                                                                ? '1'
                                                                : '0',
                                                            '3',
                                                          )
                                                          ..classeC =
                                                              valueOrDefault<
                                                                  String>(
                                                            (_model.statusDropDownFluidoValue ==
                                                                        'C') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'C2') ||
                                                                    (_model.statusDropDownFluidoValue ==
                                                                        'C3')
                                                                ? '1'
                                                                : '0',
                                                            '3',
                                                          )
                                                          ..classeD =
                                                              valueOrDefault<
                                                                  String>(
                                                            _model.statusDropDownFluidoValue ==
                                                                    'D'
                                                                ? '1'
                                                                : '0',
                                                            '3',
                                                          )
                                                          ..pressaoZeroCincoMenorUm =
                                                              valueOrDefault<
                                                                  String>(
                                                            (_model.pressaoKGF >=
                                                                        0.051) &&
                                                                    (_model.pressaoKGF <
                                                                        1.033)
                                                                ? '1'
                                                                : '0',
                                                            '3',
                                                          )
                                                          ..pVMaiorZZZOitoPV =
                                                              (_model.pv! >
                                                                          0.008) &&
                                                                      (_model.pv! <
                                                                          1.0)
                                                                  ? '1'
                                                                  : '0'
                                                          ..pVMaiorIgualUmMenorDoisCincoPV =
                                                              (_model.pv! >=
                                                                          1.0) &&
                                                                      (_model.pv! <
                                                                          2.5)
                                                                  ? '1'
                                                                  : '0'
                                                          ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                              (_model.pv! >=
                                                                          2.5) &&
                                                                      (_model.pv! <
                                                                          30.0)
                                                                  ? '1'
                                                                  : '0'
                                                          ..pVMaiorIgualTrintaMenorCemPV =
                                                              (_model.pv! >=
                                                                          30.0) &&
                                                                      (_model.pv! <
                                                                          100.0)
                                                                  ? '1'
                                                                  : '0'
                                                          ..pVMaiorIgualCemPV =
                                                              _model.pv! >=
                                                                      100.0
                                                                  ? '1'
                                                                  : '0',
                                                      );
                                                    });

                                                    setState(() {});
                                                  },
                                                  text: 'Aplicar',
                                                  options: FFButtonOptions(
                                                    height: 40.0,
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(24.0, 0.0,
                                                                24.0, 0.0),
                                                    iconPadding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(0.0, 0.0,
                                                                0.0, 0.0),
                                                    color: FlutterFlowTheme.of(
                                                            context)
                                                        .primary,
                                                    textStyle: FlutterFlowTheme
                                                            .of(context)
                                                        .titleSmall
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: Colors.white,
                                                          letterSpacing: 0.0,
                                                        ),
                                                    elevation: 3.0,
                                                    borderSide: BorderSide(
                                                      color: Colors.transparent,
                                                      width: 1.0,
                                                    ),
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            8.0),
                                                  ),
                                                ),
                                            ].divide(SizedBox(width: 20.0)),
                                          ),
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0.0, 0.0, 0.0, 25.0),
                                            child: Row(
                                              mainAxisSize: MainAxisSize.max,
                                              children: [
                                                if ((FFAppState()
                                                            .userControleVp
                                                            .pressaoZeroCincoMenorUm !=
                                                        '3') &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasOcupacaoHumana() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasSistemaAuxiliarMaquina() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasPlasticoReforcado() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasTransporteProduto() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasSubmarinoExploracaoProducao() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasDiametroInterno() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasConformidadeCodigoProjeto() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasInstalacaoAntesDezembroDzOito() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasPossReconstMemCalcPMTA() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasClasseA() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasPressaoZeroCincoMenorUm())
                                                  FlutterFlowRadioButton(
                                                    options: [
                                                      ' m³',
                                                      'Litros',
                                                      'ft³',
                                                      'USA gal'
                                                    ].toList(),
                                                    onChanged: (val) async {
                                                      setState(() {});
                                                      setState(() {
                                                        _model.volumeMcubico =
                                                            () {
                                                          if (_model
                                                                  .radioButtonVolumeVpValue ==
                                                              'Litros') {
                                                            return (double.parse(
                                                                    _model
                                                                        .volumeInputTextController
                                                                        .text) *
                                                                0.001);
                                                          } else if (_model
                                                                  .radioButtonVolumeVpValue ==
                                                              'ft³') {
                                                            return (double.parse(
                                                                    _model
                                                                        .volumeInputTextController
                                                                        .text) *
                                                                0.0283168);
                                                          } else if (_model
                                                                  .radioButtonVolumeVpValue ==
                                                              'USA gal') {
                                                            return (double.parse(
                                                                    _model
                                                                        .volumeInputTextController
                                                                        .text) *
                                                                0.00378541);
                                                          } else {
                                                            return double
                                                                .tryParse(_model
                                                                    .volumeInputTextController
                                                                    .text);
                                                          }
                                                        }();
                                                      });
                                                    },
                                                    controller: _model
                                                            .radioButtonVolumeVpValueController ??=
                                                        FormFieldController<
                                                            String>(' m³'),
                                                    optionHeight: 30.0,
                                                    textStyle: FlutterFlowTheme
                                                            .of(context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                                    selectedTextStyle:
                                                        FlutterFlowTheme.of(
                                                                context)
                                                            .bodyMedium
                                                            .override(
                                                              fontFamily:
                                                                  'Inter',
                                                              fontSize: 16.0,
                                                              letterSpacing:
                                                                  0.0,
                                                            ),
                                                    textPadding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(0.0, 0.0,
                                                                10.0, 0.0),
                                                    buttonPosition:
                                                        RadioButtonPosition
                                                            .left,
                                                    direction: Axis.horizontal,
                                                    radioButtonColor:
                                                        FlutterFlowTheme.of(
                                                                context)
                                                            .primary,
                                                    inactiveRadioButtonColor:
                                                        FlutterFlowTheme.of(
                                                                context)
                                                            .secondaryText,
                                                    toggleable: false,
                                                    horizontalAlignment:
                                                        WrapAlignment.start,
                                                    verticalAlignment:
                                                        WrapCrossAlignment
                                                            .start,
                                                  ),
                                              ].divide(SizedBox(width: 15.0)),
                                            ),
                                          ),
                                        ],
                                      ),
                                      if ((FFAppState().userControleVp.pressaoZeroCincoMenorUm !=
                                              '3') &&
                                          FFAppState()
                                              .userControleVp
                                              .hasOcupacaoHumana() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasSistemaAuxiliarMaquina() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasPlasticoReforcado() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasTransporteProduto() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasSubmarinoExploracaoProducao() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasDiametroInterno() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasConformidadeCodigoProjeto() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasInstalacaoAntesDezembroDzOito() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasPossReconstMemCalcPMTA() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasClasseA() &&
                                          FFAppState()
                                              .userControleVp
                                              .hasPressaoZeroCincoMenorUm())
                                        Text(
                                          '${valueOrDefault<String>(
                                            _model.volumeMcubico?.toString(),
                                            '0',
                                          )} m³',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                fontSize: 16.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.w600,
                                              ),
                                        ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 0.0, 0.0, 40.0),
                                        child: Column(
                                          mainAxisSize: MainAxisSize.max,
                                          crossAxisAlignment:
                                              CrossAxisAlignment.stretch,
                                          children: [
                                            Row(
                                              mainAxisSize: MainAxisSize.max,
                                              children: [
                                                if ((FFAppState()
                                                            .userControleVp
                                                            .pressaoZeroCincoMenorUm !=
                                                        '3') &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasOcupacaoHumana() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasSistemaAuxiliarMaquina() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasPlasticoReforcado() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasTransporteProduto() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasSubmarinoExploracaoProducao() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasDiametroInterno() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasConformidadeCodigoProjeto() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasInstalacaoAntesDezembroDzOito() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasPossReconstMemCalcPMTA() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasClasseA() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasPressaoZeroCincoMenorUm())
                                                  Text(
                                                    'P.V (MPa.m3):',
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 16.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.w600,
                                                        ),
                                                  ),
                                                if ((FFAppState()
                                                            .userControleVp
                                                            .pressaoZeroCincoMenorUm !=
                                                        '3') &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasOcupacaoHumana() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasSistemaAuxiliarMaquina() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasPlasticoReforcado() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasTransporteProduto() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasSubmarinoExploracaoProducao() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasDiametroInterno() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasConformidadeCodigoProjeto() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasInstalacaoAntesDezembroDzOito() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasPossReconstMemCalcPMTA() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasClasseA() &&
                                                    FFAppState()
                                                        .userControleVp
                                                        .hasPressaoZeroCincoMenorUm())
                                                  Text(
                                                    valueOrDefault<String>(
                                                      _model.pv?.toString(),
                                                      '0',
                                                    ).maybeHandleOverflow(
                                                        maxChars: 5),
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.normal,
                                                        ),
                                                  ),
                                              ].divide(SizedBox(width: 10.0)),
                                            ),
                                          ],
                                        ),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleVp.temperaturaMenor0C !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV())
                                            Text(
                                              'Temperatura de operação menor que 0°C?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .pVMaiorZZZOitoPV !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownTemperaturaValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownTemperaturaValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownTemperaturaValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCatalisadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEvidenciaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..temperaturaMenor0C =
                                                            _model
                                                                .statusDropDownTemperaturaValue
                                                        ..semEvidenciaDeterioracao =
                                                            null
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosTemp =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosTemp!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnTemp =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model.retornoAceitosTemp
                                                        ?.toList(),
                                                  );
                                                  _model.addTemp =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnTemp
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addTemp!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezValue,
                                                          '3',
                                                        )
                                                        ..possReconstMemCalcPMTA =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.statusDropDownFluidoValue ==
                                                                  'D'
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoKGF >=
                                                                      0.051) &&
                                                                  (_model.pressaoKGF <
                                                                      1.033)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            _model
                                                                .statusDropDownTemperaturaValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .semEvidenciaDeterioracao !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C())
                                            Text(
                                              'Sem evidência de deterioração?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .semEvidenciaDeterioracao !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownEvidenciaValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownEvidenciaValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownEvidenciaValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownCatalisadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownEstudoAbandonadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..semEvidenciaDeterioracao =
                                                            _model
                                                                .statusDropDownEvidenciaValue
                                                        ..enchInternoEOUCatalisador =
                                                            null
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosEvidencia =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosEvidencia!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnEvidencia =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model
                                                        .retornoAceitosEvidencia
                                                        ?.toList(),
                                                  );
                                                  _model.addEvidencia =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnEvidencia
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addEvidencia!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezValue,
                                                          '3',
                                                        )
                                                        ..possReconstMemCalcPMTA =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.statusDropDownFluidoValue ==
                                                                  'D'
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoKGF >=
                                                                      0.051) &&
                                                                  (_model.pressaoKGF <
                                                                      1.033)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTemperaturaValue,
                                                          '3',
                                                        )
                                                        ..semEvidenciaDeterioracao =
                                                            _model
                                                                .statusDropDownEvidenciaValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleVp.enchInternoEOUCatalisador !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao())
                                            Text(
                                              'Enchimento interno e/ou catalisador?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleVp.enchInternoEOUCatalisador !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownCatalisadorValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownCatalisadorValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownCatalisadorValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownEstudoAbandonadorValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..enchInternoEOUCatalisador =
                                                            _model
                                                                .statusDropDownCatalisadorValue
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            null
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosCatalisador =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosCatalisador!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnCatalisador =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model
                                                        .retornoAceitosCatalisador
                                                        ?.toList(),
                                                  );
                                                  _model.addCatalisador =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnCatalisador
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addCatalisador!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezValue,
                                                          '3',
                                                        )
                                                        ..possReconstMemCalcPMTA =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.statusDropDownFluidoValue ==
                                                                  'D'
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoKGF >=
                                                                      0.051) &&
                                                                  (_model.pressaoKGF <
                                                                      1.033)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTemperaturaValue,
                                                          '3',
                                                        )
                                                        ..semEvidenciaDeterioracao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEvidenciaValue,
                                                          '3',
                                                        )
                                                        ..enchInternoEOUCatalisador =
                                                            _model
                                                                .statusDropDownCatalisadorValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleVp.estudoAbonadorInspecaoInternaDif !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEnchInternoEOUCatalisador())
                                            Text(
                                              'Estudo abonador para inspeção interna diferenciada?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleVp.estudoAbonadorInspecaoInternaDif !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEnchInternoEOUCatalisador())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownEstudoAbandonadorValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownEstudoAbandonadorValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownEstudoAbandonadorValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownFabSerieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            _model
                                                                .statusDropDownEstudoAbandonadorValue
                                                        ..fabricacaoSerie = null
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosEstudoAbandonador =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosEstudoAbandonador!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnEstudoAbandonador =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model
                                                        .retornoAceitosEstudoAbandonador
                                                        ?.toList(),
                                                  );
                                                  _model.addEstudoAbandonador =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnEstudoAbandonador
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model
                                                            .addEstudoAbandonador!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezValue,
                                                          '3',
                                                        )
                                                        ..possReconstMemCalcPMTA =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.statusDropDownFluidoValue ==
                                                                  'D'
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoKGF >=
                                                                      0.051) &&
                                                                  (_model.pressaoKGF <
                                                                      1.033)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTemperaturaValue,
                                                          '3',
                                                        )
                                                        ..semEvidenciaDeterioracao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEvidenciaValue,
                                                          '3',
                                                        )
                                                        ..enchInternoEOUCatalisador =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCatalisadorValue,
                                                          '3',
                                                        )
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            _model
                                                                .statusDropDownEstudoAbandonadorValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .fabricacaoSerie !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEstudoAbonadorInspecaoInternaDif())
                                            Text(
                                              'Fabricação em série?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState()
                                                      .userControleVp
                                                      .fabricacaoSerie !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEstudoAbonadorInspecaoInternaDif())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownFabSerieValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownFabSerieValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownFabSerieValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownInmetroValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..fabricacaoSerie = _model
                                                            .statusDropDownFabSerieValue
                                                        ..certificadoINMETRO =
                                                            null
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosFabSerie =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosFabSerie!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnFabSerie =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model
                                                        .retornoAceitosFabSerie
                                                        ?.toList(),
                                                  );
                                                  _model.addFabSerie =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnFabSerie
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addFabSerie!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezValue,
                                                          '3',
                                                        )
                                                        ..possReconstMemCalcPMTA =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.statusDropDownFluidoValue ==
                                                                  'D'
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoKGF >=
                                                                      0.051) &&
                                                                  (_model.pressaoKGF <
                                                                      1.033)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTemperaturaValue,
                                                          '3',
                                                        )
                                                        ..semEvidenciaDeterioracao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEvidenciaValue,
                                                          '3',
                                                        )
                                                        ..enchInternoEOUCatalisador =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCatalisadorValue,
                                                          '3',
                                                        )
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEstudoAbandonadorValue,
                                                          '3',
                                                        )
                                                        ..fabricacaoSerie = _model
                                                            .statusDropDownFabSerieValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleVp.certificadoINMETRO !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEstudoAbonadorInspecaoInternaDif() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasFabricacaoSerie())
                                            Text(
                                              'Certificado pelo INMETRO?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleVp.certificadoINMETRO !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEstudoAbonadorInspecaoInternaDif() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasFabricacaoSerie())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownInmetroValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownInmetroValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownInmetroValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownValvulaValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..certificadoINMETRO =
                                                            _model
                                                                .statusDropDownInmetroValue
                                                        ..valvulasSegurCalibradasFab =
                                                            null
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosInmetro =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosInmetro!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnInmetro =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model.retornoAceitosInmetro
                                                        ?.toList(),
                                                  );
                                                  _model.addInmetro =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnInmetro
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addInmetro!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezValue,
                                                          '3',
                                                        )
                                                        ..possReconstMemCalcPMTA =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.statusDropDownFluidoValue ==
                                                                  'D'
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoKGF >=
                                                                      0.051) &&
                                                                  (_model.pressaoKGF <
                                                                      1.033)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTemperaturaValue,
                                                          '3',
                                                        )
                                                        ..semEvidenciaDeterioracao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEvidenciaValue,
                                                          '3',
                                                        )
                                                        ..enchInternoEOUCatalisador =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCatalisadorValue,
                                                          '3',
                                                        )
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEstudoAbandonadorValue,
                                                          '3',
                                                        )
                                                        ..fabricacaoSerie =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownFabSerieValue,
                                                          '3',
                                                        )
                                                        ..certificadoINMETRO =
                                                            _model
                                                                .statusDropDownInmetroValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleVp.valvulasSegurCalibradasFab !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEstudoAbonadorInspecaoInternaDif() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasFabricacaoSerie() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasCertificadoINMETRO())
                                            Text(
                                              ' Válvulas de segurança calibradas pelo fabricante?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleVp.valvulasSegurCalibradasFab !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEstudoAbonadorInspecaoInternaDif() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasFabricacaoSerie() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasCertificadoINMETRO())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownValvulaValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownValvulaValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownValvulaValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownServicoProprioSpieValueController
                                                        ?.reset();
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..valvulasSegurCalibradasFab =
                                                            _model
                                                                .statusDropDownValvulaValue
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            null
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosValvula =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosValvula!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnValvula =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model.retornoAceitosValvula
                                                        ?.toList(),
                                                  );
                                                  _model.addValvula =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnValvula
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addValvula!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezValue,
                                                          '3',
                                                        )
                                                        ..possReconstMemCalcPMTA =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.statusDropDownFluidoValue ==
                                                                  'D'
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoKGF >=
                                                                      0.051) &&
                                                                  (_model.pressaoKGF <
                                                                      1.033)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTemperaturaValue,
                                                          '3',
                                                        )
                                                        ..semEvidenciaDeterioracao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEvidenciaValue,
                                                          '3',
                                                        )
                                                        ..enchInternoEOUCatalisador =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCatalisadorValue,
                                                          '3',
                                                        )
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEstudoAbandonadorValue,
                                                          '3',
                                                        )
                                                        ..fabricacaoSerie =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownFabSerieValue,
                                                          '3',
                                                        )
                                                        ..certificadoINMETRO =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownInmetroValue,
                                                          '3',
                                                        )
                                                        ..valvulasSegurCalibradasFab =
                                                            _model
                                                                .statusDropDownValvulaValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleVp.sPIEServicoPropInspecaoEquip !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEstudoAbonadorInspecaoInternaDif() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasFabricacaoSerie() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasCertificadoINMETRO() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasValvulasSegurCalibradasFab())
                                            Text(
                                              ' Serviço Próprio de Inspeção de Equipamento - SPIE?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleVp.sPIEServicoPropInspecaoEquip !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEstudoAbonadorInspecaoInternaDif() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasFabricacaoSerie() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasCertificadoINMETRO() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasValvulasSegurCalibradasFab())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownServicoProprioSpieValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownServicoProprioSpieValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownServicoProprioSpieValue =
                                                      val);
                                                  setState(() {
                                                    _model
                                                        .statusDropDownConfInnValueController
                                                        ?.reset();
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            _model
                                                                .statusDropDownServicoProprioSpieValue
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            null,
                                                    );
                                                  });
                                                  _model.retornoAceitosSpie =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosSpie!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });
                                                  _model.keysToUpdateReturnSpie =
                                                      await actions
                                                          .keysToUpdate(
                                                    _model.retornoAceitosSpie
                                                        ?.toList(),
                                                  );
                                                  _model.addSpie =
                                                      await actions.addNA(
                                                    _model
                                                        .keysToUpdateReturnSpie
                                                        ?.toList(),
                                                  );
                                                  setState(() {
                                                    FFAppState()
                                                            .userControleVp =
                                                        _model.addSpie!;
                                                  });
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..ocupacaoHumana = _model
                                                            .statusDropDownOcupacaoValue
                                                        ..sistemaAuxiliarMaquina =
                                                            _model
                                                                .statusDropDownSistemaAuxiliarValue
                                                        ..plasticoReforcado = _model
                                                            .statusDropDownPlasticoReforValue
                                                        ..transporteProduto = _model
                                                            .statusDropDownTransporteValue
                                                        ..submarinoExploracaoProducao =
                                                            _model
                                                                .statusDropDownSubmarinoValue
                                                        ..diametroInterno = _model
                                                            .statusDropDownDiametroValue
                                                        ..conformidadeCodigoProjeto =
                                                            _model
                                                                .statusDropDownConfCodigoValue
                                                        ..instalacaoAntesDezembroDzOito =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownAntesDezValue,
                                                          '3',
                                                        )
                                                        ..possReconstMemCalcPMTA =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownPmtaValue,
                                                          '3',
                                                        )
                                                        ..classeA =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'A') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A3') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A4') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'A5')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeB =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'B') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'B2')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeC =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.statusDropDownFluidoValue ==
                                                                      'C') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C2') ||
                                                                  (_model.statusDropDownFluidoValue ==
                                                                      'C3')
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..classeD =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.statusDropDownFluidoValue ==
                                                                  'D'
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pressaoZeroCincoMenorUm =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pressaoKGF >=
                                                                      0.051) &&
                                                                  (_model.pressaoKGF <
                                                                      1.033)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorZZZOitoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >
                                                                      0.008) &&
                                                                  (_model.pv! <
                                                                      1.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualUmMenorDoisCincoPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 1.0) &&
                                                                  (_model.pv! <
                                                                      2.5)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualDoisCincoMenorTrintaPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >= 2.5) &&
                                                                  (_model.pv! <
                                                                      30.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualTrintaMenorCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          (_model.pv! >=
                                                                      30.0) &&
                                                                  (_model.pv! <
                                                                      100.0)
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..pVMaiorIgualCemPV =
                                                            valueOrDefault<
                                                                String>(
                                                          _model.pv! >= 100.0
                                                              ? '1'
                                                              : '0',
                                                          '3',
                                                        )
                                                        ..temperaturaMenor0C =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownTemperaturaValue,
                                                          '3',
                                                        )
                                                        ..semEvidenciaDeterioracao =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEvidenciaValue,
                                                          '3',
                                                        )
                                                        ..enchInternoEOUCatalisador =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownCatalisadorValue,
                                                          '3',
                                                        )
                                                        ..estudoAbonadorInspecaoInternaDif =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownEstudoAbandonadorValue,
                                                          '3',
                                                        )
                                                        ..fabricacaoSerie =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownFabSerieValue,
                                                          '3',
                                                        )
                                                        ..certificadoINMETRO =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownInmetroValue,
                                                          '3',
                                                        )
                                                        ..valvulasSegurCalibradasFab =
                                                            valueOrDefault<
                                                                String>(
                                                          _model
                                                              .statusDropDownValvulaValue,
                                                          '3',
                                                        )
                                                        ..sPIEServicoPropInspecaoEquip =
                                                            _model
                                                                .statusDropDownServicoProprioSpieValue,
                                                    );
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          if ((FFAppState().userControleVp.iNIConformTrzCincoQuatCincoTresInspecNIntru !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEstudoAbonadorInspecaoInternaDif() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasFabricacaoSerie() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasCertificadoINMETRO() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasValvulasSegurCalibradasFab() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSPIEServicoPropInspecaoEquip())
                                            Text(
                                              'Conformidade com 13.5.4.5.3 - INI?',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        fontSize: 16.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                            ),
                                          if ((FFAppState().userControleVp.iNIConformTrzCincoQuatCincoTresInspecNIntru !=
                                                  '3') &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasOcupacaoHumana() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSistemaAuxiliarMaquina() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPlasticoReforcado() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTransporteProduto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSubmarinoExploracaoProducao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasDiametroInterno() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasConformidadeCodigoProjeto() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasInstalacaoAntesDezembroDzOito() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPossReconstMemCalcPMTA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasClasseA() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPressaoZeroCincoMenorUm() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasPVMaiorZZZOitoPV() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasTemperaturaMenor0C() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSemEvidenciaDeterioracao() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEnchInternoEOUCatalisador() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasEstudoAbonadorInspecaoInternaDif() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasFabricacaoSerie() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasCertificadoINMETRO() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasValvulasSegurCalibradasFab() &&
                                              FFAppState()
                                                  .userControleVp
                                                  .hasSPIEServicoPropInspecaoEquip())
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      0.0, 0.0, 0.0, 25.0),
                                              child:
                                                  FlutterFlowDropDown<String>(
                                                controller: _model
                                                        .statusDropDownConfInnValueController ??=
                                                    FormFieldController<String>(
                                                  _model.statusDropDownConfInnValue ??=
                                                      '',
                                                ),
                                                options: List<String>.from(
                                                    ['1', '0']),
                                                optionLabels: ['Sim', 'Não'],
                                                onChanged: (val) async {
                                                  setState(() => _model
                                                          .statusDropDownConfInnValue =
                                                      val);
                                                  setState(() {
                                                    FFAppState()
                                                        .updateUserControleVpStruct(
                                                      (e) => e
                                                        ..iNIConformTrzCincoQuatCincoTresInspecNIntru =
                                                            _model
                                                                .statusDropDownConfInnValue,
                                                    );
                                                  });
                                                  _model.retornoAceitosConfInn =
                                                      await actions
                                                          .atualizaAceitosVP();
                                                  setState(() {
                                                    _model.vpAceitos = _model
                                                        .retornoAceitosConfInn!
                                                        .toList()
                                                        .cast<VpNrStruct>();
                                                  });

                                                  setState(() {});
                                                },
                                                width:
                                                    MediaQuery.sizeOf(context)
                                                            .width *
                                                        1.0,
                                                height: 50.0,
                                                textStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          fontSize: 18.0,
                                                          letterSpacing: 0.0,
                                                        ),
                                                hintText: 'Selecione',
                                                icon: Icon(
                                                  Icons
                                                      .keyboard_arrow_down_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                fillColor:
                                                    FlutterFlowTheme.of(context)
                                                        .secondaryBackground,
                                                elevation: 2.0,
                                                borderColor:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                borderWidth: 2.0,
                                                borderRadius: 8.0,
                                                margin: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        16.0, 4.0, 16.0, 4.0),
                                                hidesUnderline: true,
                                                isOverButton: true,
                                                isSearchable: false,
                                                isMultiSelect: false,
                                              ),
                                            ),
                                        ].divide(SizedBox(height: 10.0)),
                                      ),
                                      if ((_model.vpAceitos.length == 1) ||
                                          ((_model.vpAceitos.length == 2) &&
                                              (_model.vpAceitos[0].codigo ==
                                                  _model.vpAceitos[1].codigo)))
                                        Text(
                                          _model.vpAceitos.first.codigo,
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      if ((_model.vpAceitos.length == 0) &&
                                          FFAppState()
                                              .userControleVp
                                              .hasINIConformTrzCincoQuatCincoTresInspecNIntru())
                                        Text(
                                          'Código não encontrado! Reveja suas respostas.',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Inter',
                                                color: Color(0xFF4DA5DF),
                                                fontSize: 28.0,
                                                letterSpacing: 0.0,
                                                fontWeight: FontWeight.bold,
                                              ),
                                        ),
                                      Row(
                                        mainAxisSize: MainAxisSize.max,
                                        mainAxisAlignment:
                                            MainAxisAlignment.end,
                                        children: [
                                          FFButtonWidget(
                                            onPressed: () async {
                                              setState(() {
                                                FFAppState()
                                                        .createAplicabilidadeVP =
                                                    null;
                                                FFAppState()
                                                        .aplicabilidadeCreating =
                                                    false;
                                              });
                                              setState(() {
                                                FFAppState().userControleVp =
                                                    VpNrStruct();
                                              });
                                              setState(() {
                                                _model
                                                    .statusDropDownOutrosValueController1
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController2
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController3
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController4
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController5
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController6
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController7
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController8
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController9
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController10
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController11
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController12
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController13
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController14
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOutrosValueController15
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESMetalicoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESDiametroMaiorrValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESVinteMIlValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESEnterradoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPernasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESSapatasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPedestaisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESSelasValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESEmbarcacaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESNavioValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESPlataformaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTANQUESFluidoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDVolumeTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDPressaoMaiorZeroUmTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDPressaoDzNoveTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSpieTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAlcalisTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDTesteSegurancaTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDBarreiraSisTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSgcCombustaoTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAguaTratadaTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDFluidoTermicoTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDProgramaPlhTUBCValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDVolumeValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSpieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAlcalisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDTesteSegurancaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDBarreiraSisValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDSgcCombustaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDAguaTratadaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCALDFluidoTermicoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownRedePubTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOcupacaoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSistemaAuxiliarTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPlasticoReforTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTransporteTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSubmarinoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownDiametroTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfCodigoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAntesDezTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPmtaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFluidoTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTemperaturaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEvidenciaTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCatalisadorTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownServicoProprioSpieTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEstudoAbandonadorTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAmpliPorgTUBValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownOcupacaoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSistemaAuxiliarValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPlasticoReforValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTransporteValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownSubmarinoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownDiametroValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfCodigoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownAntesDezValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownPmtaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFluidoValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownTemperaturaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEvidenciaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownCatalisadorValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownEstudoAbandonadorValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownFabSerieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownValvulaValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownServicoProprioSpieValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownConfInnValueController
                                                    ?.reset();
                                                _model
                                                    .statusDropDownInmetroValueController
                                                    ?.reset();
                                              });
                                              setState(() {
                                                _model.showAvaliacaoVP = false;
                                                _model.showAvaliacaoTUBVP =
                                                    false;
                                                _model.showAvaliacaoTANQUES =
                                                    false;
                                                _model.showAvaliacaoCALDEIRAS =
                                                    false;
                                                _model.showAvaliacaoTUBCALDEIRAS =
                                                    false;
                                                _model.showAvaliacaoOUTROS =
                                                    false;
                                              });

                                              context.goNamed('Equipamentos');
                                            },
                                            text: 'Cancelar',
                                            options: FFButtonOptions(
                                              height: 40.0,
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      24.0, 0.0, 24.0, 0.0),
                                              iconPadding: EdgeInsetsDirectional
                                                  .fromSTEB(0.0, 0.0, 0.0, 0.0),
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondary,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .titleSmall
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color: Colors.white,
                                                        letterSpacing: 0.0,
                                                      ),
                                              elevation: 3.0,
                                              borderSide: BorderSide(
                                                color: Colors.transparent,
                                                width: 1.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                          FFButtonWidget(
                                            onPressed: ((_model
                                                            .vpAceitos.length >
                                                        1) ||
                                                    (_model.statusDropDownOcupacaoValue ==
                                                            null ||
                                                        _model.statusDropDownOcupacaoValue ==
                                                            ''))
                                                ? null
                                                : () async {
                                                    if (FFAppState()
                                                            .userControleVp
                                                            .classeA ==
                                                        '1') {
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) <
                                                          1.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '3';
                                                          _model.grupoRiscoFluido =
                                                              '5';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              1.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              2.5)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '3';
                                                          _model.grupoRiscoFluido =
                                                              '4';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              2.5) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              30.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '2';
                                                          _model.grupoRiscoFluido =
                                                              '3';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              30.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              100.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '1';
                                                          _model.grupoRiscoFluido =
                                                              '2';
                                                        });
                                                      }
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) >=
                                                          100.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '1';
                                                          _model.grupoRiscoFluido =
                                                              '1';
                                                        });
                                                      }
                                                    }
                                                    if (FFAppState()
                                                            .userControleVp
                                                            .classeB ==
                                                        '1') {
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) <
                                                          1.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '4';
                                                          _model.grupoRiscoFluido =
                                                              '5';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              1.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              2.5)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '4';
                                                          _model.grupoRiscoFluido =
                                                              '4';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              2.5) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              30.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '3';
                                                          _model.grupoRiscoFluido =
                                                              '3';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              30.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              100.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '2';
                                                          _model.grupoRiscoFluido =
                                                              '2';
                                                        });
                                                      }
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) >=
                                                          100.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '1';
                                                          _model.grupoRiscoFluido =
                                                              '1';
                                                        });
                                                      }
                                                    }
                                                    if (FFAppState()
                                                            .userControleVp
                                                            .classeC ==
                                                        '1') {
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) <
                                                          1.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '5';
                                                          _model.grupoRiscoFluido =
                                                              '5';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              1.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              2.5)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '4';
                                                          _model.grupoRiscoFluido =
                                                              '4';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              2.5) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              30.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '3';
                                                          _model.grupoRiscoFluido =
                                                              '3';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              30.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              100.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '2';
                                                          _model.grupoRiscoFluido =
                                                              '2';
                                                        });
                                                      }
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) >=
                                                          100.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '1';
                                                          _model.grupoRiscoFluido =
                                                              '1';
                                                        });
                                                      }
                                                    }
                                                    if (FFAppState()
                                                            .userControleVp
                                                            .classeD ==
                                                        '1') {
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) <
                                                          1.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '5';
                                                          _model.grupoRiscoFluido =
                                                              '5';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              1.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              2.5)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '5';
                                                          _model.grupoRiscoFluido =
                                                              '4';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              2.5) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              30.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '4';
                                                          _model.grupoRiscoFluido =
                                                              '3';
                                                        });
                                                      }
                                                      if ((valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) >=
                                                              30.0) &&
                                                          (valueOrDefault<
                                                                  double>(
                                                                _model.pv,
                                                                0.0,
                                                              ) <
                                                              100.0)) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '3';
                                                          _model.grupoRiscoFluido =
                                                              '2';
                                                        });
                                                      }
                                                      if (valueOrDefault<
                                                              double>(
                                                            _model.pv,
                                                            0.0,
                                                          ) >=
                                                          100.0) {
                                                        setState(() {
                                                          _model.categoriaFluido =
                                                              '2';
                                                          _model.grupoRiscoFluido =
                                                              '1';
                                                        });
                                                      }
                                                    }
                                                    _model.retornoPeriodicidadeVP =
                                                        await queryPeriodicidadeVpRecordOnce(
                                                      queryBuilder:
                                                          (periodicidadeVpRecord) =>
                                                              periodicidadeVpRecord
                                                                  .where(
                                                        'Codigo',
                                                        isEqualTo: _model
                                                            .vpAceitos
                                                            .first
                                                            .codigo,
                                                      ),
                                                      singleRecord: true,
                                                    ).then((s) =>
                                                            s.firstOrNull);

                                                    await AplicabilidadeVpRecord
                                                        .collection
                                                        .doc()
                                                        .set(
                                                            createAplicabilidadeVpRecordData(
                                                          ocupacaoHumana:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .ocupacaoHumana,
                                                          sistemaAuxiliarMaquina:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .sistemaAuxiliarMaquina,
                                                          plasticoReforcado:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .plasticoReforcado,
                                                          transporteProduto:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .transporteProduto,
                                                          submarinoExploracaoProducao:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .submarinoExploracaoProducao,
                                                          diametroInterno:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .diametroInterno,
                                                          conformidadeCodigoProjeto:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .conformidadeCodigoProjeto,
                                                          instalacaoAntesDezembroDzOito:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .instalacaoAntesDezembroDzOito,
                                                          possReconstMemCalcPMTA:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .possReconstMemCalcPMTA,
                                                          classeA: FFAppState()
                                                              .userControleVp
                                                              .classeA,
                                                          classeC: FFAppState()
                                                              .userControleVp
                                                              .classeC,
                                                          classeD: FFAppState()
                                                              .userControleVp
                                                              .classeD,
                                                          pressaoZeroCincoMenorUm:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .pressaoZeroCincoMenorUm,
                                                          pVMaiorZZZOitoPV:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .pVMaiorZZZOitoPV,
                                                          pVMaiorIgualUmMenorDoisCincoPV:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .pVMaiorIgualUmMenorDoisCincoPV,
                                                          pVMaiorIgualDoisCincoMenorTrintaPV:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .pVMaiorIgualDoisCincoMenorTrintaPV,
                                                          pVMaiorIgualTrintaMenorCemPV:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .pVMaiorIgualTrintaMenorCemPV,
                                                          pVMaiorIgualCemPV:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .pVMaiorIgualCemPV,
                                                          temperaturaMenor0C:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .temperaturaMenor0C,
                                                          semEvidenciaDeterioracao:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .semEvidenciaDeterioracao,
                                                          enchInternoEOUCatalisador:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .enchInternoEOUCatalisador,
                                                          estudoAbonadorInspecaoInternaDif:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .estudoAbonadorInspecaoInternaDif,
                                                          fabricacaoSerie:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .fabricacaoSerie,
                                                          certificadoINMETRO:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .certificadoINMETRO,
                                                          valvulasSegurCalibradasFab:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .valvulasSegurCalibradasFab,
                                                          sPIEServicoPropInspecaoEquip:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .sPIEServicoPropInspecaoEquip,
                                                          iNIConformTrzCincoQuatCincoTresInspecNIntru:
                                                              FFAppState()
                                                                  .userControleVp
                                                                  .iNIConformTrzCincoQuatCincoTresInspecNIntru,
                                                          codigo: _model
                                                              .vpAceitos
                                                              .first
                                                              .codigo,
                                                          classeB: FFAppState()
                                                              .userControleVp
                                                              .classeB,
                                                          potencialDeRisco: _model
                                                              .grupoRiscoFluido,
                                                          categoria: _model
                                                              .categoriaFluido,
                                                          inspecaoInterna: _model
                                                              .retornoPeriodicidadeVP
                                                              ?.interna,
                                                          inspecaoExterna: _model
                                                              .retornoPeriodicidadeVP
                                                              ?.externa,
                                                          equipamento: FFAppState()
                                                              .equipamentoAplicabilidade,
                                                          tipoEquipamento:
                                                              FFAppState()
                                                                  .tipoEquipAplicabilidade,
                                                          observacao: _model
                                                              .retornoPeriodicidadeVP
                                                              ?.observacao,
                                                          descricaoEquipamento:
                                                              FFAppState()
                                                                  .descriccaoEquipAplicabilidade,
                                                          tagEquipamento:
                                                              FFAppState()
                                                                  .tagEquipAplicabilidade,
                                                          serieEquipamento:
                                                              FFAppState()
                                                                  .serieEquipAplicabilidade,
                                                          avaliador:
                                                              currentUserDisplayName,
                                                          dataCadEquipamento:
                                                              FFAppState()
                                                                  .dataCadEquipAplicabilidade,
                                                          createdTime:
                                                              getCurrentTimestamp,
                                                          contrato: FFAppState()
                                                              .contrato,
                                                          fluido: () {
                                                            if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'A') {
                                                              return 'Combustível & Temperatura de Operação ≥ 200°C';
                                                            } else if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'A2') {
                                                              return 'H2 - Hidrogênio';
                                                            } else if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'A3') {
                                                              return 'C2H2 - Acetileno';
                                                            } else if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'A4') {
                                                              return 'Tóxico com Limite ≤ 20 ppm';
                                                            } else if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'B1') {
                                                              return 'Combustível & Temperatura de Operação < 200°C';
                                                            } else if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'B2') {
                                                              return 'Tóxico com Limite > 20 ppm';
                                                            } else if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'C') {
                                                              return 'Ar comprimido';
                                                            } else if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'C2') {
                                                              return 'Vapor de Água';
                                                            } else if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'C3') {
                                                              return 'Gás Asfixiante Simples';
                                                            } else if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'D') {
                                                              return 'Não classificado';
                                                            } else if (_model
                                                                    .statusDropDownFluidoValue ==
                                                                'A5') {
                                                              return 'Inflamável';
                                                            } else {
                                                              return '-';
                                                            }
                                                          }(),
                                                          pressao: _model
                                                              .pressaoInputTextController
                                                              .text,
                                                          pv: valueOrDefault<
                                                              String>(
                                                            _model.pv
                                                                ?.toString(),
                                                            '0',
                                                          ),
                                                        ));

                                                    await FFAppState()
                                                        .createAplicabilidadeVP!
                                                        .update(
                                                            createEquipamentosRecordData(
                                                          codigo: _model
                                                              .vpAceitos
                                                              .first
                                                              .codigo,
                                                          categoriaFluidoNR13:
                                                              _model
                                                                  .categoriaFluido,
                                                          interna:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeVP
                                                                ?.interna,
                                                            '0',
                                                          ),
                                                          externa:
                                                              valueOrDefault<
                                                                  String>(
                                                            _model
                                                                .retornoPeriodicidadeVP
                                                                ?.externa,
                                                            '0',
                                                          ),
                                                        ));
                                                    setState(() {
                                                      FFAppState()
                                                              .createAplicabilidadeVP =
                                                          null;
                                                      FFAppState()
                                                              .aplicabilidadeCreating =
                                                          false;
                                                    });
                                                    setState(() {
                                                      FFAppState()
                                                              .userControleVp =
                                                          VpNrStruct();
                                                    });

                                                    context.goNamed(
                                                        'Equipamentos');

                                                    setState(() {});
                                                  },
                                            text: 'Salvar',
                                            options: FFButtonOptions(
                                              height: 40.0,
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(
                                                      24.0, 0.0, 24.0, 0.0),
                                              iconPadding: EdgeInsetsDirectional
                                                  .fromSTEB(0.0, 0.0, 0.0, 0.0),
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .primary,
                                              textStyle:
                                                  FlutterFlowTheme.of(context)
                                                      .titleSmall
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color: Colors.white,
                                                        letterSpacing: 0.0,
                                                      ),
                                              elevation: 3.0,
                                              borderSide: BorderSide(
                                                color: Colors.transparent,
                                                width: 1.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                        ].divide(SizedBox(width: 50.0)),
                                      ),
                                      Row(
                                        mainAxisSize: MainAxisSize.max,
                                        mainAxisAlignment:
                                            MainAxisAlignment.spaceBetween,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Column(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .ocupacaoHumana,
                                                  'ocupação humana',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .sistemaAuxiliarMaquina,
                                                  'sistema auxiliar',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .plasticoReforcado,
                                                  'appStatelastico reforcado',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .transporteProduto,
                                                  'transorte produto',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .submarinoExploracaoProducao,
                                                  'appState',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .diametroInterno,
                                                  'appState',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .conformidadeCodigoProjeto,
                                                  'appState',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .instalacaoAntesDezembroDzOito,
                                                  'appState',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .possReconstMemCalcPMTA,
                                                  'appState',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .classeA,
                                                  'appState_Classe_A',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .classeB,
                                                  'appState',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .classeC,
                                                  'appState',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .classeD,
                                                  'appState',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .pressaoZeroCincoMenorUm,
                                                  'appState_pressao',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .pVMaiorZZZOitoPV,
                                                  'pv_1',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .pVMaiorIgualUmMenorDoisCincoPV,
                                                  'pv_2',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .pVMaiorIgualDoisCincoMenorTrintaPV,
                                                  'pv_3',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .pVMaiorIgualTrintaMenorCemPV,
                                                  'pv_4',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .pVMaiorIgualCemPV,
                                                  'pv_5',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .temperaturaMenor0C,
                                                  'temp',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .semEvidenciaDeterioracao,
                                                  'evidencia deteri',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .enchInternoEOUCatalisador,
                                                  'nch interno catalisador',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                valueOrDefault<String>(
                                                  FFAppState()
                                                      .userControleVp
                                                      .estudoAbonadorInspecaoInternaDif,
                                                  'estudo abandonador',
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                FFAppState()
                                                    .userControleVp
                                                    .fabricacaoSerie,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                FFAppState()
                                                    .userControleVp
                                                    .certificadoINMETRO,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                FFAppState()
                                                    .userControleVp
                                                    .valvulasSegurCalibradasFab,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                FFAppState()
                                                    .userControleVp
                                                    .sPIEServicoPropInspecaoEquip,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                              Text(
                                                FFAppState()
                                                    .userControleVp
                                                    .iNIConformTrzCincoQuatCincoTresInspecNIntru,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                              ),
                                            ],
                                          ),
                                          Builder(
                                            builder: (context) {
                                              final aceitosList =
                                                  _model.vpAceitos.toList();
                                              return Column(
                                                mainAxisSize: MainAxisSize.max,
                                                children: List.generate(
                                                    aceitosList.length,
                                                    (aceitosListIndex) {
                                                  final aceitosListItem =
                                                      aceitosList[
                                                          aceitosListIndex];
                                                  return Text(
                                                    aceitosListItem.codigo,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .bodyMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          letterSpacing: 0.0,
                                                        ),
                                                  );
                                                }),
                                              );
                                            },
                                          ),
                                        ],
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      if (!_model.showAvaliacaoVP &&
                          !_model.showAvaliacaoTUBVP &&
                          !FFAppState().aplicabilidadeCreating &&
                          !_model.showAvaliacaoTANQUES &&
                          !_model.showAvaliacaoCALDEIRAS &&
                          !_model.showAvaliacaoOUTROS &&
                          !_model.showAvaliacaoTUBCALDEIRAS)
                        Column(
                          mainAxisSize: MainAxisSize.max,
                          crossAxisAlignment: CrossAxisAlignment.stretch,
                          children: [
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 12.0, 16.0, 0.0),
                              child: Container(
                                width: double.infinity,
                                constraints: BoxConstraints(
                                  maxWidth: double.infinity,
                                ),
                                decoration: BoxDecoration(
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryBackground,
                                  borderRadius: BorderRadius.circular(8.0),
                                  border: Border.all(
                                    color:
                                        FlutterFlowTheme.of(context).alternate,
                                    width: 1.0,
                                  ),
                                ),
                                child: Column(
                                  mainAxisSize: MainAxisSize.max,
                                  children: [
                                    if (valueOrDefault<bool>(
                                      MediaQuery.sizeOf(context).width < 1025.0,
                                      true,
                                    ))
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            16.0, 12.0, 16.0, 12.0),
                                        child: Row(
                                          mainAxisSize: MainAxisSize.max,
                                          mainAxisAlignment:
                                              MainAxisAlignment.spaceBetween,
                                          children: [
                                            Row(
                                              mainAxisSize: MainAxisSize.max,
                                              children: [
                                                Icon(
                                                  Icons.swap_vert_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                                Text(
                                                  'Data',
                                                  textAlign: TextAlign.center,
                                                  style: FlutterFlowTheme.of(
                                                          context)
                                                      .labelMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .secondaryText,
                                                        fontSize: 14.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                                ),
                                              ],
                                            ),
                                            Icon(
                                              Icons.search_rounded,
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondaryText,
                                              size: 24.0,
                                            ),
                                            Row(
                                              mainAxisSize: MainAxisSize.max,
                                              children: [
                                                Text(
                                                  'Status',
                                                  textAlign: TextAlign.center,
                                                  style: FlutterFlowTheme.of(
                                                          context)
                                                      .labelMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .secondaryText,
                                                        fontSize: 14.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.w600,
                                                      ),
                                                ),
                                                Icon(
                                                  Icons.swap_vert_rounded,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  size: 24.0,
                                                ),
                                              ],
                                            ),
                                          ],
                                        ),
                                      ),
                                    if (valueOrDefault<bool>(
                                      MediaQuery.sizeOf(context).width >=
                                          1025.0,
                                      true,
                                    ))
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            16.0, 12.0, 16.0, 12.0),
                                        child: Row(
                                          mainAxisSize: MainAxisSize.max,
                                          mainAxisAlignment:
                                              MainAxisAlignment.spaceBetween,
                                          children: [
                                            Container(
                                              width: MediaQuery.sizeOf(context)
                                                      .width *
                                                  0.12,
                                              decoration: BoxDecoration(),
                                              child: Text(
                                                'Código',
                                                textAlign: TextAlign.center,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 14.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                              ),
                                            ),
                                            Container(
                                              width: MediaQuery.sizeOf(context)
                                                      .width *
                                                  0.1,
                                              decoration: BoxDecoration(),
                                              child: Text(
                                                'Tipo',
                                                textAlign: TextAlign.center,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 14.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                              ),
                                            ),
                                            Container(
                                              width: MediaQuery.sizeOf(context)
                                                      .width *
                                                  0.25,
                                              height: 15.0,
                                              decoration: BoxDecoration(),
                                              child: Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        15.0, 0.0, 0.0, 0.0),
                                                child: Text(
                                                  'Descrição',
                                                  textAlign: TextAlign.center,
                                                  style: FlutterFlowTheme.of(
                                                          context)
                                                      .labelMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .secondaryText,
                                                        fontSize: 14.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.bold,
                                                      ),
                                                ),
                                              ),
                                            ),
                                            Container(
                                              width: MediaQuery.sizeOf(context)
                                                      .width *
                                                  0.1,
                                              decoration: BoxDecoration(),
                                              child: Text(
                                                'Tag',
                                                textAlign: TextAlign.center,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 14.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                              ),
                                            ),
                                            Container(
                                              width: MediaQuery.sizeOf(context)
                                                      .width *
                                                  0.15,
                                              decoration: BoxDecoration(),
                                              child: Text(
                                                'Nº de série',
                                                textAlign: TextAlign.center,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 14.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                              ),
                                            ),
                                            Container(
                                              width: MediaQuery.sizeOf(context)
                                                      .width *
                                                  0.15,
                                              decoration: BoxDecoration(),
                                              child: Text(
                                                'Data cad.',
                                                textAlign: TextAlign.center,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          fontSize: 14.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                  ],
                                ),
                              ),
                            ),
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 0.0, 16.0, 20.0),
                              child: Container(
                                width: 100.0,
                                height: MediaQuery.sizeOf(context).height * 1.0,
                                decoration: BoxDecoration(
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                child: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      0.0, 15.0, 0.0, 0.0),
                                  child: Column(
                                    children: [
                                      Align(
                                        alignment: Alignment(-1.0, 0),
                                        child: FlutterFlowButtonTabBar(
                                          useToggleButtonStyle: false,
                                          isScrollable: true,
                                          labelStyle:
                                              FlutterFlowTheme.of(context)
                                                  .titleMedium
                                                  .override(
                                                    fontFamily: 'Readex Pro',
                                                    letterSpacing: 0.0,
                                                  ),
                                          unselectedLabelStyle: TextStyle(),
                                          labelColor:
                                              FlutterFlowTheme.of(context)
                                                  .primaryBackground,
                                          unselectedLabelColor:
                                              FlutterFlowTheme.of(context)
                                                  .secondaryText,
                                          backgroundColor:
                                              FlutterFlowTheme.of(context)
                                                  .primary,
                                          unselectedBackgroundColor:
                                              FlutterFlowTheme.of(context)
                                                  .alternate,
                                          borderColor:
                                              FlutterFlowTheme.of(context)
                                                  .primary,
                                          unselectedBorderColor:
                                              FlutterFlowTheme.of(context)
                                                  .alternate,
                                          borderWidth: 2.0,
                                          borderRadius: 8.0,
                                          elevation: 0.0,
                                          labelPadding:
                                              EdgeInsetsDirectional.fromSTEB(
                                                  10.0, 0.0, 10.0, 0.0),
                                          buttonMargin:
                                              EdgeInsetsDirectional.fromSTEB(
                                                  0.0, 0.0, 15.0, 10.0),
                                          padding: EdgeInsets.all(4.0),
                                          tabs: [
                                            Tab(
                                              text: 'Vasos de Pressão',
                                            ),
                                            Tab(
                                              text:
                                                  'Tubulação de Vasos de Pressão',
                                            ),
                                            Tab(
                                              text: 'Tanques',
                                            ),
                                            Tab(
                                              text: 'Caldeiras',
                                            ),
                                            Tab(
                                              text: 'Tubulação de Caldeiras',
                                            ),
                                            Tab(
                                              text: 'Outros',
                                            ),
                                          ],
                                          controller: _model.tabBarController,
                                          onTap: (i) async {
                                            [
                                              () async {},
                                              () async {},
                                              () async {},
                                              () async {},
                                              () async {},
                                              () async {}
                                            ][i]();
                                          },
                                        ),
                                      ),
                                      Expanded(
                                        child: TabBarView(
                                          controller: _model.tabBarController,
                                          children: [
                                            KeepAliveWidgetWrapper(
                                              builder: (context) => Container(
                                                height: 550.0,
                                                decoration: BoxDecoration(),
                                                child: StreamBuilder<
                                                    List<
                                                        AplicabilidadeVpRecord>>(
                                                  stream:
                                                      queryAplicabilidadeVpRecord(
                                                    queryBuilder:
                                                        (aplicabilidadeVpRecord) =>
                                                            aplicabilidadeVpRecord
                                                                .where(
                                                      'Contrato',
                                                      isEqualTo:
                                                          FFAppState().contrato,
                                                    ),
                                                  ),
                                                  builder: (context, snapshot) {
                                                    // Customize what your widget looks like when it's loading.
                                                    if (!snapshot.hasData) {
                                                      return Center(
                                                        child: SizedBox(
                                                          width: 50.0,
                                                          height: 50.0,
                                                          child:
                                                              CircularProgressIndicator(
                                                            valueColor:
                                                                AlwaysStoppedAnimation<
                                                                    Color>(
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .primary,
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }
                                                    List<AplicabilidadeVpRecord>
                                                        listViewAplicabilidadeVpRecordList =
                                                        snapshot.data!;
                                                    return ListView.separated(
                                                      padding:
                                                          EdgeInsets.fromLTRB(
                                                        0,
                                                        0.0,
                                                        0,
                                                        20.0,
                                                      ),
                                                      primary: false,
                                                      scrollDirection:
                                                          Axis.vertical,
                                                      itemCount:
                                                          listViewAplicabilidadeVpRecordList
                                                              .length,
                                                      separatorBuilder:
                                                          (_, __) => SizedBox(
                                                              height: 12.0),
                                                      itemBuilder: (context,
                                                          listViewIndex) {
                                                        final listViewAplicabilidadeVpRecord =
                                                            listViewAplicabilidadeVpRecordList[
                                                                listViewIndex];
                                                        return Column(
                                                          mainAxisSize:
                                                              MainAxisSize.max,
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .stretch,
                                                          children: [
                                                            Container(
                                                              width: double
                                                                  .infinity,
                                                              constraints:
                                                                  BoxConstraints(
                                                                maxWidth: 570.0,
                                                              ),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .secondaryBackground,
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            8.0),
                                                                border:
                                                                    Border.all(
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .alternate,
                                                                  width: 2.0,
                                                                ),
                                                              ),
                                                              child: InkWell(
                                                                splashColor: Colors
                                                                    .transparent,
                                                                focusColor: Colors
                                                                    .transparent,
                                                                hoverColor: Colors
                                                                    .transparent,
                                                                highlightColor:
                                                                    Colors
                                                                        .transparent,
                                                                onTap:
                                                                    () async {
                                                                  setState(() {
                                                                    FFAppState()
                                                                            .showAvaliacaoNR13 =
                                                                        listViewAplicabilidadeVpRecord
                                                                            .reference;
                                                                  });
                                                                  setState(() {
                                                                    _model.showAvaliacaoVP =
                                                                        true;
                                                                  });
                                                                },
                                                                child:
                                                                    SingleChildScrollView(
                                                                  child: Column(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .stretch,
                                                                    children: [
                                                                      if (valueOrDefault<
                                                                          bool>(
                                                                        MediaQuery.sizeOf(context).width >=
                                                                            1025.0,
                                                                        true,
                                                                      ))
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              16.0,
                                                                              12.0,
                                                                              16.0,
                                                                              12.0),
                                                                          child:
                                                                              Row(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            mainAxisAlignment:
                                                                                MainAxisAlignment.spaceBetween,
                                                                            children: [
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.12,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Row(
                                                                                  mainAxisSize: MainAxisSize.max,
                                                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                                                  children: [
                                                                                    Text(
                                                                                      valueOrDefault<String>(
                                                                                        listViewAplicabilidadeVpRecord.codigo,
                                                                                        'Serqual - Consultoria em Engenharia LTDA',
                                                                                      ),
                                                                                      textAlign: TextAlign.center,
                                                                                      style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                            fontFamily: 'Inter',
                                                                                            color: FlutterFlowTheme.of(context).primary,
                                                                                            fontSize: 16.0,
                                                                                            letterSpacing: 0.0,
                                                                                            fontWeight: FontWeight.bold,
                                                                                          ),
                                                                                    ),
                                                                                  ].divide(SizedBox(width: 5.0)),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeVpRecord.tipoEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.25,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeVpRecord.descricaoEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeVpRecord.tagEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.15,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeVpRecord.serieEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.15,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  valueOrDefault<String>(
                                                                                    dateTimeFormat('d/M/y', listViewAplicabilidadeVpRecord.dataCadEquipamento),
                                                                                    'data_cad_equip',
                                                                                  ),
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      if (valueOrDefault<
                                                                          bool>(
                                                                        MediaQuery.sizeOf(context).width <=
                                                                            1024.0,
                                                                        true,
                                                                      ))
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              0.0,
                                                                              12.0,
                                                                              0.0,
                                                                              10.0),
                                                                          child:
                                                                              Column(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            children: [
                                                                              SingleChildScrollView(
                                                                                scrollDirection: Axis.horizontal,
                                                                                child: Row(
                                                                                  mainAxisSize: MainAxisSize.max,
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  children: [
                                                                                    Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.4,
                                                                                      decoration: BoxDecoration(
                                                                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                        crossAxisAlignment: CrossAxisAlignment.stretch,
                                                                                        children: [
                                                                                          Row(
                                                                                            mainAxisSize: MainAxisSize.max,
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            children: [
                                                                                              Text(
                                                                                                listViewAplicabilidadeVpRecord.codigo,
                                                                                                textAlign: TextAlign.center,
                                                                                                style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                      fontFamily: 'Inter',
                                                                                                      color: FlutterFlowTheme.of(context).primary,
                                                                                                      fontSize: 16.0,
                                                                                                      letterSpacing: 0.0,
                                                                                                      fontWeight: FontWeight.bold,
                                                                                                    ),
                                                                                              ),
                                                                                            ].divide(SizedBox(width: 5.0)),
                                                                                          ),
                                                                                          Text(
                                                                                            listViewAplicabilidadeVpRecord.tipoEquipamento,
                                                                                            textAlign: TextAlign.center,
                                                                                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                  fontFamily: 'Inter',
                                                                                                  color: FlutterFlowTheme.of(context).primaryText,
                                                                                                  fontSize: 16.0,
                                                                                                  letterSpacing: 0.0,
                                                                                                  fontWeight: FontWeight.normal,
                                                                                                ),
                                                                                          ),
                                                                                        ].divide(SizedBox(height: 4.0)),
                                                                                      ),
                                                                                    ),
                                                                                    Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.35,
                                                                                      decoration: BoxDecoration(
                                                                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                                        children: [
                                                                                          Padding(
                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                            child: Text(
                                                                                              listViewAplicabilidadeVpRecord.descricaoEquipamento,
                                                                                              textAlign: TextAlign.center,
                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                    fontFamily: 'Inter',
                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                    fontSize: 16.0,
                                                                                                    letterSpacing: 0.0,
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                  ),
                                                                                            ),
                                                                                          ),
                                                                                          Padding(
                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                            child: Text(
                                                                                              listViewAplicabilidadeVpRecord.tagEquipamento,
                                                                                              textAlign: TextAlign.center,
                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                    fontFamily: 'Inter',
                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                    fontSize: 16.0,
                                                                                                    letterSpacing: 0.0,
                                                                                                    fontWeight: FontWeight.normal,
                                                                                                  ),
                                                                                            ),
                                                                                          ),
                                                                                        ].divide(SizedBox(height: 4.0)),
                                                                                      ),
                                                                                    ),
                                                                                  ].divide(SizedBox(width: 40.0)),
                                                                                ),
                                                                              ),
                                                                              ListView(
                                                                                padding: EdgeInsets.zero,
                                                                                shrinkWrap: true,
                                                                                scrollDirection: Axis.vertical,
                                                                                children: [
                                                                                  Container(
                                                                                    decoration: BoxDecoration(),
                                                                                    child: Container(
                                                                                      width: double.infinity,
                                                                                      color: Color(0x00000000),
                                                                                      child: ExpandableNotifier(
                                                                                        initialExpanded: false,
                                                                                        child: ExpandablePanel(
                                                                                          header: Align(
                                                                                            alignment: AlignmentDirectional(0.0, 0.0),
                                                                                            child: Icon(
                                                                                              Icons.keyboard_arrow_down_rounded,
                                                                                              color: FlutterFlowTheme.of(context).alternate,
                                                                                              size: 26.0,
                                                                                            ),
                                                                                          ),
                                                                                          collapsed: Container(),
                                                                                          expanded: Container(
                                                                                            width: MediaQuery.sizeOf(context).width * 1.0,
                                                                                            decoration: BoxDecoration(
                                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                            ),
                                                                                            child: Column(
                                                                                              mainAxisSize: MainAxisSize.max,
                                                                                              children: [
                                                                                                SizedBox(
                                                                                                  width: 280.0,
                                                                                                  child: Divider(
                                                                                                    thickness: 1.0,
                                                                                                    color: FlutterFlowTheme.of(context).alternate,
                                                                                                  ),
                                                                                                ),
                                                                                                Padding(
                                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
                                                                                                  child: Row(
                                                                                                    mainAxisSize: MainAxisSize.max,
                                                                                                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                                                                                                    children: [
                                                                                                      Row(
                                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              'Nº de série:',
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              listViewAplicabilidadeVpRecord.serieEquipamento,
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.normal,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ].divide(SizedBox(width: 5.0)),
                                                                                                      ),
                                                                                                      Row(
                                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              'Data cad.:',
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              valueOrDefault<String>(
                                                                                                                dateTimeFormat('d/M/y', listViewAplicabilidadeVpRecord.dataCadEquipamento),
                                                                                                                'data_cad_equip',
                                                                                                              ),
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.normal,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ].divide(SizedBox(width: 5.0)),
                                                                                                      ),
                                                                                                    ].divide(SizedBox(width: 3.0)),
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ),
                                                                                          theme: ExpandableThemeData(
                                                                                            tapHeaderToExpand: true,
                                                                                            tapBodyToExpand: false,
                                                                                            tapBodyToCollapse: false,
                                                                                            headerAlignment: ExpandablePanelHeaderAlignment.center,
                                                                                            hasIcon: false,
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        );
                                                      },
                                                    );
                                                  },
                                                ),
                                              ),
                                            ),
                                            KeepAliveWidgetWrapper(
                                              builder: (context) => Container(
                                                height: 550.0,
                                                decoration: BoxDecoration(),
                                                child: StreamBuilder<
                                                    List<
                                                        AplicabilidadeTubVPRecord>>(
                                                  stream:
                                                      queryAplicabilidadeTubVPRecord(
                                                    queryBuilder:
                                                        (aplicabilidadeTubVPRecord) =>
                                                            aplicabilidadeTubVPRecord
                                                                .where(
                                                      'Contrato',
                                                      isEqualTo:
                                                          FFAppState().contrato,
                                                    ),
                                                  ),
                                                  builder: (context, snapshot) {
                                                    // Customize what your widget looks like when it's loading.
                                                    if (!snapshot.hasData) {
                                                      return Center(
                                                        child: SizedBox(
                                                          width: 50.0,
                                                          height: 50.0,
                                                          child:
                                                              CircularProgressIndicator(
                                                            valueColor:
                                                                AlwaysStoppedAnimation<
                                                                    Color>(
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .primary,
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }
                                                    List<AplicabilidadeTubVPRecord>
                                                        listViewAplicabilidadeTubVPRecordList =
                                                        snapshot.data!;
                                                    return ListView.separated(
                                                      padding:
                                                          EdgeInsets.fromLTRB(
                                                        0,
                                                        0.0,
                                                        0,
                                                        20.0,
                                                      ),
                                                      primary: false,
                                                      scrollDirection:
                                                          Axis.vertical,
                                                      itemCount:
                                                          listViewAplicabilidadeTubVPRecordList
                                                              .length,
                                                      separatorBuilder:
                                                          (_, __) => SizedBox(
                                                              height: 12.0),
                                                      itemBuilder: (context,
                                                          listViewIndex) {
                                                        final listViewAplicabilidadeTubVPRecord =
                                                            listViewAplicabilidadeTubVPRecordList[
                                                                listViewIndex];
                                                        return Column(
                                                          mainAxisSize:
                                                              MainAxisSize.max,
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .stretch,
                                                          children: [
                                                            Container(
                                                              width: double
                                                                  .infinity,
                                                              constraints:
                                                                  BoxConstraints(
                                                                maxWidth: 570.0,
                                                              ),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .secondaryBackground,
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            8.0),
                                                                border:
                                                                    Border.all(
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .alternate,
                                                                  width: 2.0,
                                                                ),
                                                              ),
                                                              child: InkWell(
                                                                splashColor: Colors
                                                                    .transparent,
                                                                focusColor: Colors
                                                                    .transparent,
                                                                hoverColor: Colors
                                                                    .transparent,
                                                                highlightColor:
                                                                    Colors
                                                                        .transparent,
                                                                onTap:
                                                                    () async {
                                                                  setState(() {
                                                                    FFAppState()
                                                                            .showAvaliacaoNR13TUBVP =
                                                                        listViewAplicabilidadeTubVPRecord
                                                                            .reference;
                                                                  });
                                                                  setState(() {
                                                                    _model.showAvaliacaoTUBVP =
                                                                        true;
                                                                  });
                                                                },
                                                                child:
                                                                    SingleChildScrollView(
                                                                  child: Column(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .stretch,
                                                                    children: [
                                                                      if (valueOrDefault<
                                                                          bool>(
                                                                        MediaQuery.sizeOf(context).width >=
                                                                            1025.0,
                                                                        true,
                                                                      ))
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              16.0,
                                                                              12.0,
                                                                              16.0,
                                                                              12.0),
                                                                          child:
                                                                              Row(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            mainAxisAlignment:
                                                                                MainAxisAlignment.spaceBetween,
                                                                            children: [
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.12,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Row(
                                                                                  mainAxisSize: MainAxisSize.max,
                                                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                                                  children: [
                                                                                    Text(
                                                                                      valueOrDefault<String>(
                                                                                        listViewAplicabilidadeTubVPRecord.codigo,
                                                                                        'Serqual - Consultoria em Engenharia LTDA',
                                                                                      ),
                                                                                      textAlign: TextAlign.center,
                                                                                      style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                            fontFamily: 'Inter',
                                                                                            color: FlutterFlowTheme.of(context).primary,
                                                                                            fontSize: 16.0,
                                                                                            letterSpacing: 0.0,
                                                                                            fontWeight: FontWeight.bold,
                                                                                          ),
                                                                                    ),
                                                                                  ].divide(SizedBox(width: 5.0)),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeTubVPRecord.tipoEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.25,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeTubVPRecord.descricaoEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeTubVPRecord.tagEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.15,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeTubVPRecord.serieEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.15,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  valueOrDefault<String>(
                                                                                    listViewAplicabilidadeTubVPRecord.dataCadEquipamento,
                                                                                    'data_cad_equip',
                                                                                  ),
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      if (valueOrDefault<
                                                                          bool>(
                                                                        MediaQuery.sizeOf(context).width <=
                                                                            1024.0,
                                                                        true,
                                                                      ))
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              0.0,
                                                                              12.0,
                                                                              0.0,
                                                                              10.0),
                                                                          child:
                                                                              Column(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            children: [
                                                                              SingleChildScrollView(
                                                                                scrollDirection: Axis.horizontal,
                                                                                child: Row(
                                                                                  mainAxisSize: MainAxisSize.max,
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  children: [
                                                                                    Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.4,
                                                                                      decoration: BoxDecoration(
                                                                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                        crossAxisAlignment: CrossAxisAlignment.stretch,
                                                                                        children: [
                                                                                          Row(
                                                                                            mainAxisSize: MainAxisSize.max,
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            children: [
                                                                                              Text(
                                                                                                listViewAplicabilidadeTubVPRecord.codigo,
                                                                                                textAlign: TextAlign.center,
                                                                                                style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                      fontFamily: 'Inter',
                                                                                                      color: FlutterFlowTheme.of(context).primary,
                                                                                                      fontSize: 16.0,
                                                                                                      letterSpacing: 0.0,
                                                                                                      fontWeight: FontWeight.bold,
                                                                                                    ),
                                                                                              ),
                                                                                            ].divide(SizedBox(width: 5.0)),
                                                                                          ),
                                                                                          Text(
                                                                                            listViewAplicabilidadeTubVPRecord.tipoEquipamento,
                                                                                            textAlign: TextAlign.center,
                                                                                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                  fontFamily: 'Inter',
                                                                                                  color: FlutterFlowTheme.of(context).primaryText,
                                                                                                  fontSize: 16.0,
                                                                                                  letterSpacing: 0.0,
                                                                                                  fontWeight: FontWeight.normal,
                                                                                                ),
                                                                                          ),
                                                                                        ].divide(SizedBox(height: 4.0)),
                                                                                      ),
                                                                                    ),
                                                                                    Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.35,
                                                                                      decoration: BoxDecoration(
                                                                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                                        children: [
                                                                                          Padding(
                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                            child: Text(
                                                                                              listViewAplicabilidadeTubVPRecord.descricaoEquipamento,
                                                                                              textAlign: TextAlign.center,
                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                    fontFamily: 'Inter',
                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                    fontSize: 16.0,
                                                                                                    letterSpacing: 0.0,
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                  ),
                                                                                            ),
                                                                                          ),
                                                                                          Padding(
                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                            child: Text(
                                                                                              listViewAplicabilidadeTubVPRecord.tagEquipamento,
                                                                                              textAlign: TextAlign.center,
                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                    fontFamily: 'Inter',
                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                    fontSize: 16.0,
                                                                                                    letterSpacing: 0.0,
                                                                                                    fontWeight: FontWeight.normal,
                                                                                                  ),
                                                                                            ),
                                                                                          ),
                                                                                        ].divide(SizedBox(height: 4.0)),
                                                                                      ),
                                                                                    ),
                                                                                  ].divide(SizedBox(width: 40.0)),
                                                                                ),
                                                                              ),
                                                                              ListView(
                                                                                padding: EdgeInsets.zero,
                                                                                shrinkWrap: true,
                                                                                scrollDirection: Axis.vertical,
                                                                                children: [
                                                                                  Container(
                                                                                    decoration: BoxDecoration(),
                                                                                    child: Container(
                                                                                      width: double.infinity,
                                                                                      color: Color(0x00000000),
                                                                                      child: ExpandableNotifier(
                                                                                        initialExpanded: false,
                                                                                        child: ExpandablePanel(
                                                                                          header: Align(
                                                                                            alignment: AlignmentDirectional(0.0, 0.0),
                                                                                            child: Icon(
                                                                                              Icons.keyboard_arrow_down_rounded,
                                                                                              color: FlutterFlowTheme.of(context).alternate,
                                                                                              size: 26.0,
                                                                                            ),
                                                                                          ),
                                                                                          collapsed: Container(),
                                                                                          expanded: Container(
                                                                                            width: MediaQuery.sizeOf(context).width * 1.0,
                                                                                            decoration: BoxDecoration(
                                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                            ),
                                                                                            child: Column(
                                                                                              mainAxisSize: MainAxisSize.max,
                                                                                              children: [
                                                                                                SizedBox(
                                                                                                  width: 280.0,
                                                                                                  child: Divider(
                                                                                                    thickness: 1.0,
                                                                                                    color: FlutterFlowTheme.of(context).alternate,
                                                                                                  ),
                                                                                                ),
                                                                                                Padding(
                                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
                                                                                                  child: Row(
                                                                                                    mainAxisSize: MainAxisSize.max,
                                                                                                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                                                                                                    children: [
                                                                                                      Row(
                                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              'Nº de série:',
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              listViewAplicabilidadeTubVPRecord.serieEquipamento,
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.normal,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ].divide(SizedBox(width: 5.0)),
                                                                                                      ),
                                                                                                      Row(
                                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              'Data cad.:',
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              valueOrDefault<String>(
                                                                                                                listViewAplicabilidadeTubVPRecord.dataCadEquipamento,
                                                                                                                'data_cad_equip',
                                                                                                              ),
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.normal,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ].divide(SizedBox(width: 5.0)),
                                                                                                      ),
                                                                                                    ].divide(SizedBox(width: 3.0)),
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ),
                                                                                          theme: ExpandableThemeData(
                                                                                            tapHeaderToExpand: true,
                                                                                            tapBodyToExpand: false,
                                                                                            tapBodyToCollapse: false,
                                                                                            headerAlignment: ExpandablePanelHeaderAlignment.center,
                                                                                            hasIcon: false,
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        );
                                                      },
                                                    );
                                                  },
                                                ),
                                              ),
                                            ),
                                            KeepAliveWidgetWrapper(
                                              builder: (context) => Container(
                                                height: 550.0,
                                                decoration: BoxDecoration(),
                                                child: StreamBuilder<
                                                    List<
                                                        AplicabilidadeTANQUESRecord>>(
                                                  stream:
                                                      queryAplicabilidadeTANQUESRecord(
                                                    queryBuilder:
                                                        (aplicabilidadeTANQUESRecord) =>
                                                            aplicabilidadeTANQUESRecord
                                                                .where(
                                                      'Contrato',
                                                      isEqualTo:
                                                          FFAppState().contrato,
                                                    ),
                                                  ),
                                                  builder: (context, snapshot) {
                                                    // Customize what your widget looks like when it's loading.
                                                    if (!snapshot.hasData) {
                                                      return Center(
                                                        child: SizedBox(
                                                          width: 50.0,
                                                          height: 50.0,
                                                          child:
                                                              CircularProgressIndicator(
                                                            valueColor:
                                                                AlwaysStoppedAnimation<
                                                                    Color>(
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .primary,
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }
                                                    List<AplicabilidadeTANQUESRecord>
                                                        listViewAplicabilidadeTANQUESRecordList =
                                                        snapshot.data!;
                                                    return ListView.separated(
                                                      padding:
                                                          EdgeInsets.fromLTRB(
                                                        0,
                                                        0.0,
                                                        0,
                                                        20.0,
                                                      ),
                                                      primary: false,
                                                      scrollDirection:
                                                          Axis.vertical,
                                                      itemCount:
                                                          listViewAplicabilidadeTANQUESRecordList
                                                              .length,
                                                      separatorBuilder:
                                                          (_, __) => SizedBox(
                                                              height: 12.0),
                                                      itemBuilder: (context,
                                                          listViewIndex) {
                                                        final listViewAplicabilidadeTANQUESRecord =
                                                            listViewAplicabilidadeTANQUESRecordList[
                                                                listViewIndex];
                                                        return Column(
                                                          mainAxisSize:
                                                              MainAxisSize.max,
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .stretch,
                                                          children: [
                                                            Container(
                                                              width: double
                                                                  .infinity,
                                                              constraints:
                                                                  BoxConstraints(
                                                                maxWidth: 570.0,
                                                              ),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .secondaryBackground,
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            8.0),
                                                                border:
                                                                    Border.all(
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .alternate,
                                                                  width: 2.0,
                                                                ),
                                                              ),
                                                              child: InkWell(
                                                                splashColor: Colors
                                                                    .transparent,
                                                                focusColor: Colors
                                                                    .transparent,
                                                                hoverColor: Colors
                                                                    .transparent,
                                                                highlightColor:
                                                                    Colors
                                                                        .transparent,
                                                                onTap:
                                                                    () async {
                                                                  setState(() {
                                                                    FFAppState()
                                                                            .showAvaliacaoNR13TANQUES =
                                                                        listViewAplicabilidadeTANQUESRecord
                                                                            .reference;
                                                                  });
                                                                  setState(() {
                                                                    _model.showAvaliacaoTANQUES =
                                                                        true;
                                                                  });
                                                                },
                                                                child:
                                                                    SingleChildScrollView(
                                                                  child: Column(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .stretch,
                                                                    children: [
                                                                      if (valueOrDefault<
                                                                          bool>(
                                                                        MediaQuery.sizeOf(context).width >=
                                                                            1025.0,
                                                                        true,
                                                                      ))
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              16.0,
                                                                              12.0,
                                                                              16.0,
                                                                              12.0),
                                                                          child:
                                                                              Row(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            mainAxisAlignment:
                                                                                MainAxisAlignment.spaceBetween,
                                                                            children: [
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.12,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Row(
                                                                                  mainAxisSize: MainAxisSize.max,
                                                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                                                  children: [
                                                                                    Text(
                                                                                      valueOrDefault<String>(
                                                                                        listViewAplicabilidadeTANQUESRecord.codigo,
                                                                                        'Serqual - Consultoria em Engenharia LTDA',
                                                                                      ),
                                                                                      textAlign: TextAlign.center,
                                                                                      style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                            fontFamily: 'Inter',
                                                                                            color: FlutterFlowTheme.of(context).primary,
                                                                                            fontSize: 16.0,
                                                                                            letterSpacing: 0.0,
                                                                                            fontWeight: FontWeight.bold,
                                                                                          ),
                                                                                    ),
                                                                                  ].divide(SizedBox(width: 5.0)),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeTANQUESRecord.tipoEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.25,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeTANQUESRecord.descricaoEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeTANQUESRecord.tagEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.15,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeTANQUESRecord.serieEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.15,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  valueOrDefault<String>(
                                                                                    listViewAplicabilidadeTANQUESRecord.dataCadEquipamento,
                                                                                    'data_cad_equip',
                                                                                  ).maybeHandleOverflow(maxChars: 10),
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      if (valueOrDefault<
                                                                          bool>(
                                                                        MediaQuery.sizeOf(context).width <=
                                                                            1024.0,
                                                                        true,
                                                                      ))
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              0.0,
                                                                              12.0,
                                                                              0.0,
                                                                              10.0),
                                                                          child:
                                                                              Column(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            children: [
                                                                              SingleChildScrollView(
                                                                                scrollDirection: Axis.horizontal,
                                                                                child: Row(
                                                                                  mainAxisSize: MainAxisSize.max,
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  children: [
                                                                                    Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.4,
                                                                                      decoration: BoxDecoration(
                                                                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                        crossAxisAlignment: CrossAxisAlignment.stretch,
                                                                                        children: [
                                                                                          Row(
                                                                                            mainAxisSize: MainAxisSize.max,
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            children: [
                                                                                              Text(
                                                                                                listViewAplicabilidadeTANQUESRecord.codigo,
                                                                                                textAlign: TextAlign.center,
                                                                                                style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                      fontFamily: 'Inter',
                                                                                                      color: FlutterFlowTheme.of(context).primary,
                                                                                                      fontSize: 16.0,
                                                                                                      letterSpacing: 0.0,
                                                                                                      fontWeight: FontWeight.bold,
                                                                                                    ),
                                                                                              ),
                                                                                            ].divide(SizedBox(width: 5.0)),
                                                                                          ),
                                                                                          Text(
                                                                                            listViewAplicabilidadeTANQUESRecord.tipoEquipamento,
                                                                                            textAlign: TextAlign.center,
                                                                                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                  fontFamily: 'Inter',
                                                                                                  color: FlutterFlowTheme.of(context).primaryText,
                                                                                                  fontSize: 16.0,
                                                                                                  letterSpacing: 0.0,
                                                                                                  fontWeight: FontWeight.normal,
                                                                                                ),
                                                                                          ),
                                                                                        ].divide(SizedBox(height: 4.0)),
                                                                                      ),
                                                                                    ),
                                                                                    Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.35,
                                                                                      decoration: BoxDecoration(
                                                                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                                        children: [
                                                                                          Padding(
                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                            child: Text(
                                                                                              listViewAplicabilidadeTANQUESRecord.descricaoEquipamento,
                                                                                              textAlign: TextAlign.center,
                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                    fontFamily: 'Inter',
                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                    fontSize: 16.0,
                                                                                                    letterSpacing: 0.0,
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                  ),
                                                                                            ),
                                                                                          ),
                                                                                          Padding(
                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                            child: Text(
                                                                                              listViewAplicabilidadeTANQUESRecord.tagEquipamento,
                                                                                              textAlign: TextAlign.center,
                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                    fontFamily: 'Inter',
                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                    fontSize: 16.0,
                                                                                                    letterSpacing: 0.0,
                                                                                                    fontWeight: FontWeight.normal,
                                                                                                  ),
                                                                                            ),
                                                                                          ),
                                                                                        ].divide(SizedBox(height: 4.0)),
                                                                                      ),
                                                                                    ),
                                                                                  ].divide(SizedBox(width: 40.0)),
                                                                                ),
                                                                              ),
                                                                              ListView(
                                                                                padding: EdgeInsets.zero,
                                                                                shrinkWrap: true,
                                                                                scrollDirection: Axis.vertical,
                                                                                children: [
                                                                                  Container(
                                                                                    decoration: BoxDecoration(),
                                                                                    child: Container(
                                                                                      width: double.infinity,
                                                                                      color: Color(0x00000000),
                                                                                      child: ExpandableNotifier(
                                                                                        initialExpanded: false,
                                                                                        child: ExpandablePanel(
                                                                                          header: Align(
                                                                                            alignment: AlignmentDirectional(0.0, 0.0),
                                                                                            child: Icon(
                                                                                              Icons.keyboard_arrow_down_rounded,
                                                                                              color: FlutterFlowTheme.of(context).alternate,
                                                                                              size: 26.0,
                                                                                            ),
                                                                                          ),
                                                                                          collapsed: Container(),
                                                                                          expanded: Container(
                                                                                            width: MediaQuery.sizeOf(context).width * 1.0,
                                                                                            decoration: BoxDecoration(
                                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                            ),
                                                                                            child: Column(
                                                                                              mainAxisSize: MainAxisSize.max,
                                                                                              children: [
                                                                                                SizedBox(
                                                                                                  width: 280.0,
                                                                                                  child: Divider(
                                                                                                    thickness: 1.0,
                                                                                                    color: FlutterFlowTheme.of(context).alternate,
                                                                                                  ),
                                                                                                ),
                                                                                                Padding(
                                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
                                                                                                  child: Row(
                                                                                                    mainAxisSize: MainAxisSize.max,
                                                                                                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                                                                                                    children: [
                                                                                                      Row(
                                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              'Nº de série:',
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              listViewAplicabilidadeTANQUESRecord.serieEquipamento,
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.normal,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ].divide(SizedBox(width: 5.0)),
                                                                                                      ),
                                                                                                      Row(
                                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              'Data cad.:',
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              valueOrDefault<String>(
                                                                                                                listViewAplicabilidadeTANQUESRecord.dataCadEquipamento,
                                                                                                                'data_cad_equip',
                                                                                                              ),
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.normal,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ].divide(SizedBox(width: 5.0)),
                                                                                                      ),
                                                                                                    ].divide(SizedBox(width: 3.0)),
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ),
                                                                                          theme: ExpandableThemeData(
                                                                                            tapHeaderToExpand: true,
                                                                                            tapBodyToExpand: false,
                                                                                            tapBodyToCollapse: false,
                                                                                            headerAlignment: ExpandablePanelHeaderAlignment.center,
                                                                                            hasIcon: false,
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        );
                                                      },
                                                    );
                                                  },
                                                ),
                                              ),
                                            ),
                                            KeepAliveWidgetWrapper(
                                              builder: (context) => Container(
                                                height: 550.0,
                                                decoration: BoxDecoration(),
                                                child: StreamBuilder<
                                                    List<
                                                        AplicabilidadeCALDSRecord>>(
                                                  stream:
                                                      queryAplicabilidadeCALDSRecord(
                                                    queryBuilder:
                                                        (aplicabilidadeCALDSRecord) =>
                                                            aplicabilidadeCALDSRecord
                                                                .where(
                                                      'Contrato',
                                                      isEqualTo:
                                                          FFAppState().contrato,
                                                    ),
                                                  ),
                                                  builder: (context, snapshot) {
                                                    // Customize what your widget looks like when it's loading.
                                                    if (!snapshot.hasData) {
                                                      return Center(
                                                        child: SizedBox(
                                                          width: 50.0,
                                                          height: 50.0,
                                                          child:
                                                              CircularProgressIndicator(
                                                            valueColor:
                                                                AlwaysStoppedAnimation<
                                                                    Color>(
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .primary,
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }
                                                    List<AplicabilidadeCALDSRecord>
                                                        listViewAplicabilidadeCALDSRecordList =
                                                        snapshot.data!;
                                                    return ListView.separated(
                                                      padding:
                                                          EdgeInsets.fromLTRB(
                                                        0,
                                                        0.0,
                                                        0,
                                                        20.0,
                                                      ),
                                                      primary: false,
                                                      scrollDirection:
                                                          Axis.vertical,
                                                      itemCount:
                                                          listViewAplicabilidadeCALDSRecordList
                                                              .length,
                                                      separatorBuilder:
                                                          (_, __) => SizedBox(
                                                              height: 12.0),
                                                      itemBuilder: (context,
                                                          listViewIndex) {
                                                        final listViewAplicabilidadeCALDSRecord =
                                                            listViewAplicabilidadeCALDSRecordList[
                                                                listViewIndex];
                                                        return Column(
                                                          mainAxisSize:
                                                              MainAxisSize.max,
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .stretch,
                                                          children: [
                                                            Container(
                                                              width: double
                                                                  .infinity,
                                                              constraints:
                                                                  BoxConstraints(
                                                                maxWidth: 570.0,
                                                              ),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .secondaryBackground,
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            8.0),
                                                                border:
                                                                    Border.all(
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .alternate,
                                                                  width: 2.0,
                                                                ),
                                                              ),
                                                              child: InkWell(
                                                                splashColor: Colors
                                                                    .transparent,
                                                                focusColor: Colors
                                                                    .transparent,
                                                                hoverColor: Colors
                                                                    .transparent,
                                                                highlightColor:
                                                                    Colors
                                                                        .transparent,
                                                                onTap:
                                                                    () async {
                                                                  setState(() {
                                                                    FFAppState()
                                                                            .showAvaliacaoNRCALDEIRAS =
                                                                        listViewAplicabilidadeCALDSRecord
                                                                            .reference;
                                                                  });
                                                                  setState(() {
                                                                    _model.showAvaliacaoCALDEIRAS =
                                                                        true;
                                                                  });
                                                                },
                                                                child:
                                                                    SingleChildScrollView(
                                                                  child: Column(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .stretch,
                                                                    children: [
                                                                      if (valueOrDefault<
                                                                          bool>(
                                                                        MediaQuery.sizeOf(context).width >=
                                                                            1025.0,
                                                                        true,
                                                                      ))
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              16.0,
                                                                              12.0,
                                                                              16.0,
                                                                              12.0),
                                                                          child:
                                                                              Row(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            mainAxisAlignment:
                                                                                MainAxisAlignment.spaceBetween,
                                                                            children: [
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.12,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Row(
                                                                                  mainAxisSize: MainAxisSize.max,
                                                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                                                  children: [
                                                                                    Text(
                                                                                      valueOrDefault<String>(
                                                                                        listViewAplicabilidadeCALDSRecord.codigo,
                                                                                        'Serqual - Consultoria em Engenharia LTDA',
                                                                                      ),
                                                                                      textAlign: TextAlign.center,
                                                                                      style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                            fontFamily: 'Inter',
                                                                                            color: FlutterFlowTheme.of(context).primary,
                                                                                            fontSize: 16.0,
                                                                                            letterSpacing: 0.0,
                                                                                            fontWeight: FontWeight.bold,
                                                                                          ),
                                                                                    ),
                                                                                  ].divide(SizedBox(width: 5.0)),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeCALDSRecord.tipoEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.25,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeCALDSRecord.descricaoEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeCALDSRecord.tagEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.15,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeCALDSRecord.serieEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.15,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  valueOrDefault<String>(
                                                                                    listViewAplicabilidadeCALDSRecord.dataCadEquipamento,
                                                                                    'data_cad_equip',
                                                                                  ),
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      if (valueOrDefault<
                                                                          bool>(
                                                                        MediaQuery.sizeOf(context).width <=
                                                                            1024.0,
                                                                        true,
                                                                      ))
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              0.0,
                                                                              12.0,
                                                                              0.0,
                                                                              10.0),
                                                                          child:
                                                                              Column(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            children: [
                                                                              SingleChildScrollView(
                                                                                scrollDirection: Axis.horizontal,
                                                                                child: Row(
                                                                                  mainAxisSize: MainAxisSize.max,
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  children: [
                                                                                    Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.4,
                                                                                      decoration: BoxDecoration(
                                                                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                        crossAxisAlignment: CrossAxisAlignment.stretch,
                                                                                        children: [
                                                                                          Row(
                                                                                            mainAxisSize: MainAxisSize.max,
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            children: [
                                                                                              Text(
                                                                                                listViewAplicabilidadeCALDSRecord.codigo,
                                                                                                textAlign: TextAlign.center,
                                                                                                style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                      fontFamily: 'Inter',
                                                                                                      color: FlutterFlowTheme.of(context).primary,
                                                                                                      fontSize: 16.0,
                                                                                                      letterSpacing: 0.0,
                                                                                                      fontWeight: FontWeight.bold,
                                                                                                    ),
                                                                                              ),
                                                                                            ].divide(SizedBox(width: 5.0)),
                                                                                          ),
                                                                                          Text(
                                                                                            listViewAplicabilidadeCALDSRecord.tipoEquipamento,
                                                                                            textAlign: TextAlign.center,
                                                                                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                  fontFamily: 'Inter',
                                                                                                  color: FlutterFlowTheme.of(context).primaryText,
                                                                                                  fontSize: 16.0,
                                                                                                  letterSpacing: 0.0,
                                                                                                  fontWeight: FontWeight.normal,
                                                                                                ),
                                                                                          ),
                                                                                        ].divide(SizedBox(height: 4.0)),
                                                                                      ),
                                                                                    ),
                                                                                    Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.35,
                                                                                      decoration: BoxDecoration(
                                                                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                                        children: [
                                                                                          Padding(
                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                            child: Text(
                                                                                              listViewAplicabilidadeCALDSRecord.descricaoEquipamento,
                                                                                              textAlign: TextAlign.center,
                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                    fontFamily: 'Inter',
                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                    fontSize: 16.0,
                                                                                                    letterSpacing: 0.0,
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                  ),
                                                                                            ),
                                                                                          ),
                                                                                          Padding(
                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                            child: Text(
                                                                                              listViewAplicabilidadeCALDSRecord.tagEquipamento,
                                                                                              textAlign: TextAlign.center,
                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                    fontFamily: 'Inter',
                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                    fontSize: 16.0,
                                                                                                    letterSpacing: 0.0,
                                                                                                    fontWeight: FontWeight.normal,
                                                                                                  ),
                                                                                            ),
                                                                                          ),
                                                                                        ].divide(SizedBox(height: 4.0)),
                                                                                      ),
                                                                                    ),
                                                                                  ].divide(SizedBox(width: 40.0)),
                                                                                ),
                                                                              ),
                                                                              ListView(
                                                                                padding: EdgeInsets.zero,
                                                                                shrinkWrap: true,
                                                                                scrollDirection: Axis.vertical,
                                                                                children: [
                                                                                  Container(
                                                                                    decoration: BoxDecoration(),
                                                                                    child: Container(
                                                                                      width: double.infinity,
                                                                                      color: Color(0x00000000),
                                                                                      child: ExpandableNotifier(
                                                                                        initialExpanded: false,
                                                                                        child: ExpandablePanel(
                                                                                          header: Align(
                                                                                            alignment: AlignmentDirectional(0.0, 0.0),
                                                                                            child: Icon(
                                                                                              Icons.keyboard_arrow_down_rounded,
                                                                                              color: FlutterFlowTheme.of(context).alternate,
                                                                                              size: 26.0,
                                                                                            ),
                                                                                          ),
                                                                                          collapsed: Container(),
                                                                                          expanded: Container(
                                                                                            width: MediaQuery.sizeOf(context).width * 1.0,
                                                                                            decoration: BoxDecoration(
                                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                            ),
                                                                                            child: Column(
                                                                                              mainAxisSize: MainAxisSize.max,
                                                                                              children: [
                                                                                                SizedBox(
                                                                                                  width: 280.0,
                                                                                                  child: Divider(
                                                                                                    thickness: 1.0,
                                                                                                    color: FlutterFlowTheme.of(context).alternate,
                                                                                                  ),
                                                                                                ),
                                                                                                Padding(
                                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
                                                                                                  child: Row(
                                                                                                    mainAxisSize: MainAxisSize.max,
                                                                                                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                                                                                                    children: [
                                                                                                      Row(
                                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              'Nº de série:',
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              listViewAplicabilidadeCALDSRecord.serieEquipamento,
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.normal,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ].divide(SizedBox(width: 5.0)),
                                                                                                      ),
                                                                                                      Row(
                                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              'Data cad.:',
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              valueOrDefault<String>(
                                                                                                                listViewAplicabilidadeCALDSRecord.dataCadEquipamento,
                                                                                                                'data_cad_equip',
                                                                                                              ),
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.normal,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ].divide(SizedBox(width: 5.0)),
                                                                                                      ),
                                                                                                    ].divide(SizedBox(width: 3.0)),
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ),
                                                                                          theme: ExpandableThemeData(
                                                                                            tapHeaderToExpand: true,
                                                                                            tapBodyToExpand: false,
                                                                                            tapBodyToCollapse: false,
                                                                                            headerAlignment: ExpandablePanelHeaderAlignment.center,
                                                                                            hasIcon: false,
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        );
                                                      },
                                                    );
                                                  },
                                                ),
                                              ),
                                            ),
                                            KeepAliveWidgetWrapper(
                                              builder: (context) => Container(
                                                height: 550.0,
                                                decoration: BoxDecoration(),
                                                child: StreamBuilder<
                                                    List<
                                                        AplicabilidadeTUBCALDSRecord>>(
                                                  stream:
                                                      queryAplicabilidadeTUBCALDSRecord(
                                                    queryBuilder:
                                                        (aplicabilidadeTUBCALDSRecord) =>
                                                            aplicabilidadeTUBCALDSRecord
                                                                .where(
                                                      'Contrato',
                                                      isEqualTo:
                                                          FFAppState().contrato,
                                                    ),
                                                  ),
                                                  builder: (context, snapshot) {
                                                    // Customize what your widget looks like when it's loading.
                                                    if (!snapshot.hasData) {
                                                      return Center(
                                                        child: SizedBox(
                                                          width: 50.0,
                                                          height: 50.0,
                                                          child:
                                                              CircularProgressIndicator(
                                                            valueColor:
                                                                AlwaysStoppedAnimation<
                                                                    Color>(
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .primary,
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }
                                                    List<AplicabilidadeTUBCALDSRecord>
                                                        listViewAplicabilidadeTUBCALDSRecordList =
                                                        snapshot.data!;
                                                    return ListView.separated(
                                                      padding:
                                                          EdgeInsets.fromLTRB(
                                                        0,
                                                        0.0,
                                                        0,
                                                        20.0,
                                                      ),
                                                      primary: false,
                                                      scrollDirection:
                                                          Axis.vertical,
                                                      itemCount:
                                                          listViewAplicabilidadeTUBCALDSRecordList
                                                              .length,
                                                      separatorBuilder:
                                                          (_, __) => SizedBox(
                                                              height: 12.0),
                                                      itemBuilder: (context,
                                                          listViewIndex) {
                                                        final listViewAplicabilidadeTUBCALDSRecord =
                                                            listViewAplicabilidadeTUBCALDSRecordList[
                                                                listViewIndex];
                                                        return Column(
                                                          mainAxisSize:
                                                              MainAxisSize.max,
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .stretch,
                                                          children: [
                                                            Container(
                                                              width: double
                                                                  .infinity,
                                                              constraints:
                                                                  BoxConstraints(
                                                                maxWidth: 570.0,
                                                              ),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .secondaryBackground,
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            8.0),
                                                                border:
                                                                    Border.all(
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .alternate,
                                                                  width: 2.0,
                                                                ),
                                                              ),
                                                              child: InkWell(
                                                                splashColor: Colors
                                                                    .transparent,
                                                                focusColor: Colors
                                                                    .transparent,
                                                                hoverColor: Colors
                                                                    .transparent,
                                                                highlightColor:
                                                                    Colors
                                                                        .transparent,
                                                                onTap:
                                                                    () async {
                                                                  setState(() {
                                                                    FFAppState()
                                                                            .showAvaliacaoNR13TUBCALDEIRAS =
                                                                        listViewAplicabilidadeTUBCALDSRecord
                                                                            .reference;
                                                                  });
                                                                  setState(() {
                                                                    _model.showAvaliacaoTUBCALDEIRAS =
                                                                        true;
                                                                  });
                                                                },
                                                                child:
                                                                    SingleChildScrollView(
                                                                  child: Column(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .stretch,
                                                                    children: [
                                                                      if (valueOrDefault<
                                                                          bool>(
                                                                        MediaQuery.sizeOf(context).width >=
                                                                            1025.0,
                                                                        true,
                                                                      ))
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              16.0,
                                                                              12.0,
                                                                              16.0,
                                                                              12.0),
                                                                          child:
                                                                              Row(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            mainAxisAlignment:
                                                                                MainAxisAlignment.spaceBetween,
                                                                            children: [
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.12,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Row(
                                                                                  mainAxisSize: MainAxisSize.max,
                                                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                                                  children: [
                                                                                    Text(
                                                                                      valueOrDefault<String>(
                                                                                        listViewAplicabilidadeTUBCALDSRecord.codigo,
                                                                                        'Serqual - Consultoria em Engenharia LTDA',
                                                                                      ),
                                                                                      textAlign: TextAlign.center,
                                                                                      style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                            fontFamily: 'Inter',
                                                                                            color: FlutterFlowTheme.of(context).primary,
                                                                                            fontSize: 16.0,
                                                                                            letterSpacing: 0.0,
                                                                                            fontWeight: FontWeight.bold,
                                                                                          ),
                                                                                    ),
                                                                                  ].divide(SizedBox(width: 5.0)),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeTUBCALDSRecord.tipoEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.25,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeTUBCALDSRecord.descricaoEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeTUBCALDSRecord.tagEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.15,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeTUBCALDSRecord.serieEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.15,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  valueOrDefault<String>(
                                                                                    listViewAplicabilidadeTUBCALDSRecord.dataCadEquipamento,
                                                                                    'data_cad_equip',
                                                                                  ),
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      if (valueOrDefault<
                                                                          bool>(
                                                                        MediaQuery.sizeOf(context).width <=
                                                                            1024.0,
                                                                        true,
                                                                      ))
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              0.0,
                                                                              12.0,
                                                                              0.0,
                                                                              10.0),
                                                                          child:
                                                                              Column(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            children: [
                                                                              SingleChildScrollView(
                                                                                scrollDirection: Axis.horizontal,
                                                                                child: Row(
                                                                                  mainAxisSize: MainAxisSize.max,
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  children: [
                                                                                    Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.4,
                                                                                      decoration: BoxDecoration(
                                                                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                        crossAxisAlignment: CrossAxisAlignment.stretch,
                                                                                        children: [
                                                                                          Row(
                                                                                            mainAxisSize: MainAxisSize.max,
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            children: [
                                                                                              Text(
                                                                                                listViewAplicabilidadeTUBCALDSRecord.codigo,
                                                                                                textAlign: TextAlign.center,
                                                                                                style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                      fontFamily: 'Inter',
                                                                                                      color: FlutterFlowTheme.of(context).primary,
                                                                                                      fontSize: 16.0,
                                                                                                      letterSpacing: 0.0,
                                                                                                      fontWeight: FontWeight.bold,
                                                                                                    ),
                                                                                              ),
                                                                                            ].divide(SizedBox(width: 5.0)),
                                                                                          ),
                                                                                          Text(
                                                                                            listViewAplicabilidadeTUBCALDSRecord.tipoEquipamento,
                                                                                            textAlign: TextAlign.center,
                                                                                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                  fontFamily: 'Inter',
                                                                                                  color: FlutterFlowTheme.of(context).primaryText,
                                                                                                  fontSize: 16.0,
                                                                                                  letterSpacing: 0.0,
                                                                                                  fontWeight: FontWeight.normal,
                                                                                                ),
                                                                                          ),
                                                                                        ].divide(SizedBox(height: 4.0)),
                                                                                      ),
                                                                                    ),
                                                                                    Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.35,
                                                                                      decoration: BoxDecoration(
                                                                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                                        children: [
                                                                                          Padding(
                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                            child: Text(
                                                                                              listViewAplicabilidadeTUBCALDSRecord.descricaoEquipamento,
                                                                                              textAlign: TextAlign.center,
                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                    fontFamily: 'Inter',
                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                    fontSize: 16.0,
                                                                                                    letterSpacing: 0.0,
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                  ),
                                                                                            ),
                                                                                          ),
                                                                                          Padding(
                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                            child: Text(
                                                                                              listViewAplicabilidadeTUBCALDSRecord.tagEquipamento,
                                                                                              textAlign: TextAlign.center,
                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                    fontFamily: 'Inter',
                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                    fontSize: 16.0,
                                                                                                    letterSpacing: 0.0,
                                                                                                    fontWeight: FontWeight.normal,
                                                                                                  ),
                                                                                            ),
                                                                                          ),
                                                                                        ].divide(SizedBox(height: 4.0)),
                                                                                      ),
                                                                                    ),
                                                                                  ].divide(SizedBox(width: 40.0)),
                                                                                ),
                                                                              ),
                                                                              ListView(
                                                                                padding: EdgeInsets.zero,
                                                                                shrinkWrap: true,
                                                                                scrollDirection: Axis.vertical,
                                                                                children: [
                                                                                  Container(
                                                                                    decoration: BoxDecoration(),
                                                                                    child: Container(
                                                                                      width: double.infinity,
                                                                                      color: Color(0x00000000),
                                                                                      child: ExpandableNotifier(
                                                                                        initialExpanded: false,
                                                                                        child: ExpandablePanel(
                                                                                          header: Align(
                                                                                            alignment: AlignmentDirectional(0.0, 0.0),
                                                                                            child: Icon(
                                                                                              Icons.keyboard_arrow_down_rounded,
                                                                                              color: FlutterFlowTheme.of(context).alternate,
                                                                                              size: 26.0,
                                                                                            ),
                                                                                          ),
                                                                                          collapsed: Container(),
                                                                                          expanded: Container(
                                                                                            width: MediaQuery.sizeOf(context).width * 1.0,
                                                                                            decoration: BoxDecoration(
                                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                            ),
                                                                                            child: Column(
                                                                                              mainAxisSize: MainAxisSize.max,
                                                                                              children: [
                                                                                                SizedBox(
                                                                                                  width: 280.0,
                                                                                                  child: Divider(
                                                                                                    thickness: 1.0,
                                                                                                    color: FlutterFlowTheme.of(context).alternate,
                                                                                                  ),
                                                                                                ),
                                                                                                Padding(
                                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
                                                                                                  child: Row(
                                                                                                    mainAxisSize: MainAxisSize.max,
                                                                                                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                                                                                                    children: [
                                                                                                      Row(
                                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              'Nº de série:',
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              listViewAplicabilidadeTUBCALDSRecord.serieEquipamento,
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.normal,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ].divide(SizedBox(width: 5.0)),
                                                                                                      ),
                                                                                                      Row(
                                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              'Data cad.:',
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              valueOrDefault<String>(
                                                                                                                listViewAplicabilidadeTUBCALDSRecord.dataCadEquipamento,
                                                                                                                'data_cad_equip',
                                                                                                              ),
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.normal,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ].divide(SizedBox(width: 5.0)),
                                                                                                      ),
                                                                                                    ].divide(SizedBox(width: 3.0)),
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ),
                                                                                          theme: ExpandableThemeData(
                                                                                            tapHeaderToExpand: true,
                                                                                            tapBodyToExpand: false,
                                                                                            tapBodyToCollapse: false,
                                                                                            headerAlignment: ExpandablePanelHeaderAlignment.center,
                                                                                            hasIcon: false,
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        );
                                                      },
                                                    );
                                                  },
                                                ),
                                              ),
                                            ),
                                            KeepAliveWidgetWrapper(
                                              builder: (context) => Container(
                                                height: 550.0,
                                                decoration: BoxDecoration(),
                                                child: StreamBuilder<
                                                    List<
                                                        AplicabilidadeOUTROSRecord>>(
                                                  stream:
                                                      queryAplicabilidadeOUTROSRecord(
                                                    queryBuilder:
                                                        (aplicabilidadeOUTROSRecord) =>
                                                            aplicabilidadeOUTROSRecord
                                                                .where(
                                                      'Contrato',
                                                      isEqualTo:
                                                          FFAppState().contrato,
                                                    ),
                                                  ),
                                                  builder: (context, snapshot) {
                                                    // Customize what your widget looks like when it's loading.
                                                    if (!snapshot.hasData) {
                                                      return Center(
                                                        child: SizedBox(
                                                          width: 50.0,
                                                          height: 50.0,
                                                          child:
                                                              CircularProgressIndicator(
                                                            valueColor:
                                                                AlwaysStoppedAnimation<
                                                                    Color>(
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .primary,
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }
                                                    List<AplicabilidadeOUTROSRecord>
                                                        listViewAplicabilidadeOUTROSRecordList =
                                                        snapshot.data!;
                                                    return ListView.separated(
                                                      padding:
                                                          EdgeInsets.fromLTRB(
                                                        0,
                                                        0.0,
                                                        0,
                                                        20.0,
                                                      ),
                                                      primary: false,
                                                      scrollDirection:
                                                          Axis.vertical,
                                                      itemCount:
                                                          listViewAplicabilidadeOUTROSRecordList
                                                              .length,
                                                      separatorBuilder:
                                                          (_, __) => SizedBox(
                                                              height: 12.0),
                                                      itemBuilder: (context,
                                                          listViewIndex) {
                                                        final listViewAplicabilidadeOUTROSRecord =
                                                            listViewAplicabilidadeOUTROSRecordList[
                                                                listViewIndex];
                                                        return Column(
                                                          mainAxisSize:
                                                              MainAxisSize.max,
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .stretch,
                                                          children: [
                                                            Container(
                                                              width: double
                                                                  .infinity,
                                                              constraints:
                                                                  BoxConstraints(
                                                                maxWidth: 570.0,
                                                              ),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .secondaryBackground,
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            8.0),
                                                                border:
                                                                    Border.all(
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .alternate,
                                                                  width: 2.0,
                                                                ),
                                                              ),
                                                              child: InkWell(
                                                                splashColor: Colors
                                                                    .transparent,
                                                                focusColor: Colors
                                                                    .transparent,
                                                                hoverColor: Colors
                                                                    .transparent,
                                                                highlightColor:
                                                                    Colors
                                                                        .transparent,
                                                                onTap:
                                                                    () async {
                                                                  setState(() {
                                                                    FFAppState()
                                                                            .showAvaliacaoNR13OUTROS =
                                                                        listViewAplicabilidadeOUTROSRecord
                                                                            .reference;
                                                                  });
                                                                  setState(() {
                                                                    _model.showAvaliacaoOUTROS =
                                                                        true;
                                                                  });
                                                                },
                                                                child:
                                                                    SingleChildScrollView(
                                                                  child: Column(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .stretch,
                                                                    children: [
                                                                      if (valueOrDefault<
                                                                          bool>(
                                                                        MediaQuery.sizeOf(context).width >=
                                                                            1025.0,
                                                                        true,
                                                                      ))
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              16.0,
                                                                              12.0,
                                                                              16.0,
                                                                              12.0),
                                                                          child:
                                                                              Row(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            mainAxisAlignment:
                                                                                MainAxisAlignment.spaceBetween,
                                                                            children: [
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.12,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Row(
                                                                                  mainAxisSize: MainAxisSize.max,
                                                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                                                  children: [
                                                                                    Text(
                                                                                      valueOrDefault<String>(
                                                                                        listViewAplicabilidadeOUTROSRecord.codigo,
                                                                                        'Serqual - Consultoria em Engenharia LTDA',
                                                                                      ),
                                                                                      textAlign: TextAlign.center,
                                                                                      style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                            fontFamily: 'Inter',
                                                                                            color: FlutterFlowTheme.of(context).primary,
                                                                                            fontSize: 16.0,
                                                                                            letterSpacing: 0.0,
                                                                                            fontWeight: FontWeight.bold,
                                                                                          ),
                                                                                    ),
                                                                                  ].divide(SizedBox(width: 5.0)),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeOUTROSRecord.tipoEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.25,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeOUTROSRecord.descricaoEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeOUTROSRecord.tagEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.15,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  listViewAplicabilidadeOUTROSRecord.serieEquipamento,
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.15,
                                                                                decoration: BoxDecoration(
                                                                                  color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                ),
                                                                                child: Text(
                                                                                  valueOrDefault<String>(
                                                                                    listViewAplicabilidadeOUTROSRecord.dataCadEquipamento?.toString(),
                                                                                    'data_cad_equip',
                                                                                  ),
                                                                                  textAlign: TextAlign.center,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        color: FlutterFlowTheme.of(context).primaryText,
                                                                                        fontSize: 16.0,
                                                                                        letterSpacing: 0.0,
                                                                                        fontWeight: FontWeight.normal,
                                                                                      ),
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      if (valueOrDefault<
                                                                          bool>(
                                                                        MediaQuery.sizeOf(context).width <=
                                                                            1024.0,
                                                                        true,
                                                                      ))
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              0.0,
                                                                              12.0,
                                                                              0.0,
                                                                              10.0),
                                                                          child:
                                                                              Column(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            children: [
                                                                              SingleChildScrollView(
                                                                                scrollDirection: Axis.horizontal,
                                                                                child: Row(
                                                                                  mainAxisSize: MainAxisSize.max,
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  children: [
                                                                                    Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.4,
                                                                                      decoration: BoxDecoration(
                                                                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                        crossAxisAlignment: CrossAxisAlignment.stretch,
                                                                                        children: [
                                                                                          Row(
                                                                                            mainAxisSize: MainAxisSize.max,
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            children: [
                                                                                              Text(
                                                                                                listViewAplicabilidadeOUTROSRecord.codigo,
                                                                                                textAlign: TextAlign.center,
                                                                                                style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                      fontFamily: 'Inter',
                                                                                                      color: FlutterFlowTheme.of(context).primary,
                                                                                                      fontSize: 16.0,
                                                                                                      letterSpacing: 0.0,
                                                                                                      fontWeight: FontWeight.bold,
                                                                                                    ),
                                                                                              ),
                                                                                            ].divide(SizedBox(width: 5.0)),
                                                                                          ),
                                                                                          Text(
                                                                                            listViewAplicabilidadeOUTROSRecord.tipoEquipamento,
                                                                                            textAlign: TextAlign.center,
                                                                                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                  fontFamily: 'Inter',
                                                                                                  color: FlutterFlowTheme.of(context).primaryText,
                                                                                                  fontSize: 16.0,
                                                                                                  letterSpacing: 0.0,
                                                                                                  fontWeight: FontWeight.normal,
                                                                                                ),
                                                                                          ),
                                                                                        ].divide(SizedBox(height: 4.0)),
                                                                                      ),
                                                                                    ),
                                                                                    Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.35,
                                                                                      decoration: BoxDecoration(
                                                                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                                        children: [
                                                                                          Padding(
                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                            child: Text(
                                                                                              listViewAplicabilidadeOUTROSRecord.descricaoEquipamento,
                                                                                              textAlign: TextAlign.center,
                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                    fontFamily: 'Inter',
                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                    fontSize: 16.0,
                                                                                                    letterSpacing: 0.0,
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                  ),
                                                                                            ),
                                                                                          ),
                                                                                          Padding(
                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                            child: Text(
                                                                                              listViewAplicabilidadeOUTROSRecord.tagEquipamento,
                                                                                              textAlign: TextAlign.center,
                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                    fontFamily: 'Inter',
                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                    fontSize: 16.0,
                                                                                                    letterSpacing: 0.0,
                                                                                                    fontWeight: FontWeight.normal,
                                                                                                  ),
                                                                                            ),
                                                                                          ),
                                                                                        ].divide(SizedBox(height: 4.0)),
                                                                                      ),
                                                                                    ),
                                                                                  ].divide(SizedBox(width: 40.0)),
                                                                                ),
                                                                              ),
                                                                              ListView(
                                                                                padding: EdgeInsets.zero,
                                                                                shrinkWrap: true,
                                                                                scrollDirection: Axis.vertical,
                                                                                children: [
                                                                                  Container(
                                                                                    decoration: BoxDecoration(),
                                                                                    child: Container(
                                                                                      width: double.infinity,
                                                                                      color: Color(0x00000000),
                                                                                      child: ExpandableNotifier(
                                                                                        initialExpanded: false,
                                                                                        child: ExpandablePanel(
                                                                                          header: Column(
                                                                                            mainAxisSize: MainAxisSize.max,
                                                                                            children: [
                                                                                              Align(
                                                                                                alignment: AlignmentDirectional(0.0, 0.0),
                                                                                                child: Icon(
                                                                                                  Icons.keyboard_arrow_down_rounded,
                                                                                                  color: FlutterFlowTheme.of(context).primaryBackground,
                                                                                                  size: 26.0,
                                                                                                ),
                                                                                              ),
                                                                                              SizedBox(
                                                                                                width: 280.0,
                                                                                                child: Divider(
                                                                                                  thickness: 1.0,
                                                                                                  color: FlutterFlowTheme.of(context).primaryBackground,
                                                                                                ),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          collapsed: Container(),
                                                                                          expanded: Container(
                                                                                            width: MediaQuery.sizeOf(context).width * 1.0,
                                                                                            decoration: BoxDecoration(
                                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                                            ),
                                                                                            child: Column(
                                                                                              mainAxisSize: MainAxisSize.max,
                                                                                              children: [
                                                                                                SizedBox(
                                                                                                  width: 280.0,
                                                                                                  child: Divider(
                                                                                                    thickness: 1.0,
                                                                                                    color: FlutterFlowTheme.of(context).alternate,
                                                                                                  ),
                                                                                                ),
                                                                                                Padding(
                                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
                                                                                                  child: Row(
                                                                                                    mainAxisSize: MainAxisSize.max,
                                                                                                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                                                                                                    children: [
                                                                                                      Row(
                                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              'Nº de série:',
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              listViewAplicabilidadeOUTROSRecord.serieEquipamento,
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.normal,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ].divide(SizedBox(width: 5.0)),
                                                                                                      ),
                                                                                                      Row(
                                                                                                        mainAxisSize: MainAxisSize.max,
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              'Data cad.:',
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Padding(
                                                                                                            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 3.0),
                                                                                                            child: Text(
                                                                                                              valueOrDefault<String>(
                                                                                                                listViewAplicabilidadeOUTROSRecord.dataCadEquipamento?.toString(),
                                                                                                                'data_cad_equip',
                                                                                                              ),
                                                                                                              textAlign: TextAlign.center,
                                                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                                                    fontFamily: 'Inter',
                                                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                                                    fontSize: 16.0,
                                                                                                                    letterSpacing: 0.0,
                                                                                                                    fontWeight: FontWeight.normal,
                                                                                                                  ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ].divide(SizedBox(width: 5.0)),
                                                                                                      ),
                                                                                                    ].divide(SizedBox(width: 3.0)),
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ),
                                                                                          theme: ExpandableThemeData(
                                                                                            tapHeaderToExpand: true,
                                                                                            tapBodyToExpand: false,
                                                                                            tapBodyToCollapse: false,
                                                                                            headerAlignment: ExpandablePanelHeaderAlignment.center,
                                                                                            hasIcon: false,
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        );
                                                      },
                                                    );
                                                  },
                                                ),
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(
                            16.0, 10.0, 16.0, 14.0),
                        child: Column(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            if (_model.showAvaliacaoVP)
                              StreamBuilder<AplicabilidadeVpRecord>(
                                stream: AplicabilidadeVpRecord.getDocument(
                                    FFAppState().showAvaliacaoNR13!),
                                builder: (context, snapshot) {
                                  // Customize what your widget looks like when it's loading.
                                  if (!snapshot.hasData) {
                                    return Center(
                                      child: SizedBox(
                                        width: 50.0,
                                        height: 50.0,
                                        child: CircularProgressIndicator(
                                          valueColor:
                                              AlwaysStoppedAnimation<Color>(
                                            FlutterFlowTheme.of(context)
                                                .primary,
                                          ),
                                        ),
                                      ),
                                    );
                                  }
                                  final vpAplicabilidadeVpRecord =
                                      snapshot.data!;
                                  return Container(
                                    width:
                                        MediaQuery.sizeOf(context).width * 1.0,
                                    decoration: BoxDecoration(
                                      color: FlutterFlowTheme.of(context)
                                          .secondaryBackground,
                                      borderRadius: BorderRadius.circular(8.0),
                                    ),
                                    child: Padding(
                                      padding: EdgeInsets.all(20.0),
                                      child: Column(
                                        mainAxisSize: MainAxisSize.max,
                                        children: [
                                          Column(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              Column(
                                                mainAxisSize: MainAxisSize.max,
                                                children: [
                                                  Padding(
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(0.0, 10.0,
                                                                0.0, 0.0),
                                                    child: Text(
                                                      'ÚLTIMA AVALIAÇÃO NR-13',
                                                      style: FlutterFlowTheme
                                                              .of(context)
                                                          .bodyMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primary,
                                                            fontSize: 18.0,
                                                            letterSpacing: 0.0,
                                                            fontWeight:
                                                                FontWeight.bold,
                                                          ),
                                                    ),
                                                  ),
                                                  Padding(
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(0.0, 10.0,
                                                                0.0, 0.0),
                                                    child: Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Iniciada em:',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            dateTimeFormat(
                                                                'd/M/y',
                                                                vpAplicabilidadeVpRecord
                                                                    .createdTime!),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                  ),
                                                  Padding(
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(0.0, 20.0,
                                                                0.0, 20.0),
                                                    child: Container(
                                                      constraints:
                                                          BoxConstraints(
                                                        maxWidth: 800.0,
                                                      ),
                                                      decoration:
                                                          BoxDecoration(),
                                                      child: Padding(
                                                        padding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(
                                                                    0.0,
                                                                    20.0,
                                                                    0.0,
                                                                    20.0),
                                                        child: Column(
                                                          mainAxisSize:
                                                              MainAxisSize.max,
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .center,
                                                          children: [
                                                            Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .start,
                                                              crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                              children: [
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    'Avaliador',
                                                                    textAlign:
                                                                        TextAlign
                                                                            .end,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.bold,
                                                                        ),
                                                                  ),
                                                                ),
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    vpAplicabilidadeVpRecord
                                                                        .avaliador,
                                                                    textAlign:
                                                                        TextAlign
                                                                            .start,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.normal,
                                                                        ),
                                                                  ),
                                                                ),
                                                              ].divide(SizedBox(
                                                                  width: 20.0)),
                                                            ),
                                                            Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .start,
                                                              crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                              children: [
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    'Tipo de equipamento',
                                                                    textAlign:
                                                                        TextAlign
                                                                            .end,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.bold,
                                                                        ),
                                                                  ),
                                                                ),
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    vpAplicabilidadeVpRecord
                                                                        .tipoEquipamento,
                                                                    textAlign:
                                                                        TextAlign
                                                                            .start,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.normal,
                                                                        ),
                                                                  ),
                                                                ),
                                                              ].divide(SizedBox(
                                                                  width: 20.0)),
                                                            ),
                                                            Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .start,
                                                              crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                              children: [
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    'Equipamento',
                                                                    textAlign:
                                                                        TextAlign
                                                                            .end,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.bold,
                                                                        ),
                                                                  ),
                                                                ),
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    vpAplicabilidadeVpRecord
                                                                        .equipamento,
                                                                    textAlign:
                                                                        TextAlign
                                                                            .start,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.normal,
                                                                        ),
                                                                  ),
                                                                ),
                                                              ].divide(SizedBox(
                                                                  width: 20.0)),
                                                            ),
                                                            Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .start,
                                                              crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                              children: [
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    'Código',
                                                                    textAlign:
                                                                        TextAlign
                                                                            .end,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.bold,
                                                                        ),
                                                                  ),
                                                                ),
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    vpAplicabilidadeVpRecord
                                                                        .codigo,
                                                                    textAlign:
                                                                        TextAlign
                                                                            .start,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.normal,
                                                                        ),
                                                                  ),
                                                                ),
                                                              ].divide(SizedBox(
                                                                  width: 20.0)),
                                                            ),
                                                            Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .start,
                                                              crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                              children: [
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    'Potencial de risco',
                                                                    textAlign:
                                                                        TextAlign
                                                                            .end,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.bold,
                                                                        ),
                                                                  ),
                                                                ),
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    valueOrDefault<
                                                                        String>(
                                                                      vpAplicabilidadeVpRecord
                                                                          .potencialDeRisco,
                                                                      '-',
                                                                    ),
                                                                    textAlign:
                                                                        TextAlign
                                                                            .start,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.normal,
                                                                        ),
                                                                  ),
                                                                ),
                                                              ].divide(SizedBox(
                                                                  width: 20.0)),
                                                            ),
                                                            Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .start,
                                                              crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                              children: [
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    'Classse do fluido',
                                                                    textAlign:
                                                                        TextAlign
                                                                            .end,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.bold,
                                                                        ),
                                                                  ),
                                                                ),
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    () {
                                                                      if (vpAplicabilidadeVpRecord
                                                                              .classeA ==
                                                                          '1') {
                                                                        return 'A';
                                                                      } else if (vpAplicabilidadeVpRecord
                                                                              .classeB ==
                                                                          '1') {
                                                                        return 'B';
                                                                      } else if (vpAplicabilidadeVpRecord
                                                                              .classeC ==
                                                                          '1') {
                                                                        return 'C';
                                                                      } else if (vpAplicabilidadeVpRecord
                                                                              .classeD ==
                                                                          '1') {
                                                                        return 'D';
                                                                      } else {
                                                                        return '-';
                                                                      }
                                                                    }(),
                                                                    textAlign:
                                                                        TextAlign
                                                                            .start,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.normal,
                                                                        ),
                                                                  ),
                                                                ),
                                                              ].divide(SizedBox(
                                                                  width: 20.0)),
                                                            ),
                                                            Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .start,
                                                              crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                              children: [
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    'Categoria',
                                                                    textAlign:
                                                                        TextAlign
                                                                            .end,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.bold,
                                                                        ),
                                                                  ),
                                                                ),
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    valueOrDefault<
                                                                        String>(
                                                                      vpAplicabilidadeVpRecord
                                                                          .categoria,
                                                                      '-',
                                                                    ),
                                                                    textAlign:
                                                                        TextAlign
                                                                            .start,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.normal,
                                                                        ),
                                                                  ),
                                                                ),
                                                              ].divide(SizedBox(
                                                                  width: 20.0)),
                                                            ),
                                                            Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .start,
                                                              crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                              children: [
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    'Inspeção Periódica Interna',
                                                                    textAlign:
                                                                        TextAlign
                                                                            .end,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.bold,
                                                                        ),
                                                                  ),
                                                                ),
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    valueOrDefault<
                                                                        String>(
                                                                      '${vpAplicabilidadeVpRecord.inspecaoInterna} Anos',
                                                                      '-',
                                                                    ),
                                                                    textAlign:
                                                                        TextAlign
                                                                            .start,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.normal,
                                                                        ),
                                                                  ),
                                                                ),
                                                              ].divide(SizedBox(
                                                                  width: 20.0)),
                                                            ),
                                                            Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .start,
                                                              crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                              children: [
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    'Inspeção Periódica Externa',
                                                                    textAlign:
                                                                        TextAlign
                                                                            .end,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.bold,
                                                                        ),
                                                                  ),
                                                                ),
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    valueOrDefault<
                                                                        String>(
                                                                      '${vpAplicabilidadeVpRecord.inspecaoExterna} Anos',
                                                                      '-',
                                                                    ),
                                                                    textAlign:
                                                                        TextAlign
                                                                            .start,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.normal,
                                                                        ),
                                                                  ),
                                                                ),
                                                              ].divide(SizedBox(
                                                                  width: 20.0)),
                                                            ),
                                                            Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .start,
                                                              crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                              children: [
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    'Observação',
                                                                    textAlign:
                                                                        TextAlign
                                                                            .end,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.bold,
                                                                        ),
                                                                  ),
                                                                ),
                                                                Container(
                                                                  width: () {
                                                                    if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointSmall) {
                                                                      return 150.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointMedium) {
                                                                      return 390.0;
                                                                    } else if (MediaQuery.sizeOf(context)
                                                                            .width <
                                                                        kBreakpointLarge) {
                                                                      return 390.0;
                                                                    } else {
                                                                      return 390.0;
                                                                    }
                                                                  }(),
                                                                  decoration:
                                                                      BoxDecoration(),
                                                                  child: Text(
                                                                    valueOrDefault<
                                                                        String>(
                                                                      vpAplicabilidadeVpRecord
                                                                          .observacao,
                                                                      '-',
                                                                    ),
                                                                    textAlign:
                                                                        TextAlign
                                                                            .start,
                                                                    style: FlutterFlowTheme.of(
                                                                            context)
                                                                        .labelMedium
                                                                        .override(
                                                                          fontFamily:
                                                                              'Inter',
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryText,
                                                                          fontSize:
                                                                              16.0,
                                                                          letterSpacing:
                                                                              0.0,
                                                                          fontWeight:
                                                                              FontWeight.normal,
                                                                        ),
                                                                  ),
                                                                ),
                                                              ].divide(SizedBox(
                                                                  width: 20.0)),
                                                            ),
                                                          ].divide(SizedBox(
                                                              height: 20.0)),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Text(
                                                    (vpAplicabilidadeVpRecord
                                                                    .codigo ==
                                                                'G2.1') ||
                                                            (vpAplicabilidadeVpRecord
                                                                    .codigo ==
                                                                'G2.2') ||
                                                            (vpAplicabilidadeVpRecord
                                                                    .codigo ==
                                                                'G2.3') ||
                                                            (vpAplicabilidadeVpRecord
                                                                    .codigo ==
                                                                'G2.4') ||
                                                            (vpAplicabilidadeVpRecord
                                                                    .codigo ==
                                                                'G2.5') ||
                                                            (vpAplicabilidadeVpRecord
                                                                    .codigo ==
                                                                'G2.6') ||
                                                            (vpAplicabilidadeVpRecord
                                                                    .codigo ==
                                                                'G2.7') ||
                                                            (vpAplicabilidadeVpRecord
                                                                    .codigo ==
                                                                'G2.8') ||
                                                            (vpAplicabilidadeVpRecord
                                                                    .codigo ==
                                                                'G2.9') ||
                                                            (vpAplicabilidadeVpRecord
                                                                    .codigo ==
                                                                'G2.10') ||
                                                            (vpAplicabilidadeVpRecord
                                                                    .codigo ==
                                                                'G2.11')
                                                        ? '${vpAplicabilidadeVpRecord.codigo}NR13 NÃO APLICÁVEL!'
                                                        : vpAplicabilidadeVpRecord
                                                            .codigo,
                                                    textAlign: TextAlign.center,
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color:
                                                              Color(0xFF4DA5DF),
                                                          fontSize: 28.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                                  ),
                                                  if ((vpAplicabilidadeVpRecord.codigo == 'G1.1') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.2') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.3') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.4') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.5') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.6') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.7') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.25') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.15') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.8') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.9') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.10') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.11') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.12') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.13') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.14') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.15') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.16') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.17') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.18') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.19') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.20') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.21') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.22') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.23') ||
                                                      (vpAplicabilidadeVpRecord
                                                              .codigo ==
                                                          'G1.24'))
                                                    Padding(
                                                      padding:
                                                          EdgeInsetsDirectional
                                                              .fromSTEB(
                                                                  0.0,
                                                                  80.0,
                                                                  0.0,
                                                                  0.0),
                                                      child: Column(
                                                        mainAxisSize:
                                                            MainAxisSize.max,
                                                        children: [
                                                          SizedBox(
                                                            width: 800.0,
                                                            child: Divider(
                                                              thickness: 1.0,
                                                              color: FlutterFlowTheme
                                                                      .of(context)
                                                                  .primaryBackground,
                                                            ),
                                                          ),
                                                          if ((vpAplicabilidadeVpRecord.codigo == 'G1.1') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.2') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.3') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.4') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.5') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.6') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.7') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.25') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.15') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.8') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.9') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.10') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.11') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.12') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.13') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.14') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.15') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.16') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.17') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.18') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.19') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.20') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.21') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.22') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.23') ||
                                                              (vpAplicabilidadeVpRecord
                                                                      .codigo ==
                                                                  'G1.24'))
                                                            Text(
                                                              'CADASTRAR/ATUALIZAR PLANO DE INSPEÇÃO',
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          Row(
                                                            mainAxisSize:
                                                                MainAxisSize
                                                                    .min,
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .start,
                                                            crossAxisAlignment:
                                                                CrossAxisAlignment
                                                                    .start,
                                                            children: [
                                                              Container(
                                                                width: () {
                                                                  if (MediaQuery.sizeOf(
                                                                              context)
                                                                          .width <
                                                                      kBreakpointSmall) {
                                                                    return 150.0;
                                                                  } else if (MediaQuery.sizeOf(
                                                                              context)
                                                                          .width <
                                                                      kBreakpointMedium) {
                                                                    return 390.0;
                                                                  } else if (MediaQuery.sizeOf(
                                                                              context)
                                                                          .width <
                                                                      kBreakpointLarge) {
                                                                    return 390.0;
                                                                  } else {
                                                                    return 390.0;
                                                                  }
                                                                }(),
                                                                decoration:
                                                                    BoxDecoration(),
                                                                child: Text(
                                                                  'Inspeção Periódica Interna',
                                                                  textAlign:
                                                                      TextAlign
                                                                          .end,
                                                                  style: FlutterFlowTheme.of(
                                                                          context)
                                                                      .labelMedium
                                                                      .override(
                                                                        fontFamily:
                                                                            'Inter',
                                                                        color: FlutterFlowTheme.of(context)
                                                                            .secondaryText,
                                                                        fontSize:
                                                                            16.0,
                                                                        letterSpacing:
                                                                            0.0,
                                                                        fontWeight:
                                                                            FontWeight.bold,
                                                                      ),
                                                                ),
                                                              ),
                                                              Container(
                                                                width: 390.0,
                                                                decoration:
                                                                    BoxDecoration(),
                                                                child: Row(
                                                                  mainAxisSize:
                                                                      MainAxisSize
                                                                          .max,
                                                                  children: [
                                                                    Padding(
                                                                      padding: EdgeInsetsDirectional.fromSTEB(
                                                                          8.0,
                                                                          0.0,
                                                                          8.0,
                                                                          0.0),
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        child:
                                                                            TextFormField(
                                                                          controller: _model.periodiG1TxtInternaVpTextController ??=
                                                                              TextEditingController(
                                                                            text:
                                                                                vpAplicabilidadeVpRecord.inspecaoInterna,
                                                                          ),
                                                                          focusNode:
                                                                              _model.periodiG1TxtInternaVpFocusNode,
                                                                          autofocus:
                                                                              true,
                                                                          obscureText:
                                                                              false,
                                                                          decoration:
                                                                              InputDecoration(
                                                                            isDense:
                                                                                true,
                                                                            labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                  fontFamily: 'Inter',
                                                                                  letterSpacing: 0.0,
                                                                                ),
                                                                            hintStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                  fontFamily: 'Inter',
                                                                                  color: FlutterFlowTheme.of(context).primaryText,
                                                                                  letterSpacing: 0.0,
                                                                                ),
                                                                            enabledBorder:
                                                                                UnderlineInputBorder(
                                                                              borderSide: BorderSide(
                                                                                color: FlutterFlowTheme.of(context).secondaryText,
                                                                                width: 2.0,
                                                                              ),
                                                                              borderRadius: BorderRadius.circular(0.0),
                                                                            ),
                                                                            focusedBorder:
                                                                                UnderlineInputBorder(
                                                                              borderSide: BorderSide(
                                                                                color: FlutterFlowTheme.of(context).primary,
                                                                                width: 2.0,
                                                                              ),
                                                                              borderRadius: BorderRadius.circular(0.0),
                                                                            ),
                                                                            errorBorder:
                                                                                UnderlineInputBorder(
                                                                              borderSide: BorderSide(
                                                                                color: FlutterFlowTheme.of(context).error,
                                                                                width: 2.0,
                                                                              ),
                                                                              borderRadius: BorderRadius.circular(0.0),
                                                                            ),
                                                                            focusedErrorBorder:
                                                                                UnderlineInputBorder(
                                                                              borderSide: BorderSide(
                                                                                color: FlutterFlowTheme.of(context).error,
                                                                                width: 2.0,
                                                                              ),
                                                                              borderRadius: BorderRadius.circular(0.0),
                                                                            ),
                                                                          ),
                                                                          style: FlutterFlowTheme.of(context)
                                                                              .bodyMedium
                                                                              .override(
                                                                                fontFamily: 'Inter',
                                                                                letterSpacing: 0.0,
                                                                              ),
                                                                          textAlign:
                                                                              TextAlign.start,
                                                                          keyboardType:
                                                                              TextInputType.number,
                                                                          validator: _model
                                                                              .periodiG1TxtInternaVpTextControllerValidator
                                                                              .asValidator(context),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    Text(
                                                                      'Anos',
                                                                      style: FlutterFlowTheme.of(
                                                                              context)
                                                                          .bodyMedium
                                                                          .override(
                                                                            fontFamily:
                                                                                'Inter',
                                                                            letterSpacing:
                                                                                0.0,
                                                                          ),
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                            ].divide(SizedBox(
                                                                width: 20.0)),
                                                          ),
                                                          Row(
                                                            mainAxisSize:
                                                                MainAxisSize
                                                                    .min,
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .start,
                                                            crossAxisAlignment:
                                                                CrossAxisAlignment
                                                                    .start,
                                                            children: [
                                                              Container(
                                                                width: () {
                                                                  if (MediaQuery.sizeOf(
                                                                              context)
                                                                          .width <
                                                                      kBreakpointSmall) {
                                                                    return 150.0;
                                                                  } else if (MediaQuery.sizeOf(
                                                                              context)
                                                                          .width <
                                                                      kBreakpointMedium) {
                                                                    return 390.0;
                                                                  } else if (MediaQuery.sizeOf(
                                                                              context)
                                                                          .width <
                                                                      kBreakpointLarge) {
                                                                    return 390.0;
                                                                  } else {
                                                                    return 390.0;
                                                                  }
                                                                }(),
                                                                decoration:
                                                                    BoxDecoration(),
                                                                child: Text(
                                                                  'Inspeção Periódica Externa',
                                                                  textAlign:
                                                                      TextAlign
                                                                          .end,
                                                                  style: FlutterFlowTheme.of(
                                                                          context)
                                                                      .labelMedium
                                                                      .override(
                                                                        fontFamily:
                                                                            'Inter',
                                                                        color: FlutterFlowTheme.of(context)
                                                                            .secondaryText,
                                                                        fontSize:
                                                                            16.0,
                                                                        letterSpacing:
                                                                            0.0,
                                                                        fontWeight:
                                                                            FontWeight.bold,
                                                                      ),
                                                                ),
                                                              ),
                                                              Container(
                                                                width: 390.0,
                                                                decoration:
                                                                    BoxDecoration(),
                                                                child: Row(
                                                                  mainAxisSize:
                                                                      MainAxisSize
                                                                          .max,
                                                                  children: [
                                                                    Padding(
                                                                      padding: EdgeInsetsDirectional.fromSTEB(
                                                                          8.0,
                                                                          0.0,
                                                                          8.0,
                                                                          0.0),
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        child:
                                                                            TextFormField(
                                                                          controller: _model.periodiG1TxtExternaVpTextController ??=
                                                                              TextEditingController(
                                                                            text:
                                                                                vpAplicabilidadeVpRecord.inspecaoExterna,
                                                                          ),
                                                                          focusNode:
                                                                              _model.periodiG1TxtExternaVpFocusNode,
                                                                          autofocus:
                                                                              true,
                                                                          obscureText:
                                                                              false,
                                                                          decoration:
                                                                              InputDecoration(
                                                                            isDense:
                                                                                true,
                                                                            labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                  fontFamily: 'Inter',
                                                                                  letterSpacing: 0.0,
                                                                                ),
                                                                            hintStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                  fontFamily: 'Inter',
                                                                                  color: FlutterFlowTheme.of(context).primaryText,
                                                                                  letterSpacing: 0.0,
                                                                                ),
                                                                            enabledBorder:
                                                                                UnderlineInputBorder(
                                                                              borderSide: BorderSide(
                                                                                color: FlutterFlowTheme.of(context).secondaryText,
                                                                                width: 2.0,
                                                                              ),
                                                                              borderRadius: BorderRadius.circular(0.0),
                                                                            ),
                                                                            focusedBorder:
                                                                                UnderlineInputBorder(
                                                                              borderSide: BorderSide(
                                                                                color: FlutterFlowTheme.of(context).primary,
                                                                                width: 2.0,
                                                                              ),
                                                                              borderRadius: BorderRadius.circular(0.0),
                                                                            ),
                                                                            errorBorder:
                                                                                UnderlineInputBorder(
                                                                              borderSide: BorderSide(
                                                                                color: FlutterFlowTheme.of(context).error,
                                                                                width: 2.0,
                                                                              ),
                                                                              borderRadius: BorderRadius.circular(0.0),
                                                                            ),
                                                                            focusedErrorBorder:
                                                                                UnderlineInputBorder(
                                                                              borderSide: BorderSide(
                                                                                color: FlutterFlowTheme.of(context).error,
                                                                                width: 2.0,
                                                                              ),
                                                                              borderRadius: BorderRadius.circular(0.0),
                                                                            ),
                                                                          ),
                                                                          style: FlutterFlowTheme.of(context)
                                                                              .bodyMedium
                                                                              .override(
                                                                                fontFamily: 'Inter',
                                                                                letterSpacing: 0.0,
                                                                              ),
                                                                          textAlign:
                                                                              TextAlign.start,
                                                                          keyboardType:
                                                                              TextInputType.number,
                                                                          validator: _model
                                                                              .periodiG1TxtExternaVpTextControllerValidator
                                                                              .asValidator(context),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    Text(
                                                                      'Anos',
                                                                      style: FlutterFlowTheme.of(
                                                                              context)
                                                                          .bodyMedium
                                                                          .override(
                                                                            fontFamily:
                                                                                'Inter',
                                                                            letterSpacing:
                                                                                0.0,
                                                                          ),
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                            ].divide(SizedBox(
                                                                width: 20.0)),
                                                          ),
                                                          FFButtonWidget(
                                                            onPressed:
                                                                () async {
                                                              await vpAplicabilidadeVpRecord
                                                                  .reference
                                                                  .update(
                                                                      createAplicabilidadeVpRecordData(
                                                                inspecaoInterna:
                                                                    _model
                                                                        .periodiG1TxtInternaVpTextController
                                                                        .text,
                                                                inspecaoExterna:
                                                                    _model
                                                                        .periodiG1TxtExternaVpTextController
                                                                        .text,
                                                              ));
                                                              _model.equipToUpdateVP =
                                                                  await queryEquipamentosRecordOnce(
                                                                queryBuilder:
                                                                    (equipamentosRecord) =>
                                                                        equipamentosRecord
                                                                            .where(
                                                                  'Nome',
                                                                  isEqualTo:
                                                                      vpAplicabilidadeVpRecord
                                                                          .equipamento,
                                                                ),
                                                                singleRecord:
                                                                    true,
                                                              ).then((s) => s
                                                                      .firstOrNull);

                                                              await _model
                                                                  .equipToUpdateVP!
                                                                  .reference
                                                                  .update(
                                                                      createEquipamentosRecordData(
                                                                interna: _model
                                                                    .periodiG1TxtInternaVpTextController
                                                                    .text,
                                                                externa: _model
                                                                    .periodiG1TxtExternaVpTextController
                                                                    .text,
                                                              ));
                                                              await showDialog(
                                                                context:
                                                                    context,
                                                                builder:
                                                                    (alertDialogContext) {
                                                                  return AlertDialog(
                                                                    title: Text(
                                                                        'Sucesso!'),
                                                                    content: Text(
                                                                        'Inspeção salva com sucesso.'),
                                                                    actions: [
                                                                      TextButton(
                                                                        onPressed:
                                                                            () =>
                                                                                Navigator.pop(alertDialogContext),
                                                                        child: Text(
                                                                            'Ok'),
                                                                      ),
                                                                    ],
                                                                  );
                                                                },
                                                              );

                                                              setState(() {});
                                                            },
                                                            text: 'Salvar',
                                                            options:
                                                                FFButtonOptions(
                                                              height: 40.0,
                                                              padding:
                                                                  EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          24.0,
                                                                          0.0,
                                                                          24.0,
                                                                          0.0),
                                                              iconPadding:
                                                                  EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          0.0,
                                                                          0.0,
                                                                          0.0,
                                                                          0.0),
                                                              color: FlutterFlowTheme
                                                                      .of(context)
                                                                  .primary,
                                                              textStyle:
                                                                  FlutterFlowTheme.of(
                                                                          context)
                                                                      .titleSmall
                                                                      .override(
                                                                        fontFamily:
                                                                            'Inter',
                                                                        color: Colors
                                                                            .white,
                                                                        letterSpacing:
                                                                            0.0,
                                                                      ),
                                                              elevation: 3.0,
                                                              borderSide:
                                                                  BorderSide(
                                                                color: Colors
                                                                    .transparent,
                                                                width: 1.0,
                                                              ),
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                          ),
                                                          SizedBox(
                                                            width: 800.0,
                                                            child: Divider(
                                                              thickness: 1.0,
                                                              color: FlutterFlowTheme
                                                                      .of(context)
                                                                  .primaryBackground,
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            height: 40.0)),
                                                      ),
                                                    ),
                                                ],
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 80.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.center,
                                                  children: [
                                                    Text(
                                                      'RESPOSTAS',
                                                      textAlign:
                                                          TextAlign.center,
                                                      style: FlutterFlowTheme
                                                              .of(context)
                                                          .labelMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .secondaryText,
                                                            fontSize: 16.0,
                                                            letterSpacing: 0.0,
                                                            fontWeight:
                                                                FontWeight.bold,
                                                          ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 40.0, 0.0, 0.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: vpAplicabilidadeVpRecord.sistemaAuxiliarMaquina ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              vpAplicabilidadeVpRecord
                                                                          .ocupacaoHumana ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Para Ocupação Humana',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .sistemaAuxiliarMaquina !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .sistemaAuxiliarMaquina ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .sistemaAuxiliarMaquina ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Parte de Sistema Auxiliar de Máquina',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .plasticoReforcado !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .plasticoReforcado ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .plasticoReforcado ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'De Plástico Reforçado de Fibra de Vidro - PRFV',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .transporteProduto !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .transporteProduto ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .transporteProduto ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Para Transporte de Produto',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .submarinoExploracaoProducao !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .submarinoExploracaoProducao ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .submarinoExploracaoProducao ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Equipamento Submarino para Exploração e Produção de Petróleo',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .diametroInterno !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .diametroInterno ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .diametroInterno ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Diâmetro Interno < 150 mm',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .conformidadeCodigoProjeto !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .conformidadeCodigoProjeto ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .conformidadeCodigoProjeto ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Conformidade com Código de Projeto',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .instalacaoAntesDezembroDzOito !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .instalacaoAntesDezembroDzOito ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .instalacaoAntesDezembroDzOito ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              ' Instalação antes de 18 de Dezembro de 2018',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .possReconstMemCalcPMTA !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .possReconstMemCalcPMTA ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .possReconstMemCalcPMTA ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Align(
                                                              alignment:
                                                                  AlignmentDirectional(
                                                                      0.0, 0.0),
                                                              child: Text(
                                                                'Possibilidade de Reconstituição da Memória de Cálculo da PMTA Segundo Código Reconhecido',
                                                                textAlign:
                                                                    TextAlign
                                                                        .start,
                                                                style: FlutterFlowTheme.of(
                                                                        context)
                                                                    .labelMedium
                                                                    .override(
                                                                      fontFamily:
                                                                          'Inter',
                                                                      color: FlutterFlowTheme.of(
                                                                              context)
                                                                          .secondaryText,
                                                                      fontSize:
                                                                          16.0,
                                                                      letterSpacing:
                                                                          0.0,
                                                                      fontWeight:
                                                                          FontWeight
                                                                              .normal,
                                                                    ),
                                                              ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                                .fluido !=
                                                            null &&
                                                        vpAplicabilidadeVpRecord
                                                                .fluido !=
                                                            '')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: FlutterFlowTheme
                                                                      .of(context)
                                                                  .primary,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Padding(
                                                              padding:
                                                                  EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          5.0,
                                                                          5.0,
                                                                          5.0,
                                                                          5.0),
                                                              child: Text(
                                                                valueOrDefault<
                                                                    String>(
                                                                  vpAplicabilidadeVpRecord
                                                                      .fluido,
                                                                  '-',
                                                                ),
                                                                textAlign:
                                                                    TextAlign
                                                                        .center,
                                                                style: FlutterFlowTheme.of(
                                                                        context)
                                                                    .bodyMedium
                                                                    .override(
                                                                      fontFamily:
                                                                          'Inter',
                                                                      color: Colors
                                                                          .white,
                                                                      fontSize:
                                                                          16.0,
                                                                      letterSpacing:
                                                                          0.0,
                                                                      fontWeight:
                                                                          FontWeight
                                                                              .w600,
                                                                    ),
                                                              ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Fluido',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                                .pressao !=
                                                            null &&
                                                        vpAplicabilidadeVpRecord
                                                                .pressao !=
                                                            '')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: FlutterFlowTheme
                                                                      .of(context)
                                                                  .secondaryText,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                    .pressao,
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Pressão',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                                .pv !=
                                                            null &&
                                                        vpAplicabilidadeVpRecord
                                                                .pv !=
                                                            '')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: FlutterFlowTheme
                                                                      .of(context)
                                                                  .secondaryText,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                    .pv,
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'PV (Pressão - Mpa x Volume Interno - m3)',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .temperaturaMenor0C !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .temperaturaMenor0C ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .temperaturaMenor0C ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              ' Temperatura de Operação < 0°C',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .semEvidenciaDeterioracao !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .semEvidenciaDeterioracao ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .semEvidenciaDeterioracao ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Sem Evidência de Deterioração',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .enchInternoEOUCatalisador !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .enchInternoEOUCatalisador ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .enchInternoEOUCatalisador ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Enchimento Interno e/ou Catalisador',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .estudoAbonadorInspecaoInternaDif !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .estudoAbonadorInspecaoInternaDif ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .estudoAbonadorInspecaoInternaDif ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Estudo Abonador para Inspeção Interna Diferenciada',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .fabricacaoSerie !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .fabricacaoSerie ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .fabricacaoSerie ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Fabricação em Série',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .certificadoINMETRO !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .certificadoINMETRO ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .certificadoINMETRO ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Certificado pelo INMETRO',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .valvulasSegurCalibradasFab !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .valvulasSegurCalibradasFab ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .valvulasSegurCalibradasFab ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Válvulas de Segurança Calibradas na Fábrica',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .sPIEServicoPropInspecaoEquip !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .sPIEServicoPropInspecaoEquip ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .sPIEServicoPropInspecaoEquip ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'SPIE - Serviço Próprio de Inspeção de Equipamento',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                    if (vpAplicabilidadeVpRecord
                                                            .iNIConformTrzCincoQuatCincoTresInspecNIntru !=
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: vpAplicabilidadeVpRecord
                                                                          .iNIConformTrzCincoQuatCincoTresInspecNIntru ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                vpAplicabilidadeVpRecord
                                                                            .iNIConformTrzCincoQuatCincoTresInspecNIntru ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'INI - Conformidade com 13.5.4.5.3 (Inspeção Não Intrusiva)',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 15.0)),
                                                      ),
                                                  ].divide(
                                                      SizedBox(height: 35.0)),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 20.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.end,
                                                  children: [
                                                    Padding(
                                                      padding:
                                                          EdgeInsetsDirectional
                                                              .fromSTEB(
                                                                  0.0,
                                                                  0.0,
                                                                  20.0,
                                                                  0.0),
                                                      child: FFButtonWidget(
                                                        onPressed: () async {
                                                          setState(() {
                                                            _model.showAvaliacaoVP =
                                                                false;
                                                          });
                                                        },
                                                        text: 'Voltar',
                                                        options:
                                                            FFButtonOptions(
                                                          height: 40.0,
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      24.0,
                                                                      0.0,
                                                                      24.0,
                                                                      0.0),
                                                          iconPadding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      0.0,
                                                                      0.0),
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primary,
                                                          textStyle:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .titleSmall
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                          elevation: 3.0,
                                                          borderSide:
                                                              BorderSide(
                                                            color: Colors
                                                                .transparent,
                                                            width: 1.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      8.0),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  );
                                },
                              ),
                            if (_model.showAvaliacaoTUBVP)
                              StreamBuilder<AplicabilidadeTubVPRecord>(
                                stream: AplicabilidadeTubVPRecord.getDocument(
                                    FFAppState().showAvaliacaoNR13TUBVP!),
                                builder: (context, snapshot) {
                                  // Customize what your widget looks like when it's loading.
                                  if (!snapshot.hasData) {
                                    return Center(
                                      child: SizedBox(
                                        width: 50.0,
                                        height: 50.0,
                                        child: CircularProgressIndicator(
                                          valueColor:
                                              AlwaysStoppedAnimation<Color>(
                                            FlutterFlowTheme.of(context)
                                                .primary,
                                          ),
                                        ),
                                      ),
                                    );
                                  }
                                  final tUBvpAplicabilidadeTubVPRecord =
                                      snapshot.data!;
                                  return Container(
                                    width:
                                        MediaQuery.sizeOf(context).width * 1.0,
                                    decoration: BoxDecoration(
                                      color: FlutterFlowTheme.of(context)
                                          .secondaryBackground,
                                      borderRadius: BorderRadius.circular(8.0),
                                    ),
                                    child: Padding(
                                      padding: EdgeInsets.all(20.0),
                                      child: Column(
                                        mainAxisSize: MainAxisSize.max,
                                        children: [
                                          Column(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 10.0, 0.0, 0.0),
                                                child: Text(
                                                  'ÚLTIMA AVALIAÇÃO NR-13',
                                                  style: FlutterFlowTheme.of(
                                                          context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .primary,
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.bold,
                                                      ),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 10.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.min,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.start,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    Container(
                                                      width: () {
                                                        if (MediaQuery.sizeOf(
                                                                    context)
                                                                .width <
                                                            kBreakpointSmall) {
                                                          return 150.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointMedium) {
                                                          return 390.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointLarge) {
                                                          return 390.0;
                                                        } else {
                                                          return 390.0;
                                                        }
                                                      }(),
                                                      decoration:
                                                          BoxDecoration(),
                                                      child: Text(
                                                        'Iniciada em:',
                                                        textAlign:
                                                            TextAlign.end,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                      ),
                                                    ),
                                                    Container(
                                                      width: () {
                                                        if (MediaQuery.sizeOf(
                                                                    context)
                                                                .width <
                                                            kBreakpointSmall) {
                                                          return 150.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointMedium) {
                                                          return 390.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointLarge) {
                                                          return 390.0;
                                                        } else {
                                                          return 390.0;
                                                        }
                                                      }(),
                                                      decoration:
                                                          BoxDecoration(),
                                                      child: Text(
                                                        tUBvpAplicabilidadeTubVPRecord
                                                            .createdTime,
                                                        textAlign:
                                                            TextAlign.start,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                      ),
                                                    ),
                                                  ].divide(
                                                      SizedBox(width: 20.0)),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 40.0, 0.0, 40.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.center,
                                                  children: [
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Avaliador',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            tUBvpAplicabilidadeTubVPRecord
                                                                .avaliador,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tipo de equipamento',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            tUBvpAplicabilidadeTubVPRecord
                                                                .tipoEquipamento,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Equipamento',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            tUBvpAplicabilidadeTubVPRecord
                                                                .equipamento,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Código',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            tUBvpAplicabilidadeTubVPRecord
                                                                .codigo,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Potencial de risco',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                  .potencialDeRisco,
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Classse do fluido',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            () {
                                                              if (tUBvpAplicabilidadeTubVPRecord
                                                                      .classeA ==
                                                                  '1') {
                                                                return 'A';
                                                              } else if (tUBvpAplicabilidadeTubVPRecord
                                                                      .classeB ==
                                                                  '1') {
                                                                return 'B';
                                                              } else if (tUBvpAplicabilidadeTubVPRecord
                                                                      .classeC ==
                                                                  '1') {
                                                                return 'C';
                                                              } else if (tUBvpAplicabilidadeTubVPRecord
                                                                      .classeD ==
                                                                  '1') {
                                                                return 'D';
                                                              } else {
                                                                return '-';
                                                              }
                                                            }(),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Categoria',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                  .categoria,
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Inspeção Periódica Interna',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              '${tUBvpAplicabilidadeTubVPRecord.inspecaoInterna} Anos',
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Inspeção Periódica Externa',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              '${tUBvpAplicabilidadeTubVPRecord.inspecaoExterna} Anos',
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Observação',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                  .observacao,
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                  ].divide(
                                                      SizedBox(height: 20.0)),
                                                ),
                                              ),
                                              Text(
                                                (tUBvpAplicabilidadeTubVPRecord
                                                                .codigo ==
                                                            'G2.1') ||
                                                        (tUBvpAplicabilidadeTubVPRecord
                                                                .codigo ==
                                                            'G2.2') ||
                                                        (tUBvpAplicabilidadeTubVPRecord
                                                                .codigo ==
                                                            'G2.3') ||
                                                        (tUBvpAplicabilidadeTubVPRecord
                                                                .codigo ==
                                                            'G2.4') ||
                                                        (tUBvpAplicabilidadeTubVPRecord
                                                                .codigo ==
                                                            'G2.5') ||
                                                        (tUBvpAplicabilidadeTubVPRecord
                                                                .codigo ==
                                                            'G2.6') ||
                                                        (tUBvpAplicabilidadeTubVPRecord
                                                                .codigo ==
                                                            'G2.7') ||
                                                        (tUBvpAplicabilidadeTubVPRecord
                                                                .codigo ==
                                                            'G2.8') ||
                                                        (tUBvpAplicabilidadeTubVPRecord
                                                                .codigo ==
                                                            'G2.9') ||
                                                        (tUBvpAplicabilidadeTubVPRecord
                                                                .codigo ==
                                                            'G2.10') ||
                                                        (tUBvpAplicabilidadeTubVPRecord
                                                                .codigo ==
                                                            'G2.11')
                                                    ? '${tUBvpAplicabilidadeTubVPRecord.codigo}NR13 NÃO APLICÁVEL!'
                                                    : tUBvpAplicabilidadeTubVPRecord
                                                        .codigo,
                                                textAlign: TextAlign.center,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color:
                                                              Color(0xFF4DA5DF),
                                                          fontSize: 28.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                              ),
                                              if ((tUBvpAplicabilidadeTubVPRecord.codigo == 'G1.1') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.2') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.3') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.4') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.5') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.6') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.7') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.25') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.15') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.8') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.9') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.10') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.11') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.12') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.13') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.14') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.15') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.16') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.17') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.18') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.19') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.20') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.21') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.22') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.23') ||
                                                  (tUBvpAplicabilidadeTubVPRecord
                                                          .codigo ==
                                                      'G1.24'))
                                                Padding(
                                                  padding: EdgeInsetsDirectional
                                                      .fromSTEB(
                                                          0.0, 80.0, 0.0, 0.0),
                                                  child: Column(
                                                    mainAxisSize:
                                                        MainAxisSize.max,
                                                    children: [
                                                      SizedBox(
                                                        width: 800.0,
                                                        child: Divider(
                                                          thickness: 1.0,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primaryBackground,
                                                        ),
                                                      ),
                                                      Text(
                                                        'CADASTRAR/ATUALIZAR PLANO DE INSPEÇÃO',
                                                        textAlign:
                                                            TextAlign.center,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                      ),
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .start,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Inspeção Periódica Interna',
                                                              textAlign:
                                                                  TextAlign.end,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: 390.0,
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          8.0,
                                                                          0.0,
                                                                          8.0,
                                                                          0.0),
                                                                  child:
                                                                      Container(
                                                                    width:
                                                                        100.0,
                                                                    child:
                                                                        TextFormField(
                                                                      controller:
                                                                          _model.periodiG1TxtInternaTubTextController ??=
                                                                              TextEditingController(
                                                                        text: tUBvpAplicabilidadeTubVPRecord
                                                                            .inspecaoInterna,
                                                                      ),
                                                                      focusNode:
                                                                          _model
                                                                              .periodiG1TxtInternaTubFocusNode,
                                                                      autofocus:
                                                                          true,
                                                                      obscureText:
                                                                          false,
                                                                      decoration:
                                                                          InputDecoration(
                                                                        isDense:
                                                                            true,
                                                                        labelStyle: FlutterFlowTheme.of(context)
                                                                            .labelMedium
                                                                            .override(
                                                                              fontFamily: 'Inter',
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                        hintStyle: FlutterFlowTheme.of(context)
                                                                            .labelMedium
                                                                            .override(
                                                                              fontFamily: 'Inter',
                                                                              color: FlutterFlowTheme.of(context).primaryText,
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                        enabledBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).secondaryText,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                        focusedBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).primary,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                        errorBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).error,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                        focusedErrorBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).error,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                      ),
                                                                      style: FlutterFlowTheme.of(
                                                                              context)
                                                                          .bodyMedium
                                                                          .override(
                                                                            fontFamily:
                                                                                'Inter',
                                                                            letterSpacing:
                                                                                0.0,
                                                                          ),
                                                                      textAlign:
                                                                          TextAlign
                                                                              .start,
                                                                      keyboardType:
                                                                          TextInputType
                                                                              .number,
                                                                      validator: _model
                                                                          .periodiG1TxtInternaTubTextControllerValidator
                                                                          .asValidator(
                                                                              context),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Text(
                                                                  'Anos',
                                                                  style: FlutterFlowTheme.of(
                                                                          context)
                                                                      .bodyMedium
                                                                      .override(
                                                                        fontFamily:
                                                                            'Inter',
                                                                        letterSpacing:
                                                                            0.0,
                                                                      ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .start,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Inspeção Periódica Externa',
                                                              textAlign:
                                                                  TextAlign.end,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: 390.0,
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          8.0,
                                                                          0.0,
                                                                          8.0,
                                                                          0.0),
                                                                  child:
                                                                      Container(
                                                                    width:
                                                                        100.0,
                                                                    child:
                                                                        TextFormField(
                                                                      controller:
                                                                          _model.periodiG1TxtExtTubTextController ??=
                                                                              TextEditingController(
                                                                        text: tUBvpAplicabilidadeTubVPRecord
                                                                            .inspecaoExterna,
                                                                      ),
                                                                      focusNode:
                                                                          _model
                                                                              .periodiG1TxtExtTubFocusNode,
                                                                      autofocus:
                                                                          true,
                                                                      obscureText:
                                                                          false,
                                                                      decoration:
                                                                          InputDecoration(
                                                                        isDense:
                                                                            true,
                                                                        labelStyle: FlutterFlowTheme.of(context)
                                                                            .labelMedium
                                                                            .override(
                                                                              fontFamily: 'Inter',
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                        hintStyle: FlutterFlowTheme.of(context)
                                                                            .labelMedium
                                                                            .override(
                                                                              fontFamily: 'Inter',
                                                                              color: FlutterFlowTheme.of(context).primaryText,
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                        enabledBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).secondaryText,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                        focusedBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).primary,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                        errorBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).error,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                        focusedErrorBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).error,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                      ),
                                                                      style: FlutterFlowTheme.of(
                                                                              context)
                                                                          .bodyMedium
                                                                          .override(
                                                                            fontFamily:
                                                                                'Inter',
                                                                            letterSpacing:
                                                                                0.0,
                                                                          ),
                                                                      textAlign:
                                                                          TextAlign
                                                                              .start,
                                                                      keyboardType:
                                                                          TextInputType
                                                                              .number,
                                                                      validator: _model
                                                                          .periodiG1TxtExtTubTextControllerValidator
                                                                          .asValidator(
                                                                              context),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Text(
                                                                  'Anos',
                                                                  style: FlutterFlowTheme.of(
                                                                          context)
                                                                      .bodyMedium
                                                                      .override(
                                                                        fontFamily:
                                                                            'Inter',
                                                                        letterSpacing:
                                                                            0.0,
                                                                      ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                      FFButtonWidget(
                                                        onPressed: () async {
                                                          await tUBvpAplicabilidadeTubVPRecord
                                                              .reference
                                                              .update(
                                                                  createAplicabilidadeTubVPRecordData(
                                                            inspecaoInterna:
                                                                valueOrDefault<
                                                                    String>(
                                                              _model
                                                                  .periodiG1TxtInternaTubTextController
                                                                  .text,
                                                              '0',
                                                            ),
                                                            inspecaoExterna: _model
                                                                .periodiG1TxtExtTubTextController
                                                                .text,
                                                          ));
                                                          _model.equipToUpdateTUBVP =
                                                              await queryEquipamentosRecordOnce(
                                                            queryBuilder:
                                                                (equipamentosRecord) =>
                                                                    equipamentosRecord
                                                                        .where(
                                                              'Nome',
                                                              isEqualTo:
                                                                  tUBvpAplicabilidadeTubVPRecord
                                                                      .equipamento,
                                                            ),
                                                            singleRecord: true,
                                                          ).then((s) => s
                                                                  .firstOrNull);

                                                          await _model
                                                              .equipToUpdateTUBVP!
                                                              .reference
                                                              .update(
                                                                  createEquipamentosRecordData(
                                                            interna: _model
                                                                .periodiG1TxtInternaTubTextController
                                                                .text,
                                                            externa: _model
                                                                .periodiG1TxtExtTubTextController
                                                                .text,
                                                          ));
                                                          await showDialog(
                                                            context: context,
                                                            builder:
                                                                (alertDialogContext) {
                                                              return AlertDialog(
                                                                title: Text(
                                                                    'Sucesso!'),
                                                                content: Text(
                                                                    'Inspeção salva com sucesso.'),
                                                                actions: [
                                                                  TextButton(
                                                                    onPressed: () =>
                                                                        Navigator.pop(
                                                                            alertDialogContext),
                                                                    child: Text(
                                                                        'Ok'),
                                                                  ),
                                                                ],
                                                              );
                                                            },
                                                          );

                                                          setState(() {});
                                                        },
                                                        text: 'Salvar',
                                                        options:
                                                            FFButtonOptions(
                                                          height: 40.0,
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      24.0,
                                                                      0.0,
                                                                      24.0,
                                                                      0.0),
                                                          iconPadding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      0.0,
                                                                      0.0),
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primary,
                                                          textStyle:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .titleSmall
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                          elevation: 3.0,
                                                          borderSide:
                                                              BorderSide(
                                                            color: Colors
                                                                .transparent,
                                                            width: 1.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      8.0),
                                                        ),
                                                      ),
                                                      SizedBox(
                                                        width: 800.0,
                                                        child: Divider(
                                                          thickness: 1.0,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primaryBackground,
                                                        ),
                                                      ),
                                                    ].divide(
                                                        SizedBox(height: 40.0)),
                                                  ),
                                                ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 80.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.center,
                                                  children: [
                                                    Text(
                                                      'RESPOSTAS',
                                                      textAlign:
                                                          TextAlign.center,
                                                      style: FlutterFlowTheme
                                                              .of(context)
                                                          .labelMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .secondaryText,
                                                            fontSize: 16.0,
                                                            letterSpacing: 0.0,
                                                            fontWeight:
                                                                FontWeight.bold,
                                                          ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 40.0, 0.0, 0.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    if (tUBvpAplicabilidadeTubVPRecord
                                                            .redePublicaDistribuicaoGas ==
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: tUBvpAplicabilidadeTubVPRecord
                                                                          .redePublicaDistribuicaoGas ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                tUBvpAplicabilidadeTubVPRecord
                                                                            .redePublicaDistribuicaoGas ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Rede Pública de Distribuição de Gás',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                    if (tUBvpAplicabilidadeTubVPRecord
                                                            .interligadaVPParaOcupacaoHumana ==
                                                        '3')
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          Container(
                                                            width: 100.0,
                                                            height: 40.0,
                                                            decoration:
                                                                BoxDecoration(
                                                              color: tUBvpAplicabilidadeTubVPRecord
                                                                          .interligadaVPParaOcupacaoHumana ==
                                                                      '1'
                                                                  ? FlutterFlowTheme.of(
                                                                          context)
                                                                      .success
                                                                  : FlutterFlowTheme.of(
                                                                          context)
                                                                      .error,
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                tUBvpAplicabilidadeTubVPRecord
                                                                            .interligadaVPParaOcupacaoHumana ==
                                                                        '1'
                                                                    ? 'SIM'
                                                                    : 'NÃO',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .bodyMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 200.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 500.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 600.0;
                                                              } else {
                                                                return 600.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              ' Interligada À VP Para Ocupação Humana',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.interligadaVPSistemaAuxiliarMaquina ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .interligadaVPParaOcupacaoHumana ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Interligada À VP  de Sistema Auxiliar de Máquina',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.interligadaVasoPressaoPRFV ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .interligadaVasoPressaoPRFV ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Interligada À Vaso De Pressão PRFV',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.transporteProduto ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .transporteProduto ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Interligada À VP Para Transporte de Produto',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.equipamentoSubmarinoExploracaoProducaoPetroleo ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .equipamentoSubmarinoExploracaoProducaoPetroleo ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Equipamento Submarino para Exploração e Produção de Petróleo',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.ligadaVasoDiametro ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .ligadaVasoDiametro ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Ligada À Vaso Com Diâmetro Interno < 150 mm',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.conformidadeCodigoProjeto ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .conformidadeCodigoProjeto ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Conformidade com Código de Projeto',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.instalacaoAntesDezembroDzOito ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .instalacaoAntesDezembroDzOito ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Instalação antes de 18 de Dezembro de 2018',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .possibilidadeReconstituicaoMemoriaCalculoPMTASegundoCodigoReconhecido ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Possibilidade de Reconstituição da Memória de Cálculo da PMTA Segundo Código Reconhecido',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primary,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                  .fluido,
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Fluido',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .secondaryText,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                  .pressao,
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Pressão',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .secondaryText,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                  .pv,
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'PV (Pressão - Mpa x Volume Interno - m3)',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.temperaturaMenor0C ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .temperaturaMenor0C ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Temperatura de Operação < 0°C',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.semEvidenciaDeterioracao ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .semEvidenciaDeterioracao ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Sem Evidência de Deterioração',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.enchInternoEOUCatalisador ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .enchInternoEOUCatalisador ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Enchimento Interno e/ou Catalisador',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.estudoAbonadorInspecaoInternaDif ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .estudoAbonadorInspecaoInternaDif ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Estudo Abonador para Inspeção Interna Diferenciada',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.sPIEServicoPropInspecaoEquip ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .sPIEServicoPropInspecaoEquip ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'SPIE - Serviço Próprio de Inspeção de Equipamento',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBvpAplicabilidadeTubVPRecord.interligadaVPParaOcupacaoHumana ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBvpAplicabilidadeTubVPRecord
                                                                          .ampliacaoProgramaPLH ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            ' Ampliação por Programa de PLH',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                  ].divide(
                                                      SizedBox(height: 35.0)),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 20.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.end,
                                                  children: [
                                                    Padding(
                                                      padding:
                                                          EdgeInsetsDirectional
                                                              .fromSTEB(
                                                                  0.0,
                                                                  0.0,
                                                                  20.0,
                                                                  0.0),
                                                      child: FFButtonWidget(
                                                        onPressed: () async {
                                                          setState(() {
                                                            _model.showAvaliacaoTUBVP =
                                                                false;
                                                          });
                                                        },
                                                        text: 'Voltar',
                                                        options:
                                                            FFButtonOptions(
                                                          height: 40.0,
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      24.0,
                                                                      0.0,
                                                                      24.0,
                                                                      0.0),
                                                          iconPadding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      0.0,
                                                                      0.0),
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primary,
                                                          textStyle:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .titleSmall
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                          elevation: 3.0,
                                                          borderSide:
                                                              BorderSide(
                                                            color: Colors
                                                                .transparent,
                                                            width: 1.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      8.0),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        10.0, 0.0, 0.0, 20.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  children: [
                                                    Container(
                                                      decoration: BoxDecoration(
                                                        color: FlutterFlowTheme
                                                                .of(context)
                                                            .secondaryBackground,
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  );
                                },
                              ),
                            if (_model.showAvaliacaoTANQUES)
                              StreamBuilder<AplicabilidadeTANQUESRecord>(
                                stream: AplicabilidadeTANQUESRecord.getDocument(
                                    FFAppState().showAvaliacaoNR13TANQUES!),
                                builder: (context, snapshot) {
                                  // Customize what your widget looks like when it's loading.
                                  if (!snapshot.hasData) {
                                    return Center(
                                      child: SizedBox(
                                        width: 50.0,
                                        height: 50.0,
                                        child: CircularProgressIndicator(
                                          valueColor:
                                              AlwaysStoppedAnimation<Color>(
                                            FlutterFlowTheme.of(context)
                                                .primary,
                                          ),
                                        ),
                                      ),
                                    );
                                  }
                                  final tanquesAplicabilidadeTANQUESRecord =
                                      snapshot.data!;
                                  return Container(
                                    width:
                                        MediaQuery.sizeOf(context).width * 1.0,
                                    decoration: BoxDecoration(
                                      color: FlutterFlowTheme.of(context)
                                          .secondaryBackground,
                                      borderRadius: BorderRadius.circular(8.0),
                                    ),
                                    child: Padding(
                                      padding: EdgeInsets.all(20.0),
                                      child: Column(
                                        mainAxisSize: MainAxisSize.max,
                                        children: [
                                          Column(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 10.0, 0.0, 0.0),
                                                child: Text(
                                                  'ÚLTIMA AVALIAÇÃO NR-13',
                                                  style: FlutterFlowTheme.of(
                                                          context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .primary,
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.bold,
                                                      ),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 10.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.min,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.start,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    Container(
                                                      width: () {
                                                        if (MediaQuery.sizeOf(
                                                                    context)
                                                                .width <
                                                            kBreakpointSmall) {
                                                          return 150.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointMedium) {
                                                          return 390.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointLarge) {
                                                          return 390.0;
                                                        } else {
                                                          return 390.0;
                                                        }
                                                      }(),
                                                      decoration:
                                                          BoxDecoration(),
                                                      child: Text(
                                                        'Iniciada em:',
                                                        textAlign:
                                                            TextAlign.end,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                      ),
                                                    ),
                                                    Container(
                                                      width: () {
                                                        if (MediaQuery.sizeOf(
                                                                    context)
                                                                .width <
                                                            kBreakpointSmall) {
                                                          return 150.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointMedium) {
                                                          return 390.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointLarge) {
                                                          return 390.0;
                                                        } else {
                                                          return 390.0;
                                                        }
                                                      }(),
                                                      decoration:
                                                          BoxDecoration(),
                                                      child: Text(
                                                        dateTimeFormat(
                                                            'd/M/y',
                                                            tanquesAplicabilidadeTANQUESRecord
                                                                .createdTime!),
                                                        textAlign:
                                                            TextAlign.start,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                      ),
                                                    ),
                                                  ].divide(
                                                      SizedBox(width: 20.0)),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        10.0, 0.0, 0.0, 20.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  children: [
                                                    Container(
                                                      decoration: BoxDecoration(
                                                        color: FlutterFlowTheme
                                                                .of(context)
                                                            .secondaryBackground,
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 20.0, 0.0, 40.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.center,
                                                  children: [
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Avaliador',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            tanquesAplicabilidadeTANQUESRecord
                                                                .avaliador,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tipo de equipamento',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            tanquesAplicabilidadeTANQUESRecord
                                                                .tipoEquipamento,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Equipamento',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            tanquesAplicabilidadeTANQUESRecord
                                                                .equipamento,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Código',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                  .codigo,
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Classse do fluido',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                  .classeFluido,
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Inspeção Periódica Interna',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              '${tanquesAplicabilidadeTANQUESRecord.inspecaoInterna} Anos',
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Inspeção Periódica Externa',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              '${tanquesAplicabilidadeTANQUESRecord.inspecaoExterna} Anos',
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Observação',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                  .observacao,
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                  ].divide(
                                                      SizedBox(height: 20.0)),
                                                ),
                                              ),
                                              Text(
                                                (tanquesAplicabilidadeTANQUESRecord.codigo == 'G2.1') ||
                                                        (tanquesAplicabilidadeTANQUESRecord
                                                                .codigo ==
                                                            'G2.2') ||
                                                        (tanquesAplicabilidadeTANQUESRecord
                                                                .codigo ==
                                                            'G2.3') ||
                                                        (tanquesAplicabilidadeTANQUESRecord
                                                                .codigo ==
                                                            'G2.4') ||
                                                        (tanquesAplicabilidadeTANQUESRecord
                                                                .codigo ==
                                                            'G2.5') ||
                                                        (tanquesAplicabilidadeTANQUESRecord
                                                                .codigo ==
                                                            'G2.6') ||
                                                        (tanquesAplicabilidadeTANQUESRecord
                                                                .codigo ==
                                                            'G2.7') ||
                                                        (tanquesAplicabilidadeTANQUESRecord
                                                                .codigo ==
                                                            'G2.8') ||
                                                        (tanquesAplicabilidadeTANQUESRecord
                                                                .codigo ==
                                                            'G2.9') ||
                                                        (tanquesAplicabilidadeTANQUESRecord
                                                                .codigo ==
                                                            'G2.10') ||
                                                        (tanquesAplicabilidadeTANQUESRecord
                                                                .codigo ==
                                                            'G2.11')
                                                    ? '${tanquesAplicabilidadeTANQUESRecord.codigo}NR13 NÃO APLICÁVEL!'
                                                    : tanquesAplicabilidadeTANQUESRecord
                                                        .codigo,
                                                textAlign: TextAlign.center,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color:
                                                              Color(0xFF4DA5DF),
                                                          fontSize: 28.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                              ),
                                              if ((tanquesAplicabilidadeTANQUESRecord.codigo == 'G1.1') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.2') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.3') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.4') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.5') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.6') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.7') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.25') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.15') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.8') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.9') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.10') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.11') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.12') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.13') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.14') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.15') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.16') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.17') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.18') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.19') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.20') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.21') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.22') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.23') ||
                                                  (tanquesAplicabilidadeTANQUESRecord
                                                          .codigo ==
                                                      'G1.24'))
                                                Padding(
                                                  padding: EdgeInsetsDirectional
                                                      .fromSTEB(
                                                          0.0, 80.0, 0.0, 0.0),
                                                  child: Column(
                                                    mainAxisSize:
                                                        MainAxisSize.max,
                                                    children: [
                                                      SizedBox(
                                                        width: 800.0,
                                                        child: Divider(
                                                          thickness: 1.0,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primaryBackground,
                                                        ),
                                                      ),
                                                      Text(
                                                        'CADASTRAR/ATUALIZAR PLANO DE INSPEÇÃO',
                                                        textAlign:
                                                            TextAlign.center,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                      ),
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .start,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Inspeção Periódica Interna',
                                                              textAlign:
                                                                  TextAlign.end,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: 390.0,
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          8.0,
                                                                          0.0,
                                                                          8.0,
                                                                          0.0),
                                                                  child:
                                                                      Container(
                                                                    width:
                                                                        100.0,
                                                                    child:
                                                                        TextFormField(
                                                                      controller:
                                                                          _model.periodiG1TxtInternaTanqueTextController ??=
                                                                              TextEditingController(
                                                                        text: tanquesAplicabilidadeTANQUESRecord
                                                                            .inspecaoInterna,
                                                                      ),
                                                                      focusNode:
                                                                          _model
                                                                              .periodiG1TxtInternaTanqueFocusNode,
                                                                      autofocus:
                                                                          true,
                                                                      obscureText:
                                                                          false,
                                                                      decoration:
                                                                          InputDecoration(
                                                                        isDense:
                                                                            true,
                                                                        labelStyle: FlutterFlowTheme.of(context)
                                                                            .labelMedium
                                                                            .override(
                                                                              fontFamily: 'Inter',
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                        hintStyle: FlutterFlowTheme.of(context)
                                                                            .labelMedium
                                                                            .override(
                                                                              fontFamily: 'Inter',
                                                                              color: FlutterFlowTheme.of(context).primaryText,
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                        enabledBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).secondaryText,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                        focusedBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).primary,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                        errorBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).error,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                        focusedErrorBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).error,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                      ),
                                                                      style: FlutterFlowTheme.of(
                                                                              context)
                                                                          .bodyMedium
                                                                          .override(
                                                                            fontFamily:
                                                                                'Inter',
                                                                            letterSpacing:
                                                                                0.0,
                                                                          ),
                                                                      textAlign:
                                                                          TextAlign
                                                                              .start,
                                                                      keyboardType:
                                                                          TextInputType
                                                                              .number,
                                                                      validator: _model
                                                                          .periodiG1TxtInternaTanqueTextControllerValidator
                                                                          .asValidator(
                                                                              context),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Text(
                                                                  'Anos',
                                                                  style: FlutterFlowTheme.of(
                                                                          context)
                                                                      .bodyMedium
                                                                      .override(
                                                                        fontFamily:
                                                                            'Inter',
                                                                        letterSpacing:
                                                                            0.0,
                                                                      ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .start,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Inspeção Periódica Externa',
                                                              textAlign:
                                                                  TextAlign.end,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: 390.0,
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          8.0,
                                                                          0.0,
                                                                          8.0,
                                                                          0.0),
                                                                  child:
                                                                      Container(
                                                                    width:
                                                                        100.0,
                                                                    child:
                                                                        TextFormField(
                                                                      controller:
                                                                          _model.periodiG1TxtExternaTanqueTextController ??=
                                                                              TextEditingController(
                                                                        text: tanquesAplicabilidadeTANQUESRecord
                                                                            .inspecaoInterna,
                                                                      ),
                                                                      focusNode:
                                                                          _model
                                                                              .periodiG1TxtExternaTanqueFocusNode,
                                                                      autofocus:
                                                                          true,
                                                                      obscureText:
                                                                          false,
                                                                      decoration:
                                                                          InputDecoration(
                                                                        isDense:
                                                                            true,
                                                                        labelStyle: FlutterFlowTheme.of(context)
                                                                            .labelMedium
                                                                            .override(
                                                                              fontFamily: 'Inter',
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                        hintStyle: FlutterFlowTheme.of(context)
                                                                            .labelMedium
                                                                            .override(
                                                                              fontFamily: 'Inter',
                                                                              color: FlutterFlowTheme.of(context).primaryText,
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                        enabledBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).secondaryText,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                        focusedBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).primary,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                        errorBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).error,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                        focusedErrorBorder:
                                                                            UnderlineInputBorder(
                                                                          borderSide:
                                                                              BorderSide(
                                                                            color:
                                                                                FlutterFlowTheme.of(context).error,
                                                                            width:
                                                                                2.0,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(0.0),
                                                                        ),
                                                                      ),
                                                                      style: FlutterFlowTheme.of(
                                                                              context)
                                                                          .bodyMedium
                                                                          .override(
                                                                            fontFamily:
                                                                                'Inter',
                                                                            letterSpacing:
                                                                                0.0,
                                                                          ),
                                                                      textAlign:
                                                                          TextAlign
                                                                              .start,
                                                                      keyboardType:
                                                                          TextInputType
                                                                              .number,
                                                                      validator: _model
                                                                          .periodiG1TxtExternaTanqueTextControllerValidator
                                                                          .asValidator(
                                                                              context),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Text(
                                                                  'Anos',
                                                                  style: FlutterFlowTheme.of(
                                                                          context)
                                                                      .bodyMedium
                                                                      .override(
                                                                        fontFamily:
                                                                            'Inter',
                                                                        letterSpacing:
                                                                            0.0,
                                                                      ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                      FFButtonWidget(
                                                        onPressed: () async {
                                                          await tanquesAplicabilidadeTANQUESRecord
                                                              .reference
                                                              .update(
                                                                  createAplicabilidadeTANQUESRecordData(
                                                            inspecaoInterna: _model
                                                                .periodiG1TxtInternaTanqueTextController
                                                                .text,
                                                            inspecaoExterna: _model
                                                                .periodiG1TxtExternaTanqueTextController
                                                                .text,
                                                          ));
                                                          _model.equipToUpdateTANQUE =
                                                              await queryEquipamentosRecordOnce(
                                                            queryBuilder:
                                                                (equipamentosRecord) =>
                                                                    equipamentosRecord
                                                                        .where(
                                                              'Nome',
                                                              isEqualTo:
                                                                  tanquesAplicabilidadeTANQUESRecord
                                                                      .equipamento,
                                                            ),
                                                            singleRecord: true,
                                                          ).then((s) => s
                                                                  .firstOrNull);

                                                          await _model
                                                              .equipToUpdateTANQUE!
                                                              .reference
                                                              .update(
                                                                  createEquipamentosRecordData(
                                                            interna: _model
                                                                .periodiG1TxtInternaTanqueTextController
                                                                .text,
                                                            externa: _model
                                                                .periodiG1TxtExternaTanqueTextController
                                                                .text,
                                                          ));
                                                          await showDialog(
                                                            context: context,
                                                            builder:
                                                                (alertDialogContext) {
                                                              return AlertDialog(
                                                                title: Text(
                                                                    'Sucesso!'),
                                                                content: Text(
                                                                    'Inspeção salva com sucesso.'),
                                                                actions: [
                                                                  TextButton(
                                                                    onPressed: () =>
                                                                        Navigator.pop(
                                                                            alertDialogContext),
                                                                    child: Text(
                                                                        'Ok'),
                                                                  ),
                                                                ],
                                                              );
                                                            },
                                                          );

                                                          setState(() {});
                                                        },
                                                        text: 'Salvar',
                                                        options:
                                                            FFButtonOptions(
                                                          height: 40.0,
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      24.0,
                                                                      0.0,
                                                                      24.0,
                                                                      0.0),
                                                          iconPadding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      0.0,
                                                                      0.0),
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primary,
                                                          textStyle:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .titleSmall
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                          elevation: 3.0,
                                                          borderSide:
                                                              BorderSide(
                                                            color: Colors
                                                                .transparent,
                                                            width: 1.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      8.0),
                                                        ),
                                                      ),
                                                      SizedBox(
                                                        width: 800.0,
                                                        child: Divider(
                                                          thickness: 1.0,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primaryBackground,
                                                        ),
                                                      ),
                                                    ].divide(
                                                        SizedBox(height: 40.0)),
                                                  ),
                                                ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 80.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.center,
                                                  children: [
                                                    Text(
                                                      'RESPOSTAS',
                                                      textAlign:
                                                          TextAlign.center,
                                                      style: FlutterFlowTheme
                                                              .of(context)
                                                          .labelMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .secondaryText,
                                                            fontSize: 16.0,
                                                            letterSpacing: 0.0,
                                                            fontWeight:
                                                                FontWeight.bold,
                                                          ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 40.0, 0.0, 0.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tanquesAplicabilidadeTANQUESRecord.tanqueMetalicoArmazenamento ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                          .tanqueMetalicoArmazenamento ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tanque Metálico de Armazenamento',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tanquesAplicabilidadeTANQUESRecord.tanqueDiametroExternoMaiorTresMetros ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                          .tanqueDiametroExternoMaiorTresMetros ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tanque com Diâmetro Externo Maior que 3 Metros',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tanquesAplicabilidadeTANQUESRecord.tanqueCapacidadeNominalMaiorVinteMilLitros ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                          .tanqueCapacidadeNominalMaiorVinteMilLitros ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tanque com Capacidade Nominal Maior que 20.000 Litros',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tanquesAplicabilidadeTANQUESRecord.tanqueEnterrado ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                          .tanqueEnterrado ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tanque Enterrado',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tanquesAplicabilidadeTANQUESRecord.tanqueApoiadoSobrePernas ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                          .tanqueApoiadoSobrePernas ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tanque Apoiado Sobre Pés',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tanquesAplicabilidadeTANQUESRecord.tanqueApoiadoSobreSapatas ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                          .tanqueApoiadoSobreSapatas ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tanque Apoiado Sobre Sapatas',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tanquesAplicabilidadeTANQUESRecord.tanqueApoiadoSobrePedestais ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                          .tanqueApoiadoSobrePedestais ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tanque Apoiado Sobre Pedestais',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tanquesAplicabilidadeTANQUESRecord.tanqueApoiadoSobreSelas ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                          .tanqueApoiadoSobreSelas ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tanque Apoiado Sobre Selas',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tanquesAplicabilidadeTANQUESRecord.tanqueEstruturalEmbarcacao ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                          .tanqueEstruturalEmbarcacao ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tanque Estrutural para Embarcações',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tanquesAplicabilidadeTANQUESRecord.tanqueEstruturalNavio ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                          .tanqueEstruturalNavio ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tanque Estrutural para Uso Viário',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tanquesAplicabilidadeTANQUESRecord.tanqueEstruturalPlataforma ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                          .tanqueEstruturalPlataforma ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tanque Estrutural para Plataformas',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primary,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tanquesAplicabilidadeTANQUESRecord
                                                                  .fluido,
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Fluido',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                  ].divide(
                                                      SizedBox(height: 35.0)),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 20.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.end,
                                                  children: [
                                                    Padding(
                                                      padding:
                                                          EdgeInsetsDirectional
                                                              .fromSTEB(
                                                                  0.0,
                                                                  0.0,
                                                                  20.0,
                                                                  0.0),
                                                      child: FFButtonWidget(
                                                        onPressed: () async {
                                                          setState(() {
                                                            _model.showAvaliacaoTANQUES =
                                                                false;
                                                          });
                                                        },
                                                        text: 'Voltar',
                                                        options:
                                                            FFButtonOptions(
                                                          height: 40.0,
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      24.0,
                                                                      0.0,
                                                                      24.0,
                                                                      0.0),
                                                          iconPadding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      0.0,
                                                                      0.0),
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primary,
                                                          textStyle:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .titleSmall
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                          elevation: 3.0,
                                                          borderSide:
                                                              BorderSide(
                                                            color: Colors
                                                                .transparent,
                                                            width: 1.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      8.0),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  );
                                },
                              ),
                            if (_model.showAvaliacaoCALDEIRAS)
                              StreamBuilder<AplicabilidadeCALDSRecord>(
                                stream: AplicabilidadeCALDSRecord.getDocument(
                                    FFAppState().showAvaliacaoNRCALDEIRAS!),
                                builder: (context, snapshot) {
                                  // Customize what your widget looks like when it's loading.
                                  if (!snapshot.hasData) {
                                    return Center(
                                      child: SizedBox(
                                        width: 50.0,
                                        height: 50.0,
                                        child: CircularProgressIndicator(
                                          valueColor:
                                              AlwaysStoppedAnimation<Color>(
                                            FlutterFlowTheme.of(context)
                                                .primary,
                                          ),
                                        ),
                                      ),
                                    );
                                  }
                                  final caldeirasAplicabilidadeCALDSRecord =
                                      snapshot.data!;
                                  return Container(
                                    width:
                                        MediaQuery.sizeOf(context).width * 1.0,
                                    decoration: BoxDecoration(
                                      color: FlutterFlowTheme.of(context)
                                          .secondaryBackground,
                                      borderRadius: BorderRadius.circular(8.0),
                                    ),
                                    child: Padding(
                                      padding: EdgeInsets.all(20.0),
                                      child: Column(
                                        mainAxisSize: MainAxisSize.max,
                                        children: [
                                          Column(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 10.0, 0.0, 0.0),
                                                child: Text(
                                                  'ÚLTIMA AVALIAÇÃO NR-13',
                                                  style: FlutterFlowTheme.of(
                                                          context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .primary,
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.bold,
                                                      ),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 10.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.min,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.start,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    Container(
                                                      width: () {
                                                        if (MediaQuery.sizeOf(
                                                                    context)
                                                                .width <
                                                            kBreakpointSmall) {
                                                          return 150.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointMedium) {
                                                          return 390.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointLarge) {
                                                          return 390.0;
                                                        } else {
                                                          return 390.0;
                                                        }
                                                      }(),
                                                      decoration:
                                                          BoxDecoration(),
                                                      child: Text(
                                                        'Iniciada em:',
                                                        textAlign:
                                                            TextAlign.end,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                      ),
                                                    ),
                                                    Container(
                                                      width: () {
                                                        if (MediaQuery.sizeOf(
                                                                    context)
                                                                .width <
                                                            kBreakpointSmall) {
                                                          return 150.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointMedium) {
                                                          return 390.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointLarge) {
                                                          return 390.0;
                                                        } else {
                                                          return 390.0;
                                                        }
                                                      }(),
                                                      decoration:
                                                          BoxDecoration(),
                                                      child: Text(
                                                        dateTimeFormat(
                                                            'd/M/y',
                                                            caldeirasAplicabilidadeCALDSRecord
                                                                .createdTime!),
                                                        textAlign:
                                                            TextAlign.start,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                      ),
                                                    ),
                                                  ].divide(
                                                      SizedBox(width: 20.0)),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 40.0, 0.0, 40.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.center,
                                                  children: [
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Avaliador',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            caldeirasAplicabilidadeCALDSRecord
                                                                .avaliador,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tipo de equipamento',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            caldeirasAplicabilidadeCALDSRecord
                                                                .tipoEquipamento,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Equipamento',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            caldeirasAplicabilidadeCALDSRecord
                                                                .equipamento,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Código',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            caldeirasAplicabilidadeCALDSRecord
                                                                .codigo,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Inspeção Periódica Interna',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              '${caldeirasAplicabilidadeCALDSRecord.inspecaoInterna} Meses',
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Inspeção Periódica Externa',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              '${caldeirasAplicabilidadeCALDSRecord.inspecaoExterna} Meses',
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Observação',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              caldeirasAplicabilidadeCALDSRecord
                                                                  .observacao,
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                  ].divide(
                                                      SizedBox(height: 20.0)),
                                                ),
                                              ),
                                              Text(
                                                (caldeirasAplicabilidadeCALDSRecord.codigo == 'G2.1') ||
                                                        (caldeirasAplicabilidadeCALDSRecord
                                                                .codigo ==
                                                            'G2.2') ||
                                                        (caldeirasAplicabilidadeCALDSRecord
                                                                .codigo ==
                                                            'G2.3') ||
                                                        (caldeirasAplicabilidadeCALDSRecord
                                                                .codigo ==
                                                            'G2.4') ||
                                                        (caldeirasAplicabilidadeCALDSRecord
                                                                .codigo ==
                                                            'G2.5') ||
                                                        (caldeirasAplicabilidadeCALDSRecord
                                                                .codigo ==
                                                            'G2.6') ||
                                                        (caldeirasAplicabilidadeCALDSRecord
                                                                .codigo ==
                                                            'G2.7') ||
                                                        (caldeirasAplicabilidadeCALDSRecord
                                                                .codigo ==
                                                            'G2.8') ||
                                                        (caldeirasAplicabilidadeCALDSRecord
                                                                .codigo ==
                                                            'G2.9') ||
                                                        (caldeirasAplicabilidadeCALDSRecord
                                                                .codigo ==
                                                            'G2.10') ||
                                                        (caldeirasAplicabilidadeCALDSRecord
                                                                .codigo ==
                                                            'G2.11')
                                                    ? '${caldeirasAplicabilidadeCALDSRecord.codigo}NR13 NÃO APLICÁVEL!'
                                                    : caldeirasAplicabilidadeCALDSRecord
                                                        .codigo,
                                                textAlign: TextAlign.center,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color:
                                                              Color(0xFF4DA5DF),
                                                          fontSize: 28.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                              ),
                                              if ((caldeirasAplicabilidadeCALDSRecord.codigo == 'G1.1') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.2') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.3') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.4') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.5') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.6') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.7') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.25') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.15') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.8') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.9') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.10') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.11') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.12') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.13') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.14') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.15') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.16') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.17') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.18') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.19') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.20') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.21') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.22') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.23') ||
                                                  (caldeirasAplicabilidadeCALDSRecord
                                                          .codigo ==
                                                      'G1.24'))
                                                Padding(
                                                  padding: EdgeInsetsDirectional
                                                      .fromSTEB(
                                                          0.0, 80.0, 0.0, 0.0),
                                                  child: Column(
                                                    mainAxisSize:
                                                        MainAxisSize.max,
                                                    children: [
                                                      SizedBox(
                                                        width: 800.0,
                                                        child: Divider(
                                                          thickness: 1.0,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primaryBackground,
                                                        ),
                                                      ),
                                                      Text(
                                                        'CADASTRAR/ATUALIZAR PLANO DE INSPEÇÃO',
                                                        textAlign:
                                                            TextAlign.center,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                      ),
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .start,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Inspeção Periódica Interna',
                                                              textAlign:
                                                                  TextAlign.end,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: 390.0,
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Expanded(
                                                                  child: Row(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    children: [
                                                                      Padding(
                                                                        padding: EdgeInsetsDirectional.fromSTEB(
                                                                            8.0,
                                                                            0.0,
                                                                            8.0,
                                                                            0.0),
                                                                        child:
                                                                            Container(
                                                                          width:
                                                                              100.0,
                                                                          child:
                                                                              TextFormField(
                                                                            controller: _model.periodiG1TxtInternaCaldeiraTextController ??=
                                                                                TextEditingController(
                                                                              text: caldeirasAplicabilidadeCALDSRecord.inspecaoInterna,
                                                                            ),
                                                                            focusNode:
                                                                                _model.periodiG1TxtInternaCaldeiraFocusNode,
                                                                            autofocus:
                                                                                true,
                                                                            obscureText:
                                                                                false,
                                                                            decoration:
                                                                                InputDecoration(
                                                                              isDense: true,
                                                                              labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                    fontFamily: 'Inter',
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                              hintStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                    fontFamily: 'Inter',
                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                              enabledBorder: UnderlineInputBorder(
                                                                                borderSide: BorderSide(
                                                                                  color: FlutterFlowTheme.of(context).secondaryText,
                                                                                  width: 2.0,
                                                                                ),
                                                                                borderRadius: BorderRadius.circular(0.0),
                                                                              ),
                                                                              focusedBorder: UnderlineInputBorder(
                                                                                borderSide: BorderSide(
                                                                                  color: FlutterFlowTheme.of(context).primary,
                                                                                  width: 2.0,
                                                                                ),
                                                                                borderRadius: BorderRadius.circular(0.0),
                                                                              ),
                                                                              errorBorder: UnderlineInputBorder(
                                                                                borderSide: BorderSide(
                                                                                  color: FlutterFlowTheme.of(context).error,
                                                                                  width: 2.0,
                                                                                ),
                                                                                borderRadius: BorderRadius.circular(0.0),
                                                                              ),
                                                                              focusedErrorBorder: UnderlineInputBorder(
                                                                                borderSide: BorderSide(
                                                                                  color: FlutterFlowTheme.of(context).error,
                                                                                  width: 2.0,
                                                                                ),
                                                                                borderRadius: BorderRadius.circular(0.0),
                                                                              ),
                                                                            ),
                                                                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                  fontFamily: 'Inter',
                                                                                  letterSpacing: 0.0,
                                                                                ),
                                                                            keyboardType:
                                                                                TextInputType.number,
                                                                            validator:
                                                                                _model.periodiG1TxtInternaCaldeiraTextControllerValidator.asValidator(context),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      Text(
                                                                        'Meses',
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .bodyMedium
                                                                            .override(
                                                                              fontFamily: 'Inter',
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .start,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Inspeção Periódica Externa',
                                                              textAlign:
                                                                  TextAlign.end,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: 390.0,
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Expanded(
                                                                  child: Row(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    children: [
                                                                      Padding(
                                                                        padding: EdgeInsetsDirectional.fromSTEB(
                                                                            8.0,
                                                                            0.0,
                                                                            8.0,
                                                                            0.0),
                                                                        child:
                                                                            Container(
                                                                          width:
                                                                              100.0,
                                                                          child:
                                                                              TextFormField(
                                                                            controller: _model.periodiG1TxtExtCaldeiraTextController ??=
                                                                                TextEditingController(
                                                                              text: caldeirasAplicabilidadeCALDSRecord.inspecaoExterna,
                                                                            ),
                                                                            focusNode:
                                                                                _model.periodiG1TxtExtCaldeiraFocusNode,
                                                                            autofocus:
                                                                                true,
                                                                            obscureText:
                                                                                false,
                                                                            decoration:
                                                                                InputDecoration(
                                                                              isDense: true,
                                                                              labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                    fontFamily: 'Inter',
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                              hintStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                    fontFamily: 'Inter',
                                                                                    color: FlutterFlowTheme.of(context).primaryText,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                              enabledBorder: UnderlineInputBorder(
                                                                                borderSide: BorderSide(
                                                                                  color: FlutterFlowTheme.of(context).secondaryText,
                                                                                  width: 2.0,
                                                                                ),
                                                                                borderRadius: BorderRadius.circular(0.0),
                                                                              ),
                                                                              focusedBorder: UnderlineInputBorder(
                                                                                borderSide: BorderSide(
                                                                                  color: FlutterFlowTheme.of(context).primary,
                                                                                  width: 2.0,
                                                                                ),
                                                                                borderRadius: BorderRadius.circular(0.0),
                                                                              ),
                                                                              errorBorder: UnderlineInputBorder(
                                                                                borderSide: BorderSide(
                                                                                  color: FlutterFlowTheme.of(context).error,
                                                                                  width: 2.0,
                                                                                ),
                                                                                borderRadius: BorderRadius.circular(0.0),
                                                                              ),
                                                                              focusedErrorBorder: UnderlineInputBorder(
                                                                                borderSide: BorderSide(
                                                                                  color: FlutterFlowTheme.of(context).error,
                                                                                  width: 2.0,
                                                                                ),
                                                                                borderRadius: BorderRadius.circular(0.0),
                                                                              ),
                                                                            ),
                                                                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                  fontFamily: 'Inter',
                                                                                  letterSpacing: 0.0,
                                                                                ),
                                                                            keyboardType:
                                                                                TextInputType.number,
                                                                            validator:
                                                                                _model.periodiG1TxtExtCaldeiraTextControllerValidator.asValidator(context),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      Text(
                                                                        'Meses',
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .bodyMedium
                                                                            .override(
                                                                              fontFamily: 'Inter',
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                      FFButtonWidget(
                                                        onPressed: () async {
                                                          await caldeirasAplicabilidadeCALDSRecord
                                                              .reference
                                                              .update(
                                                                  createAplicabilidadeCALDSRecordData(
                                                            inspecaoInterna: _model
                                                                .periodiG1TxtInternaCaldeiraTextController
                                                                .text,
                                                            inspecaoExterna: _model
                                                                .periodiG1TxtExtCaldeiraTextController
                                                                .text,
                                                          ));
                                                          _model.equipToUpdateCALDERIA =
                                                              await queryEquipamentosRecordOnce(
                                                            queryBuilder:
                                                                (equipamentosRecord) =>
                                                                    equipamentosRecord
                                                                        .where(
                                                              'Nome',
                                                              isEqualTo:
                                                                  caldeirasAplicabilidadeCALDSRecord
                                                                      .equipamento,
                                                            ),
                                                            singleRecord: true,
                                                          ).then((s) => s
                                                                  .firstOrNull);

                                                          await _model
                                                              .equipToUpdateCALDERIA!
                                                              .reference
                                                              .update(
                                                                  createEquipamentosRecordData(
                                                            interna: _model
                                                                .periodiG1TxtInternaCaldeiraTextController
                                                                .text,
                                                            externa: _model
                                                                .periodiG1TxtExtCaldeiraTextController
                                                                .text,
                                                          ));
                                                          await showDialog(
                                                            context: context,
                                                            builder:
                                                                (alertDialogContext) {
                                                              return AlertDialog(
                                                                title: Text(
                                                                    'Sucesso!'),
                                                                content: Text(
                                                                    'Inspeção salva com sucesso.'),
                                                                actions: [
                                                                  TextButton(
                                                                    onPressed: () =>
                                                                        Navigator.pop(
                                                                            alertDialogContext),
                                                                    child: Text(
                                                                        'Ok'),
                                                                  ),
                                                                ],
                                                              );
                                                            },
                                                          );

                                                          setState(() {});
                                                        },
                                                        text: 'Salvar',
                                                        options:
                                                            FFButtonOptions(
                                                          height: 40.0,
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      24.0,
                                                                      0.0,
                                                                      24.0,
                                                                      0.0),
                                                          iconPadding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      0.0,
                                                                      0.0),
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primary,
                                                          textStyle:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .titleSmall
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                          elevation: 3.0,
                                                          borderSide:
                                                              BorderSide(
                                                            color: Colors
                                                                .transparent,
                                                            width: 1.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      8.0),
                                                        ),
                                                      ),
                                                      SizedBox(
                                                        width: 800.0,
                                                        child: Divider(
                                                          thickness: 1.0,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primaryBackground,
                                                        ),
                                                      ),
                                                    ].divide(
                                                        SizedBox(height: 40.0)),
                                                  ),
                                                ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 80.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.center,
                                                  children: [
                                                    Text(
                                                      'RESPOSTAS',
                                                      textAlign:
                                                          TextAlign.center,
                                                      style: FlutterFlowTheme
                                                              .of(context)
                                                          .labelMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .secondaryText,
                                                            fontSize: 16.0,
                                                            letterSpacing: 0.0,
                                                            fontWeight:
                                                                FontWeight.bold,
                                                          ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 40.0, 0.0, 0.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: caldeirasAplicabilidadeCALDSRecord.sPIEServicoProprioInspecaoEquipamento ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              caldeirasAplicabilidadeCALDSRecord
                                                                          .sPIEServicoProprioInspecaoEquipamento ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'SPIE - Serviço Próprio de Inspeção de Equipamento',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: caldeirasAplicabilidadeCALDSRecord.paraRecuperacaoAlcalis ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              caldeirasAplicabilidadeCALDSRecord
                                                                          .paraRecuperacaoAlcalis ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Para Recuperação de Álcalis',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: caldeirasAplicabilidadeCALDSRecord.testeAberturaValvulasSeguurancaUmAno ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              caldeirasAplicabilidadeCALDSRecord
                                                                          .testeAberturaValvulasSeguurancaUmAno ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Teste de Abertura de Válvulas de Seguurança a cada período de, no máximo, de 12 meses',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: caldeirasAplicabilidadeCALDSRecord.barreiraSISSistemaInstrumentadoSeguranca ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              caldeirasAplicabilidadeCALDSRecord
                                                                          .barreiraSISSistemaInstrumentadoSeguranca ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Barreira Por SIS - Sistema Instrumentado de Segurança',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: caldeirasAplicabilidadeCALDSRecord.sGCSistemaGerenciamentoCombustao ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              caldeirasAplicabilidadeCALDSRecord
                                                                          .sGCSistemaGerenciamentoCombustao ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Com SGC- Sistema de Gerenciamento de Combustão ',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: caldeirasAplicabilidadeCALDSRecord.operacaoComAguaTratada ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              caldeirasAplicabilidadeCALDSRecord
                                                                          .operacaoComAguaTratada ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Operação Com Água Tratada ',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: caldeirasAplicabilidadeCALDSRecord.vaporizacaoFluidoTermico ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              caldeirasAplicabilidadeCALDSRecord
                                                                          .vaporizacaoFluidoTermico ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Vaporização de Fluido Térmico',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                  ].divide(
                                                      SizedBox(height: 35.0)),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 20.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.end,
                                                  children: [
                                                    Padding(
                                                      padding:
                                                          EdgeInsetsDirectional
                                                              .fromSTEB(
                                                                  0.0,
                                                                  0.0,
                                                                  20.0,
                                                                  0.0),
                                                      child: FFButtonWidget(
                                                        onPressed: () async {
                                                          setState(() {
                                                            _model.showAvaliacaoCALDEIRAS =
                                                                false;
                                                          });
                                                        },
                                                        text: 'Voltar',
                                                        options:
                                                            FFButtonOptions(
                                                          height: 40.0,
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      24.0,
                                                                      0.0,
                                                                      24.0,
                                                                      0.0),
                                                          iconPadding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      0.0,
                                                                      0.0),
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primary,
                                                          textStyle:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .titleSmall
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                          elevation: 3.0,
                                                          borderSide:
                                                              BorderSide(
                                                            color: Colors
                                                                .transparent,
                                                            width: 1.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      8.0),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        10.0, 0.0, 0.0, 20.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  children: [
                                                    Container(
                                                      decoration: BoxDecoration(
                                                        color: FlutterFlowTheme
                                                                .of(context)
                                                            .secondaryBackground,
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  );
                                },
                              ),
                            if (_model.showAvaliacaoTUBCALDEIRAS)
                              StreamBuilder<AplicabilidadeTUBCALDSRecord>(
                                stream:
                                    AplicabilidadeTUBCALDSRecord.getDocument(
                                        FFAppState()
                                            .showAvaliacaoNR13TUBCALDEIRAS!),
                                builder: (context, snapshot) {
                                  // Customize what your widget looks like when it's loading.
                                  if (!snapshot.hasData) {
                                    return Center(
                                      child: SizedBox(
                                        width: 50.0,
                                        height: 50.0,
                                        child: CircularProgressIndicator(
                                          valueColor:
                                              AlwaysStoppedAnimation<Color>(
                                            FlutterFlowTheme.of(context)
                                                .primary,
                                          ),
                                        ),
                                      ),
                                    );
                                  }
                                  final tUBCaldeirasAplicabilidadeTUBCALDSRecord =
                                      snapshot.data!;
                                  return Container(
                                    width:
                                        MediaQuery.sizeOf(context).width * 1.0,
                                    decoration: BoxDecoration(
                                      color: FlutterFlowTheme.of(context)
                                          .secondaryBackground,
                                      borderRadius: BorderRadius.circular(8.0),
                                    ),
                                    child: Padding(
                                      padding: EdgeInsets.all(20.0),
                                      child: Column(
                                        mainAxisSize: MainAxisSize.max,
                                        children: [
                                          Column(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 10.0, 0.0, 0.0),
                                                child: Text(
                                                  'ÚLTIMA AVALIAÇÃO NR-13',
                                                  style: FlutterFlowTheme.of(
                                                          context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .primary,
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.bold,
                                                      ),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 10.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.min,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.start,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    Container(
                                                      width: () {
                                                        if (MediaQuery.sizeOf(
                                                                    context)
                                                                .width <
                                                            kBreakpointSmall) {
                                                          return 150.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointMedium) {
                                                          return 390.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointLarge) {
                                                          return 390.0;
                                                        } else {
                                                          return 390.0;
                                                        }
                                                      }(),
                                                      decoration:
                                                          BoxDecoration(),
                                                      child: Text(
                                                        'Iniciada em:',
                                                        textAlign:
                                                            TextAlign.end,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                      ),
                                                    ),
                                                    Container(
                                                      width: () {
                                                        if (MediaQuery.sizeOf(
                                                                    context)
                                                                .width <
                                                            kBreakpointSmall) {
                                                          return 150.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointMedium) {
                                                          return 390.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointLarge) {
                                                          return 390.0;
                                                        } else {
                                                          return 390.0;
                                                        }
                                                      }(),
                                                      decoration:
                                                          BoxDecoration(),
                                                      child: Text(
                                                        dateTimeFormat(
                                                            'd/M/y',
                                                            tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .createdTime!),
                                                        textAlign:
                                                            TextAlign.start,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                      ),
                                                    ),
                                                  ].divide(
                                                      SizedBox(width: 20.0)),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 40.0, 0.0, 40.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.center,
                                                  children: [
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Avaliador',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .avaliador,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tipo de equipamento',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .tipoEquipamento,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Equipamento',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .equipamento,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Código',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .codigo,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Categoria',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                  .categoria,
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Inspeção Periódica Interna',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              '${tUBCaldeirasAplicabilidadeTUBCALDSRecord.inspecaoInterna} Meses',
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Inspeção Periódica Externa',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              '${tUBCaldeirasAplicabilidadeTUBCALDSRecord.inspecaoExterna} Meses',
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Observação',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                  .observacao,
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                  ].divide(
                                                      SizedBox(height: 20.0)),
                                                ),
                                              ),
                                              Text(
                                                (tUBCaldeirasAplicabilidadeTUBCALDSRecord.codigo == 'G2.1') ||
                                                        (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .codigo ==
                                                            'G2.2') ||
                                                        (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .codigo ==
                                                            'G2.3') ||
                                                        (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .codigo ==
                                                            'G2.4') ||
                                                        (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .codigo ==
                                                            'G2.5') ||
                                                        (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .codigo ==
                                                            'G2.6') ||
                                                        (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .codigo ==
                                                            'G2.7') ||
                                                        (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .codigo ==
                                                            'G2.8') ||
                                                        (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .codigo ==
                                                            'G2.9') ||
                                                        (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .codigo ==
                                                            'G2.10') ||
                                                        (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                .codigo ==
                                                            'G2.11')
                                                    ? '${tUBCaldeirasAplicabilidadeTUBCALDSRecord.codigo}NR13 NÃO APLICÁVEL!'
                                                    : tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                        .codigo,
                                                textAlign: TextAlign.center,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color:
                                                              Color(0xFF4DA5DF),
                                                          fontSize: 28.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                              ),
                                              if ((tUBCaldeirasAplicabilidadeTUBCALDSRecord.codigo == 'G1.1') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.2') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.3') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.4') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.5') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.6') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.7') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.25') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.15') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.8') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.9') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.10') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.11') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.12') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.13') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.14') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.15') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.16') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.17') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.18') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.19') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.20') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.21') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.22') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.23') ||
                                                  (tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                          .codigo ==
                                                      'G1.24'))
                                                Padding(
                                                  padding: EdgeInsetsDirectional
                                                      .fromSTEB(
                                                          0.0, 80.0, 0.0, 0.0),
                                                  child: Column(
                                                    mainAxisSize:
                                                        MainAxisSize.max,
                                                    children: [
                                                      SizedBox(
                                                        width: 800.0,
                                                        child: Divider(
                                                          thickness: 1.0,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primaryBackground,
                                                        ),
                                                      ),
                                                      Text(
                                                        'CADASTRAR/ATUALIZAR PLANO DE INSPEÇÃO',
                                                        textAlign:
                                                            TextAlign.center,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                      ),
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .start,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Inspeção Periódica Interna',
                                                              textAlign:
                                                                  TextAlign.end,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: 390.0,
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Expanded(
                                                                  child: Row(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    children: [
                                                                      Expanded(
                                                                        child:
                                                                            Row(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                                                                              child: Container(
                                                                                width: 100.0,
                                                                                child: TextFormField(
                                                                                  controller: _model.periodiG1TxtInternaTubcaldTextController ??= TextEditingController(
                                                                                    text: tUBCaldeirasAplicabilidadeTUBCALDSRecord.inspecaoInterna,
                                                                                  ),
                                                                                  focusNode: _model.periodiG1TxtInternaTubcaldFocusNode,
                                                                                  autofocus: true,
                                                                                  obscureText: false,
                                                                                  decoration: InputDecoration(
                                                                                    isDense: true,
                                                                                    labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                          fontFamily: 'Inter',
                                                                                          letterSpacing: 0.0,
                                                                                        ),
                                                                                    hintStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                          fontFamily: 'Inter',
                                                                                          color: FlutterFlowTheme.of(context).primaryText,
                                                                                          letterSpacing: 0.0,
                                                                                        ),
                                                                                    enabledBorder: UnderlineInputBorder(
                                                                                      borderSide: BorderSide(
                                                                                        color: FlutterFlowTheme.of(context).secondaryText,
                                                                                        width: 2.0,
                                                                                      ),
                                                                                      borderRadius: BorderRadius.circular(0.0),
                                                                                    ),
                                                                                    focusedBorder: UnderlineInputBorder(
                                                                                      borderSide: BorderSide(
                                                                                        color: FlutterFlowTheme.of(context).primary,
                                                                                        width: 2.0,
                                                                                      ),
                                                                                      borderRadius: BorderRadius.circular(0.0),
                                                                                    ),
                                                                                    errorBorder: UnderlineInputBorder(
                                                                                      borderSide: BorderSide(
                                                                                        color: FlutterFlowTheme.of(context).error,
                                                                                        width: 2.0,
                                                                                      ),
                                                                                      borderRadius: BorderRadius.circular(0.0),
                                                                                    ),
                                                                                    focusedErrorBorder: UnderlineInputBorder(
                                                                                      borderSide: BorderSide(
                                                                                        color: FlutterFlowTheme.of(context).error,
                                                                                        width: 2.0,
                                                                                      ),
                                                                                      borderRadius: BorderRadius.circular(0.0),
                                                                                    ),
                                                                                  ),
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                  keyboardType: TextInputType.number,
                                                                                  validator: _model.periodiG1TxtInternaTubcaldTextControllerValidator.asValidator(context),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'Meses',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Inter',
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .start,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Inspeção Periódica Externa',
                                                              textAlign:
                                                                  TextAlign.end,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: 390.0,
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Expanded(
                                                                  child: Row(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    children: [
                                                                      Expanded(
                                                                        child:
                                                                            Row(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                                                                              child: Container(
                                                                                width: 100.0,
                                                                                child: TextFormField(
                                                                                  controller: _model.periodiG1TxtExternaTubcaldTextController ??= TextEditingController(
                                                                                    text: tUBCaldeirasAplicabilidadeTUBCALDSRecord.inspecaoExterna,
                                                                                  ),
                                                                                  focusNode: _model.periodiG1TxtExternaTubcaldFocusNode,
                                                                                  autofocus: true,
                                                                                  obscureText: false,
                                                                                  decoration: InputDecoration(
                                                                                    isDense: true,
                                                                                    labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                          fontFamily: 'Inter',
                                                                                          letterSpacing: 0.0,
                                                                                        ),
                                                                                    hintStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                          fontFamily: 'Inter',
                                                                                          color: FlutterFlowTheme.of(context).primaryText,
                                                                                          letterSpacing: 0.0,
                                                                                        ),
                                                                                    enabledBorder: UnderlineInputBorder(
                                                                                      borderSide: BorderSide(
                                                                                        color: FlutterFlowTheme.of(context).secondaryText,
                                                                                        width: 2.0,
                                                                                      ),
                                                                                      borderRadius: BorderRadius.circular(0.0),
                                                                                    ),
                                                                                    focusedBorder: UnderlineInputBorder(
                                                                                      borderSide: BorderSide(
                                                                                        color: FlutterFlowTheme.of(context).primary,
                                                                                        width: 2.0,
                                                                                      ),
                                                                                      borderRadius: BorderRadius.circular(0.0),
                                                                                    ),
                                                                                    errorBorder: UnderlineInputBorder(
                                                                                      borderSide: BorderSide(
                                                                                        color: FlutterFlowTheme.of(context).error,
                                                                                        width: 2.0,
                                                                                      ),
                                                                                      borderRadius: BorderRadius.circular(0.0),
                                                                                    ),
                                                                                    focusedErrorBorder: UnderlineInputBorder(
                                                                                      borderSide: BorderSide(
                                                                                        color: FlutterFlowTheme.of(context).error,
                                                                                        width: 2.0,
                                                                                      ),
                                                                                      borderRadius: BorderRadius.circular(0.0),
                                                                                    ),
                                                                                  ),
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                  keyboardType: TextInputType.number,
                                                                                  validator: _model.periodiG1TxtExternaTubcaldTextControllerValidator.asValidator(context),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'Meses',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Inter',
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                      FFButtonWidget(
                                                        onPressed: () async {
                                                          await tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                              .reference
                                                              .update(
                                                                  createAplicabilidadeTUBCALDSRecordData(
                                                            inspecaoInterna: _model
                                                                .periodiG1TxtInternaTubcaldTextController
                                                                .text,
                                                            inspecaoExterna: _model
                                                                .periodiG1TxtExternaTubcaldTextController
                                                                .text,
                                                          ));
                                                          _model.equipToUpdateTUBCALD =
                                                              await queryEquipamentosRecordOnce(
                                                            queryBuilder:
                                                                (equipamentosRecord) =>
                                                                    equipamentosRecord
                                                                        .where(
                                                              'Nome',
                                                              isEqualTo:
                                                                  tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                      .equipamento,
                                                            ),
                                                            singleRecord: true,
                                                          ).then((s) => s
                                                                  .firstOrNull);

                                                          await _model
                                                              .equipToUpdateTUBCALD!
                                                              .reference
                                                              .update(
                                                                  createEquipamentosRecordData(
                                                            interna: _model
                                                                .periodiG1TxtInternaTubcaldTextController
                                                                .text,
                                                            externa: _model
                                                                .periodiG1TxtExternaTubcaldTextController
                                                                .text,
                                                          ));
                                                          await showDialog(
                                                            context: context,
                                                            builder:
                                                                (alertDialogContext) {
                                                              return AlertDialog(
                                                                title: Text(
                                                                    'Sucesso!'),
                                                                content: Text(
                                                                    'Inspeção salva com sucesso.'),
                                                                actions: [
                                                                  TextButton(
                                                                    onPressed: () =>
                                                                        Navigator.pop(
                                                                            alertDialogContext),
                                                                    child: Text(
                                                                        'Ok'),
                                                                  ),
                                                                ],
                                                              );
                                                            },
                                                          );

                                                          setState(() {});
                                                        },
                                                        text: 'Salvar',
                                                        options:
                                                            FFButtonOptions(
                                                          height: 40.0,
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      24.0,
                                                                      0.0,
                                                                      24.0,
                                                                      0.0),
                                                          iconPadding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      0.0,
                                                                      0.0),
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primary,
                                                          textStyle:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .titleSmall
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                          elevation: 3.0,
                                                          borderSide:
                                                              BorderSide(
                                                            color: Colors
                                                                .transparent,
                                                            width: 1.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      8.0),
                                                        ),
                                                      ),
                                                      SizedBox(
                                                        width: 800.0,
                                                        child: Divider(
                                                          thickness: 1.0,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primaryBackground,
                                                        ),
                                                      ),
                                                    ].divide(
                                                        SizedBox(height: 40.0)),
                                                  ),
                                                ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 80.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.center,
                                                  children: [
                                                    Text(
                                                      'RESPOSTAS',
                                                      textAlign:
                                                          TextAlign.center,
                                                      style: FlutterFlowTheme
                                                              .of(context)
                                                          .labelMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .secondaryText,
                                                            fontSize: 16.0,
                                                            letterSpacing: 0.0,
                                                            fontWeight:
                                                                FontWeight.bold,
                                                          ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 40.0, 0.0, 0.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBCaldeirasAplicabilidadeTUBCALDSRecord.servicoProprioInspecaoEquipamentoSPIE ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                          .servicoProprioInspecaoEquipamentoSPIE ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'SPIE - Serviço Próprio de Inspeção de Equipamento',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBCaldeirasAplicabilidadeTUBCALDSRecord.recuperacaoAlcalis ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                          .recuperacaoAlcalis ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Para Recuperação de Álcalis',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBCaldeirasAplicabilidadeTUBCALDSRecord.testeAberturaValvulasSegurancaUmAno ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                          .testeAberturaValvulasSegurancaUmAno ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Teste de Abertura de Válvulas de Seguurança a cada período de, no máximo, de 12 meses',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBCaldeirasAplicabilidadeTUBCALDSRecord.barreiraSIS ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                          .barreiraSIS ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Barreira Por SIS - Sistema Instrumentado de Segurança',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBCaldeirasAplicabilidadeTUBCALDSRecord.comSGC ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                          .comSGC ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Com SGC- Sistema de Gerenciamento de Combustão ',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBCaldeirasAplicabilidadeTUBCALDSRecord.operacaoComAguaTratada ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                          .operacaoComAguaTratada ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Operação Com Água Tratada ',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBCaldeirasAplicabilidadeTUBCALDSRecord.vaporizacaoFluidoTermico ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                          .vaporizacaoFluidoTermico ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Vaporização de Fluido Térmico',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: tUBCaldeirasAplicabilidadeTUBCALDSRecord.ampliacaoProgramaPLH ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              tUBCaldeirasAplicabilidadeTUBCALDSRecord
                                                                          .ampliacaoProgramaPLH ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Ampliação por Programa de PLH',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                  ].divide(
                                                      SizedBox(height: 35.0)),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 20.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.end,
                                                  children: [
                                                    Padding(
                                                      padding:
                                                          EdgeInsetsDirectional
                                                              .fromSTEB(
                                                                  0.0,
                                                                  0.0,
                                                                  20.0,
                                                                  0.0),
                                                      child: FFButtonWidget(
                                                        onPressed: () async {
                                                          setState(() {
                                                            _model.showAvaliacaoTUBCALDEIRAS =
                                                                false;
                                                          });
                                                        },
                                                        text: 'Voltar',
                                                        options:
                                                            FFButtonOptions(
                                                          height: 40.0,
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      24.0,
                                                                      0.0,
                                                                      24.0,
                                                                      0.0),
                                                          iconPadding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      0.0,
                                                                      0.0),
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primary,
                                                          textStyle:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .titleSmall
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                          elevation: 3.0,
                                                          borderSide:
                                                              BorderSide(
                                                            color: Colors
                                                                .transparent,
                                                            width: 1.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      8.0),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        10.0, 0.0, 0.0, 20.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  children: [
                                                    Container(
                                                      decoration: BoxDecoration(
                                                        color: FlutterFlowTheme
                                                                .of(context)
                                                            .secondaryBackground,
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  );
                                },
                              ),
                            if (_model.showAvaliacaoOUTROS)
                              StreamBuilder<AplicabilidadeOUTROSRecord>(
                                stream: AplicabilidadeOUTROSRecord.getDocument(
                                    FFAppState().showAvaliacaoNR13OUTROS!),
                                builder: (context, snapshot) {
                                  // Customize what your widget looks like when it's loading.
                                  if (!snapshot.hasData) {
                                    return Center(
                                      child: SizedBox(
                                        width: 50.0,
                                        height: 50.0,
                                        child: CircularProgressIndicator(
                                          valueColor:
                                              AlwaysStoppedAnimation<Color>(
                                            FlutterFlowTheme.of(context)
                                                .primary,
                                          ),
                                        ),
                                      ),
                                    );
                                  }
                                  final outrosAplicabilidadeOUTROSRecord =
                                      snapshot.data!;
                                  return Container(
                                    width:
                                        MediaQuery.sizeOf(context).width * 1.0,
                                    decoration: BoxDecoration(
                                      color: FlutterFlowTheme.of(context)
                                          .secondaryBackground,
                                      borderRadius: BorderRadius.circular(8.0),
                                    ),
                                    child: Padding(
                                      padding: EdgeInsets.all(20.0),
                                      child: Column(
                                        mainAxisSize: MainAxisSize.max,
                                        children: [
                                          Column(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 10.0, 0.0, 0.0),
                                                child: Text(
                                                  'ÚLTIMA AVALIAÇÃO NR-13',
                                                  style: FlutterFlowTheme.of(
                                                          context)
                                                      .bodyMedium
                                                      .override(
                                                        fontFamily: 'Inter',
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .primary,
                                                        fontSize: 18.0,
                                                        letterSpacing: 0.0,
                                                        fontWeight:
                                                            FontWeight.bold,
                                                      ),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 10.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.min,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.start,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    Container(
                                                      width: () {
                                                        if (MediaQuery.sizeOf(
                                                                    context)
                                                                .width <
                                                            kBreakpointSmall) {
                                                          return 150.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointMedium) {
                                                          return 390.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointLarge) {
                                                          return 390.0;
                                                        } else {
                                                          return 390.0;
                                                        }
                                                      }(),
                                                      decoration:
                                                          BoxDecoration(),
                                                      child: Text(
                                                        'Iniciada em:',
                                                        textAlign:
                                                            TextAlign.end,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                      ),
                                                    ),
                                                    Container(
                                                      width: () {
                                                        if (MediaQuery.sizeOf(
                                                                    context)
                                                                .width <
                                                            kBreakpointSmall) {
                                                          return 150.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointMedium) {
                                                          return 390.0;
                                                        } else if (MediaQuery
                                                                    .sizeOf(
                                                                        context)
                                                                .width <
                                                            kBreakpointLarge) {
                                                          return 390.0;
                                                        } else {
                                                          return 390.0;
                                                        }
                                                      }(),
                                                      decoration:
                                                          BoxDecoration(),
                                                      child: Text(
                                                        outrosAplicabilidadeOUTROSRecord
                                                            .createdTime,
                                                        textAlign:
                                                            TextAlign.start,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                      ),
                                                    ),
                                                  ].divide(
                                                      SizedBox(width: 20.0)),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 40.0, 0.0, 40.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.center,
                                                  children: [
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Avaliador',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            outrosAplicabilidadeOUTROSRecord
                                                                .avaliador,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tipo de equipamento',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            outrosAplicabilidadeOUTROSRecord
                                                                .tipoEquipamento,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Equipamento',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            outrosAplicabilidadeOUTROSRecord
                                                                .equipamento,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Código',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            outrosAplicabilidadeOUTROSRecord
                                                                .codigo,
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    if ((outrosAplicabilidadeOUTROSRecord
                                                                    .inspecaoInterna !=
                                                                '0') &&
                                                            (outrosAplicabilidadeOUTROSRecord
                                                                        .inspecaoInterna !=
                                                                    null &&
                                                                outrosAplicabilidadeOUTROSRecord
                                                                        .inspecaoInterna !=
                                                                    '')
                                                        ? true
                                                        : false)
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .start,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Inspeção Periódica Interna',
                                                              textAlign:
                                                                  TextAlign.end,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                '${outrosAplicabilidadeOUTROSRecord.inspecaoInterna} Anos',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                    if ((outrosAplicabilidadeOUTROSRecord
                                                                    .inspecaoExterna !=
                                                                '0') &&
                                                            (outrosAplicabilidadeOUTROSRecord
                                                                        .inspecaoExterna !=
                                                                    null &&
                                                                outrosAplicabilidadeOUTROSRecord
                                                                        .inspecaoExterna !=
                                                                    '')
                                                        ? true
                                                        : false)
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .start,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Inspeção Periódica Externa',
                                                              textAlign:
                                                                  TextAlign.end,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              valueOrDefault<
                                                                  String>(
                                                                '${outrosAplicabilidadeOUTROSRecord.inspecaoExterna} Anos',
                                                                '-',
                                                              ),
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .start,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Observação',
                                                            textAlign:
                                                                TextAlign.end,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 150.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 390.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 390.0;
                                                            } else {
                                                              return 390.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                  .observacao,
                                                              '-',
                                                            ),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                  ].divide(
                                                      SizedBox(height: 20.0)),
                                                ),
                                              ),
                                              Text(
                                                (outrosAplicabilidadeOUTROSRecord.codigo == 'G2.1') ||
                                                        (outrosAplicabilidadeOUTROSRecord
                                                                .codigo ==
                                                            'G2.2') ||
                                                        (outrosAplicabilidadeOUTROSRecord
                                                                .codigo ==
                                                            'G2.3') ||
                                                        (outrosAplicabilidadeOUTROSRecord
                                                                .codigo ==
                                                            'G2.4') ||
                                                        (outrosAplicabilidadeOUTROSRecord
                                                                .codigo ==
                                                            'G2.5') ||
                                                        (outrosAplicabilidadeOUTROSRecord
                                                                .codigo ==
                                                            'G2.6') ||
                                                        (outrosAplicabilidadeOUTROSRecord
                                                                .codigo ==
                                                            'G2.7') ||
                                                        (outrosAplicabilidadeOUTROSRecord
                                                                .codigo ==
                                                            'G2.8') ||
                                                        (outrosAplicabilidadeOUTROSRecord
                                                                .codigo ==
                                                            'G2.9') ||
                                                        (outrosAplicabilidadeOUTROSRecord
                                                                .codigo ==
                                                            'G2.10') ||
                                                        (outrosAplicabilidadeOUTROSRecord
                                                                .codigo ==
                                                            'G2.11')
                                                    ? '${outrosAplicabilidadeOUTROSRecord.codigo}NR13 NÃO APLICÁVEL!'
                                                    : outrosAplicabilidadeOUTROSRecord
                                                        .codigo,
                                                textAlign: TextAlign.center,
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Inter',
                                                          color:
                                                              Color(0xFF4DA5DF),
                                                          fontSize: 28.0,
                                                          letterSpacing: 0.0,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                        ),
                                              ),
                                              if ((outrosAplicabilidadeOUTROSRecord.codigo == 'G1.1') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.2') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.3') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.4') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.5') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.6') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.7') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.25') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.15') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.8') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.9') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.10') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.11') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.12') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.13') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.14') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.15') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.16') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.17') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.18') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.19') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.20') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.21') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.22') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.23') ||
                                                  (outrosAplicabilidadeOUTROSRecord
                                                          .codigo ==
                                                      'G1.24'))
                                                Padding(
                                                  padding: EdgeInsetsDirectional
                                                      .fromSTEB(
                                                          0.0, 80.0, 0.0, 0.0),
                                                  child: Column(
                                                    mainAxisSize:
                                                        MainAxisSize.max,
                                                    children: [
                                                      SizedBox(
                                                        width: 800.0,
                                                        child: Divider(
                                                          thickness: 1.0,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primaryBackground,
                                                        ),
                                                      ),
                                                      Text(
                                                        'CADASTRAR/ATUALIZAR PLANO DE INSPEÇÃO',
                                                        textAlign:
                                                            TextAlign.center,
                                                        style:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                      ),
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .start,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Inspeção Periódica Interna',
                                                              textAlign:
                                                                  TextAlign.end,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: 390.0,
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Expanded(
                                                                  child: Row(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    children: [
                                                                      Expanded(
                                                                        child:
                                                                            Row(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                                                                              child: Container(
                                                                                width: 100.0,
                                                                                child: TextFormField(
                                                                                  controller: _model.periodiG1TxtInternaOutrosTextController ??= TextEditingController(
                                                                                    text: outrosAplicabilidadeOUTROSRecord.inspecaoInterna,
                                                                                  ),
                                                                                  focusNode: _model.periodiG1TxtInternaOutrosFocusNode,
                                                                                  autofocus: true,
                                                                                  obscureText: false,
                                                                                  decoration: InputDecoration(
                                                                                    isDense: true,
                                                                                    labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                          fontFamily: 'Inter',
                                                                                          letterSpacing: 0.0,
                                                                                        ),
                                                                                    hintStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                          fontFamily: 'Inter',
                                                                                          color: FlutterFlowTheme.of(context).primaryText,
                                                                                          letterSpacing: 0.0,
                                                                                        ),
                                                                                    enabledBorder: UnderlineInputBorder(
                                                                                      borderSide: BorderSide(
                                                                                        color: FlutterFlowTheme.of(context).secondaryText,
                                                                                        width: 2.0,
                                                                                      ),
                                                                                      borderRadius: BorderRadius.circular(0.0),
                                                                                    ),
                                                                                    focusedBorder: UnderlineInputBorder(
                                                                                      borderSide: BorderSide(
                                                                                        color: FlutterFlowTheme.of(context).primary,
                                                                                        width: 2.0,
                                                                                      ),
                                                                                      borderRadius: BorderRadius.circular(0.0),
                                                                                    ),
                                                                                    errorBorder: UnderlineInputBorder(
                                                                                      borderSide: BorderSide(
                                                                                        color: FlutterFlowTheme.of(context).error,
                                                                                        width: 2.0,
                                                                                      ),
                                                                                      borderRadius: BorderRadius.circular(0.0),
                                                                                    ),
                                                                                    focusedErrorBorder: UnderlineInputBorder(
                                                                                      borderSide: BorderSide(
                                                                                        color: FlutterFlowTheme.of(context).error,
                                                                                        width: 2.0,
                                                                                      ),
                                                                                      borderRadius: BorderRadius.circular(0.0),
                                                                                    ),
                                                                                  ),
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Inter',
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                  keyboardType: TextInputType.number,
                                                                                  validator: _model.periodiG1TxtInternaOutrosTextControllerValidator.asValidator(context),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'Anos',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Inter',
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                      Row(
                                                        mainAxisSize:
                                                            MainAxisSize.min,
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .start,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Container(
                                                            width: () {
                                                              if (MediaQuery.sizeOf(
                                                                          context)
                                                                      .width <
                                                                  kBreakpointSmall) {
                                                                return 150.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointMedium) {
                                                                return 390.0;
                                                              } else if (MediaQuery
                                                                          .sizeOf(
                                                                              context)
                                                                      .width <
                                                                  kBreakpointLarge) {
                                                                return 390.0;
                                                              } else {
                                                                return 390.0;
                                                              }
                                                            }(),
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Text(
                                                              'Inspeção Periódica Externa',
                                                              textAlign:
                                                                  TextAlign.end,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                            ),
                                                          ),
                                                          Container(
                                                            width: 390.0,
                                                            decoration:
                                                                BoxDecoration(),
                                                            child: Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Expanded(
                                                                  child: Row(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    children: [
                                                                      Expanded(
                                                                        child:
                                                                            Row(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Expanded(
                                                                              child: Row(
                                                                                mainAxisSize: MainAxisSize.max,
                                                                                children: [
                                                                                  Padding(
                                                                                    padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                                                                                    child: Container(
                                                                                      width: 100.0,
                                                                                      child: TextFormField(
                                                                                        controller: _model.periodiG1TxtExtOutrosTextController ??= TextEditingController(
                                                                                          text: outrosAplicabilidadeOUTROSRecord.inspecaoExterna,
                                                                                        ),
                                                                                        focusNode: _model.periodiG1TxtExtOutrosFocusNode,
                                                                                        autofocus: true,
                                                                                        obscureText: false,
                                                                                        decoration: InputDecoration(
                                                                                          isDense: true,
                                                                                          labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                                fontFamily: 'Inter',
                                                                                                letterSpacing: 0.0,
                                                                                              ),
                                                                                          hintStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                                                                                fontFamily: 'Inter',
                                                                                                color: FlutterFlowTheme.of(context).primaryText,
                                                                                                letterSpacing: 0.0,
                                                                                              ),
                                                                                          enabledBorder: UnderlineInputBorder(
                                                                                            borderSide: BorderSide(
                                                                                              color: FlutterFlowTheme.of(context).secondaryText,
                                                                                              width: 2.0,
                                                                                            ),
                                                                                            borderRadius: BorderRadius.circular(0.0),
                                                                                          ),
                                                                                          focusedBorder: UnderlineInputBorder(
                                                                                            borderSide: BorderSide(
                                                                                              color: FlutterFlowTheme.of(context).primary,
                                                                                              width: 2.0,
                                                                                            ),
                                                                                            borderRadius: BorderRadius.circular(0.0),
                                                                                          ),
                                                                                          errorBorder: UnderlineInputBorder(
                                                                                            borderSide: BorderSide(
                                                                                              color: FlutterFlowTheme.of(context).error,
                                                                                              width: 2.0,
                                                                                            ),
                                                                                            borderRadius: BorderRadius.circular(0.0),
                                                                                          ),
                                                                                          focusedErrorBorder: UnderlineInputBorder(
                                                                                            borderSide: BorderSide(
                                                                                              color: FlutterFlowTheme.of(context).error,
                                                                                              width: 2.0,
                                                                                            ),
                                                                                            borderRadius: BorderRadius.circular(0.0),
                                                                                          ),
                                                                                        ),
                                                                                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                              fontFamily: 'Inter',
                                                                                              letterSpacing: 0.0,
                                                                                            ),
                                                                                        keyboardType: TextInputType.number,
                                                                                        validator: _model.periodiG1TxtExtOutrosTextControllerValidator.asValidator(context),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  Text(
                                                                                    'Anos',
                                                                                    style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                          fontFamily: 'Inter',
                                                                                          letterSpacing: 0.0,
                                                                                        ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ].divide(SizedBox(
                                                            width: 20.0)),
                                                      ),
                                                      FFButtonWidget(
                                                        onPressed: () async {
                                                          await outrosAplicabilidadeOUTROSRecord
                                                              .reference
                                                              .update(
                                                                  createAplicabilidadeOUTROSRecordData(
                                                            inspecaoInterna: _model
                                                                .periodiG1TxtInternaOutrosTextController
                                                                .text,
                                                            inspecaoExterna: _model
                                                                .periodiG1TxtExtOutrosTextController
                                                                .text,
                                                          ));
                                                          _model.equipToUpdateOUTROS =
                                                              await queryEquipamentosRecordOnce(
                                                            queryBuilder:
                                                                (equipamentosRecord) =>
                                                                    equipamentosRecord
                                                                        .where(
                                                              'Nome',
                                                              isEqualTo:
                                                                  outrosAplicabilidadeOUTROSRecord
                                                                      .equipamento,
                                                            ),
                                                            singleRecord: true,
                                                          ).then((s) => s
                                                                  .firstOrNull);

                                                          await _model
                                                              .equipToUpdateOUTROS!
                                                              .reference
                                                              .update(
                                                                  createEquipamentosRecordData(
                                                            interna: _model
                                                                .periodiG1TxtInternaOutrosTextController
                                                                .text,
                                                            externa: _model
                                                                .periodiG1TxtExtOutrosTextController
                                                                .text,
                                                          ));
                                                          await showDialog(
                                                            context: context,
                                                            builder:
                                                                (alertDialogContext) {
                                                              return AlertDialog(
                                                                title: Text(
                                                                    'Sucesso!'),
                                                                content: Text(
                                                                    'Inspeção salva com sucesso.'),
                                                                actions: [
                                                                  TextButton(
                                                                    onPressed: () =>
                                                                        Navigator.pop(
                                                                            alertDialogContext),
                                                                    child: Text(
                                                                        'Ok'),
                                                                  ),
                                                                ],
                                                              );
                                                            },
                                                          );

                                                          setState(() {});
                                                        },
                                                        text: 'Salvar',
                                                        options:
                                                            FFButtonOptions(
                                                          height: 40.0,
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      24.0,
                                                                      0.0,
                                                                      24.0,
                                                                      0.0),
                                                          iconPadding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      0.0,
                                                                      0.0),
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primary,
                                                          textStyle:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .titleSmall
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                          elevation: 3.0,
                                                          borderSide:
                                                              BorderSide(
                                                            color: Colors
                                                                .transparent,
                                                            width: 1.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      8.0),
                                                        ),
                                                      ),
                                                      SizedBox(
                                                        width: 800.0,
                                                        child: Divider(
                                                          thickness: 1.0,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primaryBackground,
                                                        ),
                                                      ),
                                                    ].divide(
                                                        SizedBox(height: 40.0)),
                                                  ),
                                                ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 80.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.center,
                                                  children: [
                                                    Text(
                                                      'RESPOSTAS',
                                                      textAlign:
                                                          TextAlign.center,
                                                      style: FlutterFlowTheme
                                                              .of(context)
                                                          .labelMedium
                                                          .override(
                                                            fontFamily: 'Inter',
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .secondaryText,
                                                            fontSize: 16.0,
                                                            letterSpacing: 0.0,
                                                            fontWeight:
                                                                FontWeight.bold,
                                                          ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 40.0, 0.0, 0.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.recipienteTransportavel ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .recipienteTransportavel ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Recipiente Transportável',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.reservatorioPortatilFluidoComprimido ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .reservatorioPortatilFluidoComprimido ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Reservatório Portátil de Fluido Comprimido',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.extintorIncendio ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .extintorIncendio ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Extintor de Incêndio',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.dutoSeusComponentes ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .dutoSeusComponentes ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Duto e Seus Componentes',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.forno ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .forno ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Forno',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 20.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.serpentinaTrocaTermica ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .serpentinaTrocaTermica ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Serpentina Para Troca Térmica',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.aquecedorFluidoTermico ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .aquecedorFluidoTermico ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Aquecedor de Fluido Térmico',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.geradorVapor ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .geradorVapor ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Gerador de Vapor',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.trocadorCalorPlacasCorrugadas ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .trocadorCalorPlacasCorrugadas ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Align(
                                                            alignment:
                                                                AlignmentDirectional(
                                                                    0.0, 0.0),
                                                            child: Text(
                                                              'Trocador de Calor de Placas Corrugadas',
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .labelMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        16.0,
                                                                    letterSpacing:
                                                                        0.0,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .normal,
                                                                  ),
                                                            ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.tuboSistemaInstrumentacao ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .tuboSistemaInstrumentacao ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Tubo de Sistema de Instrumentação',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.acumuladorExploracaoProducaoPetroleo ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .acumuladorExploracaoProducaoPetroleo ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Acumulador Para Exploração e Produção de Petróleo',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.acumuladorHidraulico ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .acumuladorHidraulico ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Acumulador Hidráulico',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.panelaCoccao ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .panelaCoccao ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Panela de Cocção',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.enquadradoCodigoVP ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .enquadradoCodigoVP ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Enquadrado em Código de Vaso de Pressão',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                    Row(
                                                      mainAxisSize:
                                                          MainAxisSize.min,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      children: [
                                                        Container(
                                                          width: 100.0,
                                                          height: 40.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: outrosAplicabilidadeOUTROSRecord.enquadradoCodigoCaldeira ==
                                                                    '1'
                                                                ? FlutterFlowTheme.of(
                                                                        context)
                                                                    .success
                                                                : FlutterFlowTheme.of(
                                                                        context)
                                                                    .error,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          alignment:
                                                              AlignmentDirectional(
                                                                  0.0, 0.0),
                                                          child: Text(
                                                            valueOrDefault<
                                                                String>(
                                                              outrosAplicabilidadeOUTROSRecord
                                                                          .enquadradoCodigoCaldeira ==
                                                                      '1'
                                                                  ? 'SIM'
                                                                  : 'NÃO',
                                                              '-',
                                                            ),
                                                            textAlign: TextAlign
                                                                .center,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w600,
                                                                ),
                                                          ),
                                                        ),
                                                        Container(
                                                          width: () {
                                                            if (MediaQuery.sizeOf(
                                                                        context)
                                                                    .width <
                                                                kBreakpointSmall) {
                                                              return 200.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointMedium) {
                                                              return 500.0;
                                                            } else if (MediaQuery
                                                                        .sizeOf(
                                                                            context)
                                                                    .width <
                                                                kBreakpointLarge) {
                                                              return 600.0;
                                                            } else {
                                                              return 600.0;
                                                            }
                                                          }(),
                                                          decoration:
                                                              BoxDecoration(),
                                                          child: Text(
                                                            'Enquadrado em Código de Caldeira',
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .labelMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Inter',
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondaryText,
                                                                  fontSize:
                                                                      16.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .normal,
                                                                ),
                                                          ),
                                                        ),
                                                      ].divide(SizedBox(
                                                          width: 15.0)),
                                                    ),
                                                  ].divide(
                                                      SizedBox(height: 35.0)),
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        0.0, 20.0, 0.0, 0.0),
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.end,
                                                  children: [
                                                    Padding(
                                                      padding:
                                                          EdgeInsetsDirectional
                                                              .fromSTEB(
                                                                  0.0,
                                                                  0.0,
                                                                  20.0,
                                                                  0.0),
                                                      child: FFButtonWidget(
                                                        onPressed: () async {
                                                          setState(() {
                                                            _model.showAvaliacaoOUTROS =
                                                                false;
                                                          });
                                                        },
                                                        text: 'Voltar',
                                                        options:
                                                            FFButtonOptions(
                                                          height: 40.0,
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      24.0,
                                                                      0.0,
                                                                      24.0,
                                                                      0.0),
                                                          iconPadding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      0.0,
                                                                      0.0,
                                                                      0.0,
                                                                      0.0),
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primary,
                                                          textStyle:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .titleSmall
                                                                  .override(
                                                                    fontFamily:
                                                                        'Inter',
                                                                    color: Colors
                                                                        .white,
                                                                    letterSpacing:
                                                                        0.0,
                                                                  ),
                                                          elevation: 3.0,
                                                          borderSide:
                                                              BorderSide(
                                                            color: Colors
                                                                .transparent,
                                                            width: 1.0,
                                                          ),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      8.0),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Padding(
                                                padding: EdgeInsetsDirectional
                                                    .fromSTEB(
                                                        10.0, 0.0, 0.0, 20.0),
                                                child: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  children: [
                                                    Container(
                                                      decoration: BoxDecoration(
                                                        color: FlutterFlowTheme
                                                                .of(context)
                                                            .secondaryBackground,
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  );
                                },
                              ),
                          ].divide(SizedBox(height: 15.0)),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              Column(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Material(
                    color: Colors.transparent,
                    elevation: 3.0,
                    child: Container(
                      height: 50.0,
                      decoration: BoxDecoration(
                        color: FlutterFlowTheme.of(context).secondaryBackground,
                      ),
                      child: Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(
                            0.0, 10.0, 0.0, 10.0),
                        child: Row(
                          mainAxisSize: MainAxisSize.max,
                          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            AlignedTooltip(
                              content: Padding(
                                padding: EdgeInsets.all(4.0),
                                child: Text(
                                  'Equipamentos',
                                  style: FlutterFlowTheme.of(context)
                                      .bodyLarge
                                      .override(
                                        fontFamily: 'Inter',
                                        letterSpacing: 0.0,
                                      ),
                                ),
                              ),
                              offset: 4.0,
                              preferredDirection: AxisDirection.down,
                              borderRadius: BorderRadius.circular(8.0),
                              backgroundColor: FlutterFlowTheme.of(context)
                                  .secondaryBackground,
                              elevation: 4.0,
                              tailBaseWidth: 24.0,
                              tailLength: 12.0,
                              waitDuration: Duration(milliseconds: 100),
                              showDuration: Duration(milliseconds: 1500),
                              triggerMode: TooltipTriggerMode.tap,
                              child: InkWell(
                                splashColor: Colors.transparent,
                                focusColor: Colors.transparent,
                                hoverColor: Colors.transparent,
                                highlightColor: Colors.transparent,
                                onTap: () async {
                                  await _model.resetAplicabilidade(context);

                                  context.pushNamed('Equipamentos');
                                },
                                child: Icon(
                                  Icons.token_outlined,
                                  color: Color(0x60000000),
                                  size: 28.0,
                                ),
                              ),
                            ),
                            AlignedTooltip(
                              content: Padding(
                                padding: EdgeInsets.all(4.0),
                                child: Text(
                                  'Home',
                                  style: FlutterFlowTheme.of(context)
                                      .bodyLarge
                                      .override(
                                        fontFamily: 'Inter',
                                        letterSpacing: 0.0,
                                      ),
                                ),
                              ),
                              offset: 4.0,
                              preferredDirection: AxisDirection.down,
                              borderRadius: BorderRadius.circular(8.0),
                              backgroundColor: FlutterFlowTheme.of(context)
                                  .secondaryBackground,
                              elevation: 4.0,
                              tailBaseWidth: 24.0,
                              tailLength: 12.0,
                              waitDuration: Duration(milliseconds: 100),
                              showDuration: Duration(milliseconds: 1500),
                              triggerMode: TooltipTriggerMode.tap,
                              child: Padding(
                                padding: EdgeInsetsDirectional.fromSTEB(
                                    10.0, 0.0, 10.0, 0.0),
                                child: InkWell(
                                  splashColor: Colors.transparent,
                                  focusColor: Colors.transparent,
                                  hoverColor: Colors.transparent,
                                  highlightColor: Colors.transparent,
                                  onTap: () async {
                                    await _model.resetAplicabilidade(context);

                                    context.pushNamed('Home');
                                  },
                                  child: Icon(
                                    Icons.circle_outlined,
                                    color: FlutterFlowTheme.of(context).primary,
                                    size: 30.0,
                                  ),
                                ),
                              ),
                            ),
                            AlignedTooltip(
                              content: Padding(
                                padding: EdgeInsets.all(4.0),
                                child: Text(
                                  'Inspeções',
                                  style: FlutterFlowTheme.of(context)
                                      .bodyLarge
                                      .override(
                                        fontFamily: 'Inter',
                                        letterSpacing: 0.0,
                                      ),
                                ),
                              ),
                              offset: 4.0,
                              preferredDirection: AxisDirection.down,
                              borderRadius: BorderRadius.circular(8.0),
                              backgroundColor: FlutterFlowTheme.of(context)
                                  .secondaryBackground,
                              elevation: 4.0,
                              tailBaseWidth: 24.0,
                              tailLength: 12.0,
                              waitDuration: Duration(milliseconds: 100),
                              showDuration: Duration(milliseconds: 1500),
                              triggerMode: TooltipTriggerMode.tap,
                              child: InkWell(
                                splashColor: Colors.transparent,
                                focusColor: Colors.transparent,
                                hoverColor: Colors.transparent,
                                highlightColor: Colors.transparent,
                                onTap: () async {
                                  await _model.resetAplicabilidade(context);

                                  context.pushNamed('InspecoesLvs');
                                },
                                child: Icon(
                                  Icons.calendar_month_outlined,
                                  color: Color(0x8A000000),
                                  size: 26.0,
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}
